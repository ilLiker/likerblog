{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/zhaoo/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/js/modules.js","path":"js/modules.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/js/color-mode.js","path":"js/color-mode.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/js/zui.js","path":"js/zui.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/theme/cloud.png","path":"images/theme/cloud.png","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/theme/loading.gif","path":"images/theme/loading.gif","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/theme/post-image.jpg","path":"images/theme/post-image.jpg","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/theme/welcome-image.jpg","path":"images/theme/welcome-image.jpg","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/icons/apple-touch-icon.png","path":"images/icons/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/icons/favicon-144x144.png","path":"images/icons/favicon-144x144.png","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/icons/favicon-16x16.png","path":"images/icons/favicon-16x16.png","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/icons/favicon-32x32.png","path":"images/icons/favicon-32x32.png","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/icons/zhaoo-logo.png","path":"images/icons/zhaoo-logo.png","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/fancybox/fancybox.css","path":"lib/fancybox/fancybox.css","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/fancybox/fancybox.js","path":"lib/fancybox/fancybox.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/jquery/jquery.js","path":"lib/jquery/jquery.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/gitalk/gitalk.css","path":"lib/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/gitalk/gitalk.js","path":"lib/gitalk/gitalk.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/highlight/a11y-dark.css","path":"lib/highlight/a11y-dark.css","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/highlight/highlight.js","path":"lib/highlight/highlight.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/lazyload/lazyload.js","path":"lib/lazyload/lazyload.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/pjax/pjax.js","path":"lib/pjax/pjax.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/CDH安装.md","hash":"e6594db56c25fd1fe8b06842c728866e66f1f58a","modified":1603695374772},{"_id":"source/_posts/ConcurrentHashMap.md","hash":"cb7c4e39cdc1cf45724e3940ed61e6983979d55d","modified":1603695374772},{"_id":"source/_posts/HashMap.md","hash":"61af795221da45c3d7d19d7cf2e2a091d88cf7bf","modified":1603695374773},{"_id":"source/_posts/Kafka ISR.md","hash":"062e7c6061ec626b31a4727945a4d96d632c7053","modified":1603695374773},{"_id":"source/_posts/My-New-Post.md","hash":"014bdfd0dd31296938487bfeb9cbddb00a0e5fba","modified":1603695374774},{"_id":"source/_posts/filename.md","hash":"6321299c792c4397b9b58519ae7fea005fae15dc","modified":1603695374774},{"_id":"source/_posts/flink.md","hash":"bbd104650ea63b4c29c0ad44b7ebf08b01d3fed3","modified":1603695374775},{"_id":"source/_posts/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1603695374775},{"_id":"source/_posts/多线程与高并发1.md","hash":"b3ecb6e1131753e68304df93d7c5295b80664375","modified":1603695374776},{"_id":"source/_posts/语录.md","hash":"6931ecfa21fd98733f40e4ac410d07f718994cf7","modified":1603695374777},{"_id":"themes/zhaoo/.gitignore","hash":"0d5c2fdbdc974f10150baa12e1fc171a34960ed8","modified":1603681098281},{"_id":"themes/zhaoo/LICENSE","hash":"212211b73f97708e0e243f95eb5adbcdaa1e685d","modified":1603681098282},{"_id":"themes/zhaoo/README.md","hash":"afbf766272106cac6e6420a6788a9c76ef68ced5","modified":1603681098282},{"_id":"themes/zhaoo/README_EN.md","hash":"60aa77c536510aae5af6aff7d7ce498d41388f9e","modified":1603681098283},{"_id":"themes/zhaoo/_config.yml","hash":"59b54d7d75b17613a07220bf2ee751388066bbe4","modified":1603683153299},{"_id":"themes/zhaoo/languages/default.yml","hash":"cb49d6c405ac17b25c8822bc0050fabdf03ae535","modified":1603681098294},{"_id":"themes/zhaoo/languages/it.yml","hash":"2b5323867169b25e52009696680a12811b226c1e","modified":1603681098296},{"_id":"themes/zhaoo/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1603681098295},{"_id":"themes/zhaoo/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1603681098296},{"_id":"themes/zhaoo/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1603681098297},{"_id":"themes/zhaoo/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1603681098296},{"_id":"themes/zhaoo/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1603681098298},{"_id":"themes/zhaoo/languages/zh-CN.yml","hash":"a10d783759847b5c2fc460f3e99000588e76d7ea","modified":1603681098298},{"_id":"themes/zhaoo/hexo-generator-restful/.npmignore","hash":"fa3b2eb70de258c0efb3efac3dceb5abd7c92666","modified":1603681927950},{"_id":"themes/zhaoo/hexo-generator-restful/.gitignore","hash":"6993cdad70ce92d2734ccd7a0a944e539a79e738","modified":1603681927950},{"_id":"themes/zhaoo/hexo-generator-restful/LICENSE","hash":"2246928c4808964a9cacc50612674ece7ae68210","modified":1603681927951},{"_id":"themes/zhaoo/hexo-generator-restful/README.md","hash":"6e66dcea78e1adfbc1066dc8b16949f2ef78d9dc","modified":1603681927951},{"_id":"themes/zhaoo/hexo-generator-restful/index.js","hash":"4389c27e19685cd29f0bc448bf7386bfe2b6142b","modified":1603681927951},{"_id":"themes/zhaoo/hexo-generator-restful/package.json","hash":"acf686f62a40c8e400499383faa9102bc9c15c52","modified":1603681927952},{"_id":"themes/zhaoo/layout/archive.ejs","hash":"1302c62d678818578e19edd71cab85902a4631df","modified":1603681098313},{"_id":"themes/zhaoo/layout/categories.ejs","hash":"05cb593341f496282492f1000ac7e0dd5c28cd1e","modified":1603681098313},{"_id":"themes/zhaoo/layout/galleries.ejs","hash":"1ef5252c45a2570a5070d13596ebbb6f91bd063f","modified":1603681098315},{"_id":"themes/zhaoo/layout/category.ejs","hash":"69b2d5c45987d2287027e8c76c938db8f40415fe","modified":1603681098314},{"_id":"themes/zhaoo/layout/gallery.ejs","hash":"a447200a2809b1a29fda17bcfeec7e1e9b550184","modified":1603681098315},{"_id":"themes/zhaoo/layout/index.ejs","hash":"db5f4c840337d5e7579b37a487fd76234fac9175","modified":1603681098316},{"_id":"themes/zhaoo/layout/layout.ejs","hash":"d8774e6381543c19e77fa3de6581e7580285ee86","modified":1603681098316},{"_id":"themes/zhaoo/layout/post.ejs","hash":"f5346c322dcc31849bb003abfec649906b01899a","modified":1603681098316},{"_id":"themes/zhaoo/layout/tag.ejs","hash":"9a7d5d9ae7b15c561519b96b88c770b30e3ddcf8","modified":1603681098317},{"_id":"themes/zhaoo/layout/tags.ejs","hash":"5299b5ea61e430655bdec174e8fdb602b4fe537e","modified":1603681098317},{"_id":"themes/zhaoo/screenshots/.DS_Store","hash":"c0e01b9e4093fc4831ab1c52042458bb14a2e29b","modified":1603681098318},{"_id":"themes/zhaoo/scripts/carrier.js","hash":"f0297ca112ffdfed6147e869e4b37ca5d96f0e1b","modified":1603681098353},{"_id":"themes/zhaoo/scripts/entry.js","hash":"1a2697495a1eeb4efbab3c8ac6bf31ce5964c085","modified":1603681098354},{"_id":"themes/zhaoo/scripts/lazyload.js","hash":"5916a12165b22b9e00d41577f86b3e1b37e5951a","modified":1603681098354},{"_id":"themes/zhaoo/scripts/merge-config.js","hash":"c87ed49ddd95a900b4e105eafbe8b34cb36ab8d0","modified":1603681098355},{"_id":"themes/zhaoo/scripts/post-image.js","hash":"225f3f153d39f413cad75bb43bd3e2d85cc2d4d2","modified":1603681098356},{"_id":"themes/zhaoo/scripts/title.js","hash":"d19f444206ea11aff52b5f55756ba082f63b7e6a","modified":1603681098356},{"_id":"themes/zhaoo/hexo-generator-restful/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1603681927930},{"_id":"themes/zhaoo/hexo-generator-restful/.git/config","hash":"fa6d744fdc182f8cced0e0e2e26f6113f3048c66","modified":1603681927940},{"_id":"themes/zhaoo/hexo-generator-restful/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1603681926066},{"_id":"themes/zhaoo/hexo-generator-restful/.git/index","hash":"0920e1f69648cb0cf58c40f94b11a7c34e34f1ae","modified":1603681927953},{"_id":"themes/zhaoo/hexo-generator-restful/.git/packed-refs","hash":"e6c00faebe34b8ce66736811d008c884b313f20a","modified":1603681927918},{"_id":"themes/zhaoo/hexo-generator-restful/lib/generator.js","hash":"6910e1bb37c94b6968b13430b89eae995f25e6cd","modified":1603681927952},{"_id":"themes/zhaoo/layout/_partial/footer.ejs","hash":"3db1102c2dfdad6c87dfe817deb4187727fe5324","modified":1603681098302},{"_id":"themes/zhaoo/layout/_partial/header.ejs","hash":"b61698fd5ecb5c84725a9e6ddba6cdaf04b6e063","modified":1603681098303},{"_id":"themes/zhaoo/layout/_partial/head.ejs","hash":"5d1351480c4945c35f816797f63e483ef55dcc8b","modified":1603681098302},{"_id":"themes/zhaoo/layout/_partial/menu.ejs","hash":"fcd706da40c949e678aead3e53b64a57028c41a3","modified":1603681098305},{"_id":"themes/zhaoo/layout/_partial/navbar.ejs","hash":"18530c4fb7606ede2103f955cb63b6cb61e0b1b4","modified":1603681098306},{"_id":"themes/zhaoo/layout/_partial/script.ejs","hash":"97ea98178ef00b452c85cdf8de9a4d80600e00c2","modified":1603681098312},{"_id":"themes/zhaoo/source/css/style.styl","hash":"7fa02eac24fa73babaf01ed0a5a17412e9e4ed91","modified":1603681098370},{"_id":"themes/zhaoo/source/js/modules.js","hash":"c2801dbf48004abc55c192c913d312fed26ce92b","modified":1603681098393},{"_id":"themes/zhaoo/source/js/color-mode.js","hash":"d94748d0493ce741c461827b1864608ef4cdbfb6","modified":1603681098393},{"_id":"themes/zhaoo/source/js/script.js","hash":"1aa9d1eaeb99d1ae6d9c6d99083cafa2426fcdd2","modified":1603681098394},{"_id":"themes/zhaoo/source/js/utils.js","hash":"668c525bfcdc99bedd0db727bcfea65ec7eb017b","modified":1603681098394},{"_id":"themes/zhaoo/source/js/zui.js","hash":"347298cf4e0d83705e6197ac7e26f3aab88776c1","modified":1603681098395},{"_id":"themes/zhaoo/hexo-generator-restful/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1603681926067},{"_id":"themes/zhaoo/hexo-generator-restful/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1603681926067},{"_id":"themes/zhaoo/hexo-generator-restful/.git/hooks/fsmonitor-watchman.sample","hash":"118ff5509f187039734d04456bf01e44c933ac19","modified":1603681926068},{"_id":"themes/zhaoo/hexo-generator-restful/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1603681926068},{"_id":"themes/zhaoo/hexo-generator-restful/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1603681926069},{"_id":"themes/zhaoo/hexo-generator-restful/.git/hooks/pre-commit.sample","hash":"a79d057388ee2c2fe6561d7697f1f5efcff96f23","modified":1603681926069},{"_id":"themes/zhaoo/hexo-generator-restful/.git/hooks/pre-merge-commit.sample","hash":"04c64e58bc25c149482ed45dbd79e40effb89eb7","modified":1603681926070},{"_id":"themes/zhaoo/hexo-generator-restful/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1603681926070},{"_id":"themes/zhaoo/hexo-generator-restful/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1603681926070},{"_id":"themes/zhaoo/hexo-generator-restful/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1603681926071},{"_id":"themes/zhaoo/hexo-generator-restful/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1603681926071},{"_id":"themes/zhaoo/hexo-generator-restful/.git/hooks/update.sample","hash":"92e81cca38312414b140f52b9de0655ee232f65f","modified":1603681926071},{"_id":"themes/zhaoo/hexo-generator-restful/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1603681926072},{"_id":"themes/zhaoo/hexo-generator-restful/.git/logs/HEAD","hash":"a09fb3f0c9cb23e6264825a97b20bbfcb59fe682","modified":1603681927936},{"_id":"themes/zhaoo/_example/source/_data/galleries.json","hash":"b3fa80850a73242ee672fa4d52ed4fc9f6ad8a4c","modified":1603681098285},{"_id":"themes/zhaoo/_example/source/_data/local_images.json","hash":"389aba8e33eb758fbb0b0aa885fd7989f3ec8a0a","modified":1603681098286},{"_id":"themes/zhaoo/_example/source/categories/index.md","hash":"ac97d61802f6121730ef0df581df44f077b39825","modified":1603681098289},{"_id":"themes/zhaoo/_example/source/about/index.md","hash":"0b709a43380e20fd035458fc55f938f8d9e7f681","modified":1603681098289},{"_id":"themes/zhaoo/_example/source/galleries/index.md","hash":"e762f0065f939e26517997011351e861c1c892a5","modified":1603681098291},{"_id":"themes/zhaoo/_example/source/_posts/hexo-theme-zhaoo-doc.md","hash":"ac56e7582d70c29001a9b19777896c0ff7960f76","modified":1603681098287},{"_id":"themes/zhaoo/_example/source/_posts/hexo-theme-zhaoo.md","hash":"c2d6f9d78a380d497bec71212a74e5f9dfd08661","modified":1603681098288},{"_id":"themes/zhaoo/_example/source/tags/index.md","hash":"ac6092f4765a6475992060e38742909f22799e4a","modified":1603681098293},{"_id":"themes/zhaoo/layout/_partial/common/daovoice.ejs","hash":"e95c8e3a046acab8af627e1d4d4ed88d00837e32","modified":1603681098299},{"_id":"themes/zhaoo/layout/_partial/common/fab.ejs","hash":"ba965e24d08689675618d7b5d18373bb5ae984ae","modified":1603681098300},{"_id":"themes/zhaoo/layout/_partial/common/loading.ejs","hash":"81680b42a796d4d500eda9c5d87d8e80e4b938b2","modified":1603681098300},{"_id":"themes/zhaoo/layout/_partial/common/paginator.ejs","hash":"22286f7da425ad2d70fac50337fffa2678216408","modified":1603681098301},{"_id":"themes/zhaoo/layout/_partial/common/visitors.ejs","hash":"a4e3f7e70b01b8424676620278d5c0d8fadd93f8","modified":1603681098301},{"_id":"themes/zhaoo/layout/_partial/index/item.ejs","hash":"77027edaa0ffa01f067190e528e2ff9db1bb155a","modified":1603681098304},{"_id":"themes/zhaoo/layout/_partial/index/post.ejs","hash":"6a078ea26aabd9a5ccd9ea807068f653831e700a","modified":1603681098304},{"_id":"themes/zhaoo/layout/_partial/index/preview.ejs","hash":"ec517fc27a140b00940a060583498d9bd92d4f18","modified":1603681098305},{"_id":"themes/zhaoo/layout/_partial/post/article.ejs","hash":"9420ad2ef14487234bd4e7f4bd20bc4bc0344584","modified":1603681098307},{"_id":"themes/zhaoo/layout/_partial/post/comments.ejs","hash":"7ed0d4840a5464a3afdbb0b0df4d89493268a0fb","modified":1603681098307},{"_id":"themes/zhaoo/layout/_partial/post/copyright.ejs","hash":"3747ab002fc3d97f75c9af76cce33aa9f7b3b706","modified":1603681098310},{"_id":"themes/zhaoo/layout/_partial/post/donate.ejs","hash":"8a9a766e67a3ed0d992a6ece94ed7d665ac5798a","modified":1603681098310},{"_id":"themes/zhaoo/layout/_partial/post/head.ejs","hash":"c62786351c0df9191c4fc69b654df2b0a0d7c2e1","modified":1603681098311},{"_id":"themes/zhaoo/layout/_partial/post/nav.ejs","hash":"1bf9e8b64a5cc90fdaf5d42ddfafe4d956863d86","modified":1603681098311},{"_id":"themes/zhaoo/layout/_partial/post/tag.ejs","hash":"229b49b825df3255a41ceddd35418a36e66eb4ae","modified":1603681098312},{"_id":"themes/zhaoo/source/css/_base/color-mode.styl","hash":"9d5e8cf559fe0f0c018f1c80d8af7bd2788fc423","modified":1603681098357},{"_id":"themes/zhaoo/source/css/_base/reset.styl","hash":"4d67f47c0141b774975369717ac0c4d9c29687ac","modified":1603681098358},{"_id":"themes/zhaoo/source/css/_base/zui.styl","hash":"f84a8d6f4687cec5efcbfd6d81b82084099fc3cc","modified":1603681098358},{"_id":"themes/zhaoo/source/css/_components/common.styl","hash":"c56b0cf01885cb024931344f5178fe4fad9602e5","modified":1603681098359},{"_id":"themes/zhaoo/source/css/_components/fab.styl","hash":"076dec6ebc0db5dd686df389d3e6c7cd4e9fd635","modified":1603681098359},{"_id":"themes/zhaoo/source/css/_components/footer.styl","hash":"044ffed45333a53bdd489621cf34c58de17f1593","modified":1603681098360},{"_id":"themes/zhaoo/source/css/_components/header.styl","hash":"c4f486ff965a21546b0e1497aad1ed1c75d5b089","modified":1603681098360},{"_id":"themes/zhaoo/source/css/_components/menu.styl","hash":"fac9ca2afbf3d41d3da1e6bc6d1d25bb35b8e033","modified":1603681098361},{"_id":"themes/zhaoo/source/css/_components/navbar.styl","hash":"2157ab28eb484f0fa5f06b7d69ea408bb11e0d3b","modified":1603681098361},{"_id":"themes/zhaoo/source/css/_components/paginator.styl","hash":"579c1a6aec3c46b2733b1687161ffbdbaaec6b54","modified":1603681098362},{"_id":"themes/zhaoo/source/css/_components/preview.styl","hash":"9d4613f968165fae02f3cd36b4bbc3bc67227f11","modified":1603681098362},{"_id":"themes/zhaoo/source/css/_variables/variables.styl","hash":"a45cfa7b5a958fd33e7d83494d8d02c491223f1a","modified":1603681098369},{"_id":"themes/zhaoo/source/css/_pages/pages.styl","hash":"f561158053bd9f84e07737494626f141ae3a28b2","modified":1603681098368},{"_id":"themes/zhaoo/source/images/theme/loading.gif","hash":"db91090dd60098086993953f88c37a332eea70d7","modified":1603681098382},{"_id":"themes/zhaoo/source/images/icons/.DS_Store","hash":"218aafd607b3eff566e2c49485285c7e6dccb44b","modified":1603681098371},{"_id":"themes/zhaoo/source/images/icons/apple-touch-icon.png","hash":"c1d16404a57db24e985204e7b2b97fa45d5fea0b","modified":1603681098372},{"_id":"themes/zhaoo/source/images/icons/favicon-144x144.png","hash":"e54f440ff564f1235f9c399e2cd435dd502ceb84","modified":1603681098372},{"_id":"themes/zhaoo/source/images/icons/favicon-16x16.png","hash":"86cc7a07ccf09deff3de7b0ef2f82daa282a8b8e","modified":1603681098373},{"_id":"themes/zhaoo/source/images/icons/favicon-32x32.png","hash":"7b095984bd7d07e10fa9b0df8347a933eba8537c","modified":1603681098373},{"_id":"themes/zhaoo/source/images/icons/zhaoo-logo.png","hash":"50f9f5de4207847bba6aecc4c21d21d79f0001fb","modified":1603681098378},{"_id":"themes/zhaoo/source/lib/fancybox/fancybox.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1603681098396},{"_id":"themes/zhaoo/source/lib/gitalk/.DS_Store","hash":"d0c74f5f99535ad14eaec93484abb4ff8dbca277","modified":1603681098399},{"_id":"themes/zhaoo/source/lib/gitalk/gitalk.css","hash":"2300f2218690a06dce07fe7eeb31bcbf014907f7","modified":1603681098400},{"_id":"themes/zhaoo/source/lib/highlight/a11y-dark.css","hash":"9f0c935216015dd88251a6c366bdd00abfe65982","modified":1603681098403},{"_id":"themes/zhaoo/source/lib/highlight/highlight.js","hash":"976504107e1449a98ede49e0b06480a6818ae39e","modified":1603681098404},{"_id":"themes/zhaoo/source/lib/lazyload/lazyload.js","hash":"322b05c0beb539459214aab2d4cec386ccc2c294","modified":1603681098407},{"_id":"themes/zhaoo/source/lib/pjax/pjax.js","hash":"a1e9fe6ad32e947451584531db3fcb0924354a96","modified":1603681098408},{"_id":"themes/zhaoo/hexo-generator-restful/.git/objects/pack/pack-2323cbf881eac10ba2b6501221f77de91ecc9434.idx","hash":"76fc2a6ddab7f1d7099f8f46519cd62ccf47bac1","modified":1603681927836},{"_id":"themes/zhaoo/hexo-generator-restful/.git/objects/pack/pack-2323cbf881eac10ba2b6501221f77de91ecc9434.pack","hash":"079c0b473f7967ecba99853cab215da4272d0ff7","modified":1603681927833},{"_id":"themes/zhaoo/hexo-generator-restful/.git/refs/heads/master","hash":"05ef36a868be324cd9002cec191509f30dfeef6d","modified":1603681927935},{"_id":"themes/zhaoo/_example/source/galleries/colorful/index.md","hash":"1d62f01d2b06bdd51cbac17bb69b031a7205317b","modified":1603681098291},{"_id":"themes/zhaoo/_example/source/galleries/深圳日记/index.md","hash":"0cac4cff71e988970dce718b5c78e023f066dd52","modified":1603681098292},{"_id":"themes/zhaoo/_example/source/galleries/记事/index.md","hash":"a05ad767d8c9df2909a37f6dc35b71c431304721","modified":1603681098292},{"_id":"themes/zhaoo/layout/_partial/post/comments/changyan.ejs","hash":"bfd5abf8a10d08ef3f1149905a40a5b9d65e19bd","modified":1603681098308},{"_id":"themes/zhaoo/layout/_partial/post/comments/gitalk.ejs","hash":"aad0929d3fdf0e90015805a489c66e632f2d60ce","modified":1603681098309},{"_id":"themes/zhaoo/layout/_partial/post/comments/valine.ejs","hash":"e795ea681d05a790dc19c15831d63fcb13accca3","modified":1603681098309},{"_id":"themes/zhaoo/source/css/_pages/_archive/archive.styl","hash":"6f50017eb617c2b9eb400eef810405032955d496","modified":1603681098363},{"_id":"themes/zhaoo/source/css/_pages/_category/categories.styl","hash":"ce06edbffa932fe31b39f0aec6b07524fd084159","modified":1603681098364},{"_id":"themes/zhaoo/source/css/_pages/_gallery/galleries.styl","hash":"d1ccfe444eec69056ec0cd9431c5c04002283a1f","modified":1603681098365},{"_id":"themes/zhaoo/source/css/_pages/_gallery/gallery.styl","hash":"3697c5870137066778d0b05e6a0260e35655c8c9","modified":1603681098365},{"_id":"themes/zhaoo/source/css/_pages/_index/index.styl","hash":"3b40c490263ad5b5ac53ef9c612cae735fc20668","modified":1603681098366},{"_id":"themes/zhaoo/source/css/_pages/_post/post.styl","hash":"e62b82c43b53e58ca2a52cc55faf4e4d6d4dc422","modified":1603681098367},{"_id":"themes/zhaoo/source/css/_pages/_tag/tags.styl","hash":"1331a3b16c76e6920017bfaecb0117dccae8a85a","modified":1603681098368},{"_id":"themes/zhaoo/hexo-generator-restful/.git/logs/refs/heads/master","hash":"a09fb3f0c9cb23e6264825a97b20bbfcb59fe682","modified":1603681927938},{"_id":"themes/zhaoo/hexo-generator-restful/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1603681927928},{"_id":"themes/zhaoo/hexo-generator-restful/.git/logs/refs/remotes/origin/HEAD","hash":"a09fb3f0c9cb23e6264825a97b20bbfcb59fe682","modified":1603681927927},{"_id":"themes/zhaoo/source/lib/fancybox/fancybox.js","hash":"eef46b6fb2e460838cd7328a6e13ecda0cb1e194","modified":1603681098397},{"_id":"themes/zhaoo/source/lib/jquery/jquery.js","hash":"b15f7cfa79519756dff1ad22553fd0ed09024343","modified":1603681098406},{"_id":"themes/zhaoo/source/images/theme/cloud.png","hash":"fdf44a91026ad999dca2f0a42213aabebd783c98","modified":1603681098382},{"_id":"themes/zhaoo/source/lib/gitalk/gitalk.js","hash":"668a325f964a57aace92f46de8ee709768ccd251","modified":1603681098402},{"_id":"themes/zhaoo/screenshots/article.png","hash":"0d3ca9b9bf46dcccbde106e75681ce3ae68ad1a6","modified":1603681098324},{"_id":"themes/zhaoo/source/images/theme/welcome-image.jpg","hash":"0ed1cccda2eefe48096ecd40a92efce0f9cc5280","modified":1603681098392},{"_id":"themes/zhaoo/source/images/theme/post-image.jpg","hash":"b3a0f3b9a580343449f2c9b078d85b64ce94a34d","modified":1603681098387},{"_id":"themes/zhaoo/screenshots/galleries.png","hash":"046eff147c643f430308facf8ee5fb7a53af7a52","modified":1603681098332},{"_id":"themes/zhaoo/screenshots/index.png","hash":"780a11282be309ec7be0fdcdae081f1c41c67586","modified":1603681098342},{"_id":"themes/zhaoo/screenshots/preview.png","hash":"b5332c7deb5ef0e5aee822a86df7c442f855123d","modified":1603681098352},{"_id":"public/2020/10/26/多线程与高并发1/index.html","hash":"de9fa0a908a9a69ab5535638bdadb530b39a4ead","modified":1603696154640},{"_id":"public/2020/10/26/语录/index.html","hash":"3a6d5636ade71a8484028a66176a40b972f2e827","modified":1603695727070},{"_id":"public/2020/10/26/hello-world/index.html","hash":"e8aa4062a4d508279d130ce0f5e9a00e2fb3b678","modified":1603695727070},{"_id":"public/2020/10/26/Kafka ISR/index.html","hash":"8bcad21ee664fbacdde36fbbd3e4dcd5ae3a59da","modified":1603695727070},{"_id":"public/2020/10/26/HashMap/index.html","hash":"56ff5d46b2f678994badaac4ad2979eb1e956a34","modified":1603695727070},{"_id":"public/2020/10/26/CDH安装/index.html","hash":"e91c045320231d723bb9cdf9f1a9fce5ab1aba37","modified":1603695727070},{"_id":"public/2020/10/26/ConcurrentHashMap/index.html","hash":"1ef98f82954b5a7a42af3b11c931db778d210128","modified":1603696511471},{"_id":"public/2020/09/17/My-New-Post/index.html","hash":"eb44880ea9f523e3325c7e5461e5dc6355207c7d","modified":1603695727070},{"_id":"public/archives/index.html","hash":"1940caf32813eb5f44faa3142562de72c074ef10","modified":1603696511471},{"_id":"public/archives/2020/index.html","hash":"929da4a852a7c25cb053419e1fd793249a778319","modified":1603696511471},{"_id":"public/archives/2020/09/index.html","hash":"3a1a13e536a1fa160fc98d3ae7aa6e5a17b5428c","modified":1603696154640},{"_id":"public/archives/2020/10/index.html","hash":"38c06dabcdd1ec844f0d7096fe37ce556e06b984","modified":1603696511471},{"_id":"public/page/2/index.html","hash":"1d7085a228ab0c5ab73663746a73a330a5759f2b","modified":1603696511471},{"_id":"public/tags/CDH，spark/index.html","hash":"4be1460a10a0a632429e3ec1e7218f5caec39221","modified":1603695727070},{"_id":"public/tags/kafka-ISR-副本同步机制/index.html","hash":"4418ad2bfedf1af6307d3f99561ddd73005dd7d0","modified":1603695727070},{"_id":"public/tags/小书匠-语法-MARKDOWN-帮助/index.html","hash":"762a58eb6bcfcc369f6f6969153bb20bcb25b159","modified":1603695727070},{"_id":"public/tags/新建-模板-小书匠/index.html","hash":"c769ee28a911a14a6100e1d72e4668fa06fb21cc","modified":1603695727070},{"_id":"public/2020/10/26/flink/index.html","hash":"1c1fbdfa876a436b7bbb0a27b0674781ac7e1360","modified":1603696511471},{"_id":"public/2020/10/26/filename/index.html","hash":"677392cd0aa0351d1fa803f6b8550815e7a5724e","modified":1603696511471},{"_id":"public/index.html","hash":"663a5e8958b8a414e1155850696bc92c85cd3726","modified":1603696511471},{"_id":"public/tags/线程的概念，启动方式，常用方法/index.html","hash":"e1fe4d835f225ac31559bc74eb8ba48e2a378881","modified":1603695727070},{"_id":"public/images/theme/loading.gif","hash":"db91090dd60098086993953f88c37a332eea70d7","modified":1603695727070},{"_id":"public/images/icons/favicon-144x144.png","hash":"e54f440ff564f1235f9c399e2cd435dd502ceb84","modified":1603695727070},{"_id":"public/images/icons/favicon-16x16.png","hash":"86cc7a07ccf09deff3de7b0ef2f82daa282a8b8e","modified":1603695727070},{"_id":"public/images/icons/apple-touch-icon.png","hash":"c1d16404a57db24e985204e7b2b97fa45d5fea0b","modified":1603695727070},{"_id":"public/images/icons/favicon-32x32.png","hash":"7b095984bd7d07e10fa9b0df8347a933eba8537c","modified":1603695727070},{"_id":"public/images/icons/zhaoo-logo.png","hash":"50f9f5de4207847bba6aecc4c21d21d79f0001fb","modified":1603695727070},{"_id":"public/js/utils.js","hash":"c1c2809a47742d5ba1a0ef57797da08642e177b3","modified":1603695727070},{"_id":"public/js/modules.js","hash":"56a2ddf36d3be17eb3c00b6aacdce719d66d537f","modified":1603695727070},{"_id":"public/js/zui.js","hash":"991f0adccfb4d4f45b796c48ad600409becd0a01","modified":1603695727070},{"_id":"public/js/color-mode.js","hash":"dd3ae95a8dd64dedc00ace1f8480632fb14a0ed5","modified":1603695727070},{"_id":"public/js/script.js","hash":"c6c054891f4d4274a034b77967c21014b1f0dfd5","modified":1603695727070},{"_id":"public/lib/fancybox/fancybox.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1603695727070},{"_id":"public/lib/highlight/a11y-dark.css","hash":"9f0c935216015dd88251a6c366bdd00abfe65982","modified":1603695727070},{"_id":"public/lib/lazyload/lazyload.js","hash":"338318e930487b2791a7bcf53ad4601630cc41e2","modified":1603695727070},{"_id":"public/lib/pjax/pjax.js","hash":"0ced78e5c97127948f5bfbfbb80c4fce5c0f671e","modified":1603695727070},{"_id":"public/css/style.css","hash":"e937a8491e4e889e4c931b395366c7d1147dbd62","modified":1603695727070},{"_id":"public/lib/gitalk/gitalk.css","hash":"99f6725b386bdb0f52d15b0dd7877eaf1ad4c918","modified":1603695727070},{"_id":"public/images/theme/cloud.png","hash":"fdf44a91026ad999dca2f0a42213aabebd783c98","modified":1603695727070},{"_id":"public/lib/highlight/highlight.js","hash":"a52ef27b8a21963326b05ef06f6ee104b8b94e7e","modified":1603695727070},{"_id":"public/lib/fancybox/fancybox.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1603695727070},{"_id":"public/lib/jquery/jquery.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1603695727070},{"_id":"public/images/theme/welcome-image.jpg","hash":"0ed1cccda2eefe48096ecd40a92efce0f9cc5280","modified":1603695727070},{"_id":"public/images/theme/post-image.jpg","hash":"b3a0f3b9a580343449f2c9b078d85b64ce94a34d","modified":1603695727070},{"_id":"public/lib/gitalk/gitalk.js","hash":"266500948447c95aeea95ef6760f192afc96fd5e","modified":1603695727070},{"_id":"source/_posts/es/Query DSL.md","hash":"db3bd999d3a031f8f2e5564281ebb8c33caec42f","modified":1603696055995},{"_id":"source/_posts/es/Search APIS.md","hash":"f709d84f912c9d6638c5786c22baf0651dd9df48","modified":1603696095375},{"_id":"source/_posts/es/Search API.md","hash":"4e3c08666d039d018ba956757f74b0b13c49e4c6","modified":1603696062697},{"_id":"source/_posts/es/JavaAPI.md","hash":"8259d1ee55f1af3ce095f1abce0cf6fde0a3b6e2","modified":1603696080583},{"_id":"public/2020/10/26/es/Search API/index.html","hash":"fe7d41d2d8a1ab205f7e32907f642658e566e3de","modified":1603696154640},{"_id":"public/2020/10/26/es/JavaAPI/index.html","hash":"c371643ae296feada728c6a385db9d45da81907d","modified":1603696154640},{"_id":"public/archives/page/2/index.html","hash":"1940caf32813eb5f44faa3142562de72c074ef10","modified":1603696511471},{"_id":"public/archives/2020/page/2/index.html","hash":"929da4a852a7c25cb053419e1fd793249a778319","modified":1603696511471},{"_id":"public/archives/2020/10/page/2/index.html","hash":"38c06dabcdd1ec844f0d7096fe37ce556e06b984","modified":1603696511471},{"_id":"public/2020/10/26/es/Search APIS/index.html","hash":"fb0d3bb7efa36aa6ca391e36d60f4dc17463ad31","modified":1603696511471},{"_id":"public/2020/10/26/es/Query DSL/index.html","hash":"8a156c11fa0a69a07fcb5873801643fee4f72c6a","modified":1603696154640},{"_id":"public/tags/es-Query-DSL/index.html","hash":"2cdd48e5fc34f2cebfb91fa48d94d2cb6873e3fa","modified":1603696511471},{"_id":"source/_posts/JavaAPI.md","hash":"8259d1ee55f1af3ce095f1abce0cf6fde0a3b6e2","modified":1603696080583},{"_id":"source/_posts/Query DSL.md","hash":"db3bd999d3a031f8f2e5564281ebb8c33caec42f","modified":1603696055995},{"_id":"source/_posts/Search API.md","hash":"4e3c08666d039d018ba956757f74b0b13c49e4c6","modified":1603696062697},{"_id":"source/_posts/Search APIS.md","hash":"f709d84f912c9d6638c5786c22baf0651dd9df48","modified":1603696095375},{"_id":"public/2020/10/26/Search API/index.html","hash":"f5294c142bf0ea93713cd6c019a9c36096607742","modified":1603696511471},{"_id":"public/2020/10/26/JavaAPI/index.html","hash":"b49b141fed622cccb2f332819f389a157b30bbcb","modified":1603696511471},{"_id":"public/2020/10/26/Search APIS/index.html","hash":"8a519b64d532ae145036dbe1eabf63cd7c29842a","modified":1603696511471},{"_id":"public/2020/10/26/Query DSL/index.html","hash":"c7393db0a9615b94c08948a49f7b52b1f6e01a5b","modified":1603696511471}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"CDS安装","renderNumberedHeading":true,"grammar_cjkRuby":true,"_content":"\n配置parcel文件：\n```\n\tmkdir spark_parcel && cd spark_parcel\n\twget http://archive.cloudera.com/spark2/parcels/2.4.0.cloudera2/SPARK2-2.4.0.cloudera2-1.cdh5.13.3.p0.1041012-el7.parcel\n\twget http://archive.cloudera.com/spark2/parcels/2.4.0.cloudera2/SPARK2-2.4.0.cloudera2-1.cdh5.13.3.p0.1041012-el7.parcel.sha1\n\tmv SPARK2-2.4.0.cloudera2-1.cdh5.13.3.p0.1041012-el7.parcel.sha1 SPARK2-2.4.0.cloudera2-1.cdh5.13.3.p0.1041012-el7.parcel.sha\n\twget http://archive.cloudera.com/spark2/parcels/2.4.0.cloudera2/manifest.json\n\tcd ../\n\tmv spark_parcel /var/www/html/\n```\n\nCDH WebUI\n```\n\t\n```","source":"_posts/CDH安装.md","raw":"---\ntitle: CDS安装\ntags: CDH，spark\nrenderNumberedHeading: true\ngrammar_cjkRuby: true\n---\n\n配置parcel文件：\n```\n\tmkdir spark_parcel && cd spark_parcel\n\twget http://archive.cloudera.com/spark2/parcels/2.4.0.cloudera2/SPARK2-2.4.0.cloudera2-1.cdh5.13.3.p0.1041012-el7.parcel\n\twget http://archive.cloudera.com/spark2/parcels/2.4.0.cloudera2/SPARK2-2.4.0.cloudera2-1.cdh5.13.3.p0.1041012-el7.parcel.sha1\n\tmv SPARK2-2.4.0.cloudera2-1.cdh5.13.3.p0.1041012-el7.parcel.sha1 SPARK2-2.4.0.cloudera2-1.cdh5.13.3.p0.1041012-el7.parcel.sha\n\twget http://archive.cloudera.com/spark2/parcels/2.4.0.cloudera2/manifest.json\n\tcd ../\n\tmv spark_parcel /var/www/html/\n```\n\nCDH WebUI\n```\n\t\n```","slug":"CDH安装","published":1,"date":"2020-10-26T06:56:14.772Z","updated":"2020-10-26T06:56:14.772Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgq712t500000gg01hf9hbbg","content":"<p>配置parcel文件：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">mkdir</span> spark_parcel &amp;&amp; cd spark_parcel</span><br><span class=\"line\"><span class=\"attribute\">wget</span> http://archive.cloudera.com/spark<span class=\"number\">2</span>/parcels/<span class=\"number\">2</span>.<span class=\"number\">4</span>.<span class=\"number\">0</span>.cloudera<span class=\"number\">2</span>/SPARK<span class=\"number\">2</span>-<span class=\"number\">2</span>.<span class=\"number\">4</span>.<span class=\"number\">0</span>.cloudera<span class=\"number\">2</span>-<span class=\"number\">1</span>.cdh<span class=\"number\">5</span>.<span class=\"number\">13</span>.<span class=\"number\">3</span>.p<span class=\"number\">0</span>.<span class=\"number\">1041012</span>-el<span class=\"number\">7</span>.parcel</span><br><span class=\"line\"><span class=\"attribute\">wget</span> http://archive.cloudera.com/spark<span class=\"number\">2</span>/parcels/<span class=\"number\">2</span>.<span class=\"number\">4</span>.<span class=\"number\">0</span>.cloudera<span class=\"number\">2</span>/SPARK<span class=\"number\">2</span>-<span class=\"number\">2</span>.<span class=\"number\">4</span>.<span class=\"number\">0</span>.cloudera<span class=\"number\">2</span>-<span class=\"number\">1</span>.cdh<span class=\"number\">5</span>.<span class=\"number\">13</span>.<span class=\"number\">3</span>.p<span class=\"number\">0</span>.<span class=\"number\">1041012</span>-el<span class=\"number\">7</span>.parcel.sha<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attribute\">mv</span> SPARK<span class=\"number\">2</span>-<span class=\"number\">2</span>.<span class=\"number\">4</span>.<span class=\"number\">0</span>.cloudera<span class=\"number\">2</span>-<span class=\"number\">1</span>.cdh<span class=\"number\">5</span>.<span class=\"number\">13</span>.<span class=\"number\">3</span>.p<span class=\"number\">0</span>.<span class=\"number\">1041012</span>-el<span class=\"number\">7</span>.parcel.sha<span class=\"number\">1</span> SPARK<span class=\"number\">2</span>-<span class=\"number\">2</span>.<span class=\"number\">4</span>.<span class=\"number\">0</span>.cloudera<span class=\"number\">2</span>-<span class=\"number\">1</span>.cdh<span class=\"number\">5</span>.<span class=\"number\">13</span>.<span class=\"number\">3</span>.p<span class=\"number\">0</span>.<span class=\"number\">1041012</span>-el<span class=\"number\">7</span>.parcel.sha</span><br><span class=\"line\"><span class=\"attribute\">wget</span> http://archive.cloudera.com/spark<span class=\"number\">2</span>/parcels/<span class=\"number\">2</span>.<span class=\"number\">4</span>.<span class=\"number\">0</span>.cloudera<span class=\"number\">2</span>/manifest.json</span><br><span class=\"line\"><span class=\"attribute\">cd</span> ../</span><br><span class=\"line\"><span class=\"attribute\">mv</span> spark_parcel /var/www/html/</span><br></pre></td></tr></table></figure>\n\n<p>CDH WebUI</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>配置parcel文件：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">mkdir</span> spark_parcel &amp;&amp; cd spark_parcel</span><br><span class=\"line\"><span class=\"attribute\">wget</span> http://archive.cloudera.com/spark<span class=\"number\">2</span>/parcels/<span class=\"number\">2</span>.<span class=\"number\">4</span>.<span class=\"number\">0</span>.cloudera<span class=\"number\">2</span>/SPARK<span class=\"number\">2</span>-<span class=\"number\">2</span>.<span class=\"number\">4</span>.<span class=\"number\">0</span>.cloudera<span class=\"number\">2</span>-<span class=\"number\">1</span>.cdh<span class=\"number\">5</span>.<span class=\"number\">13</span>.<span class=\"number\">3</span>.p<span class=\"number\">0</span>.<span class=\"number\">1041012</span>-el<span class=\"number\">7</span>.parcel</span><br><span class=\"line\"><span class=\"attribute\">wget</span> http://archive.cloudera.com/spark<span class=\"number\">2</span>/parcels/<span class=\"number\">2</span>.<span class=\"number\">4</span>.<span class=\"number\">0</span>.cloudera<span class=\"number\">2</span>/SPARK<span class=\"number\">2</span>-<span class=\"number\">2</span>.<span class=\"number\">4</span>.<span class=\"number\">0</span>.cloudera<span class=\"number\">2</span>-<span class=\"number\">1</span>.cdh<span class=\"number\">5</span>.<span class=\"number\">13</span>.<span class=\"number\">3</span>.p<span class=\"number\">0</span>.<span class=\"number\">1041012</span>-el<span class=\"number\">7</span>.parcel.sha<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attribute\">mv</span> SPARK<span class=\"number\">2</span>-<span class=\"number\">2</span>.<span class=\"number\">4</span>.<span class=\"number\">0</span>.cloudera<span class=\"number\">2</span>-<span class=\"number\">1</span>.cdh<span class=\"number\">5</span>.<span class=\"number\">13</span>.<span class=\"number\">3</span>.p<span class=\"number\">0</span>.<span class=\"number\">1041012</span>-el<span class=\"number\">7</span>.parcel.sha<span class=\"number\">1</span> SPARK<span class=\"number\">2</span>-<span class=\"number\">2</span>.<span class=\"number\">4</span>.<span class=\"number\">0</span>.cloudera<span class=\"number\">2</span>-<span class=\"number\">1</span>.cdh<span class=\"number\">5</span>.<span class=\"number\">13</span>.<span class=\"number\">3</span>.p<span class=\"number\">0</span>.<span class=\"number\">1041012</span>-el<span class=\"number\">7</span>.parcel.sha</span><br><span class=\"line\"><span class=\"attribute\">wget</span> http://archive.cloudera.com/spark<span class=\"number\">2</span>/parcels/<span class=\"number\">2</span>.<span class=\"number\">4</span>.<span class=\"number\">0</span>.cloudera<span class=\"number\">2</span>/manifest.json</span><br><span class=\"line\"><span class=\"attribute\">cd</span> ../</span><br><span class=\"line\"><span class=\"attribute\">mv</span> spark_parcel /var/www/html/</span><br></pre></td></tr></table></figure>\n\n<p>CDH WebUI</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t</span><br></pre></td></tr></table></figure>"},{"title":"ConcurrentHashMap","renderNumberedHeading":true,"grammar_cjkRuby":true,"_content":"\n\n# ConcurrentHashMap\n\t线程安全的Map集合\n## 内部数据结构\n\tConcurrentHashMap的内部是Segment[]数组，Segment中存储的是HashEntry<Key,value>[]数组\n\t其实Segment就类似是一个HashMap\n\t\n## 几个重要的默认参数\n\tconcurrencyLevel\n\tinitialCapacity\n\tloadFactor\n\n## 一个Segment中应该有几个HashEntry\n\t默认情况下 DEFAULT_CONCURRENCY_LEVEL =16 ，DEFAULT_CAPACITY =16\n\tDEFAULT_CONCURRENCY_LEVEL\t代表Segment[]的长度\n\tDEFAULT_CAPACITY\t\t\t代表HashEntry[]的长度\n\t那么按照除法应该是一个Segment创建的时候有一个HashEntry，但是事实却是2\n\t\t因为内部计算中有一部计算按照DEFAULT_CAPACITY/DEFAULT_CONCURRENCY_LEVEL + 1 的计算\n\t\t举个例子 DEFAULT_CONCURRENCY_LEVEL = 16 ， DEFAULT_CAPACITY = 17\n\t\t那么这时 DEFAULT_CAPACITY/DEFAULT_CONCURRENCY_LEVEL = 1，按照除法算得话，一个Segment存一个HashEntry，但是这样的话16个Segment就只能存16个HashEntry了，而我们设置的是17个，这显然不合理；\n\t\t所以会改成一个Segment存两个HashEntry。\n\n## put方法\n\n\t当put时如果要put到的位置的segment为空则会先初始化Segment\n\t然后在放到Segment的HashEntry[]里面\n\t这个过程是使用Unsafe的方式实现的；\n\t当第一个Segment创建好后，后面的Segment会按照第一个Segment为原型进行创建，这样就减少了Segment初始化的一系列的判断；\n\n## HashCode 如何确定Segment和HashEntry的位置？\n\t高位确定的是 在Segment数组的位置\n\t低的几位确定的是 在hashEntry的位置\n\t","source":"_posts/ConcurrentHashMap.md","raw":"---\ntitle: ConcurrentHashMap\ntags: \nrenderNumberedHeading: true\ngrammar_cjkRuby: true\n---\n\n\n# ConcurrentHashMap\n\t线程安全的Map集合\n## 内部数据结构\n\tConcurrentHashMap的内部是Segment[]数组，Segment中存储的是HashEntry<Key,value>[]数组\n\t其实Segment就类似是一个HashMap\n\t\n## 几个重要的默认参数\n\tconcurrencyLevel\n\tinitialCapacity\n\tloadFactor\n\n## 一个Segment中应该有几个HashEntry\n\t默认情况下 DEFAULT_CONCURRENCY_LEVEL =16 ，DEFAULT_CAPACITY =16\n\tDEFAULT_CONCURRENCY_LEVEL\t代表Segment[]的长度\n\tDEFAULT_CAPACITY\t\t\t代表HashEntry[]的长度\n\t那么按照除法应该是一个Segment创建的时候有一个HashEntry，但是事实却是2\n\t\t因为内部计算中有一部计算按照DEFAULT_CAPACITY/DEFAULT_CONCURRENCY_LEVEL + 1 的计算\n\t\t举个例子 DEFAULT_CONCURRENCY_LEVEL = 16 ， DEFAULT_CAPACITY = 17\n\t\t那么这时 DEFAULT_CAPACITY/DEFAULT_CONCURRENCY_LEVEL = 1，按照除法算得话，一个Segment存一个HashEntry，但是这样的话16个Segment就只能存16个HashEntry了，而我们设置的是17个，这显然不合理；\n\t\t所以会改成一个Segment存两个HashEntry。\n\n## put方法\n\n\t当put时如果要put到的位置的segment为空则会先初始化Segment\n\t然后在放到Segment的HashEntry[]里面\n\t这个过程是使用Unsafe的方式实现的；\n\t当第一个Segment创建好后，后面的Segment会按照第一个Segment为原型进行创建，这样就减少了Segment初始化的一系列的判断；\n\n## HashCode 如何确定Segment和HashEntry的位置？\n\t高位确定的是 在Segment数组的位置\n\t低的几位确定的是 在hashEntry的位置\n\t","slug":"ConcurrentHashMap","published":1,"date":"2020-10-26T06:56:14.772Z","updated":"2020-10-26T06:56:14.772Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgq712tb00010gg0bf7wbmws","content":"<h1 id=\"ConcurrentHashMap\"><a href=\"#ConcurrentHashMap\" class=\"headerlink\" title=\"ConcurrentHashMap\"></a>ConcurrentHashMap</h1><pre><code>线程安全的Map集合</code></pre>\n<h2 id=\"内部数据结构\"><a href=\"#内部数据结构\" class=\"headerlink\" title=\"内部数据结构\"></a>内部数据结构</h2><pre><code>ConcurrentHashMap的内部是Segment[]数组，Segment中存储的是HashEntry&lt;Key,value&gt;[]数组\n其实Segment就类似是一个HashMap</code></pre>\n<h2 id=\"几个重要的默认参数\"><a href=\"#几个重要的默认参数\" class=\"headerlink\" title=\"几个重要的默认参数\"></a>几个重要的默认参数</h2><pre><code>concurrencyLevel\ninitialCapacity\nloadFactor</code></pre>\n<h2 id=\"一个Segment中应该有几个HashEntry\"><a href=\"#一个Segment中应该有几个HashEntry\" class=\"headerlink\" title=\"一个Segment中应该有几个HashEntry\"></a>一个Segment中应该有几个HashEntry</h2><pre><code>默认情况下 DEFAULT_CONCURRENCY_LEVEL =16 ，DEFAULT_CAPACITY =16\nDEFAULT_CONCURRENCY_LEVEL    代表Segment[]的长度\nDEFAULT_CAPACITY            代表HashEntry[]的长度\n那么按照除法应该是一个Segment创建的时候有一个HashEntry，但是事实却是2\n    因为内部计算中有一部计算按照DEFAULT_CAPACITY/DEFAULT_CONCURRENCY_LEVEL + 1 的计算\n    举个例子 DEFAULT_CONCURRENCY_LEVEL = 16 ， DEFAULT_CAPACITY = 17\n    那么这时 DEFAULT_CAPACITY/DEFAULT_CONCURRENCY_LEVEL = 1，按照除法算得话，一个Segment存一个HashEntry，但是这样的话16个Segment就只能存16个HashEntry了，而我们设置的是17个，这显然不合理；\n    所以会改成一个Segment存两个HashEntry。</code></pre>\n<h2 id=\"put方法\"><a href=\"#put方法\" class=\"headerlink\" title=\"put方法\"></a>put方法</h2><pre><code>当put时如果要put到的位置的segment为空则会先初始化Segment\n然后在放到Segment的HashEntry[]里面\n这个过程是使用Unsafe的方式实现的；\n当第一个Segment创建好后，后面的Segment会按照第一个Segment为原型进行创建，这样就减少了Segment初始化的一系列的判断；</code></pre>\n<h2 id=\"HashCode-如何确定Segment和HashEntry的位置？\"><a href=\"#HashCode-如何确定Segment和HashEntry的位置？\" class=\"headerlink\" title=\"HashCode 如何确定Segment和HashEntry的位置？\"></a>HashCode 如何确定Segment和HashEntry的位置？</h2><pre><code>高位确定的是 在Segment数组的位置\n低的几位确定的是 在hashEntry的位置</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"ConcurrentHashMap\"><a href=\"#ConcurrentHashMap\" class=\"headerlink\" title=\"ConcurrentHashMap\"></a>ConcurrentHashMap</h1><pre><code>线程安全的Map集合</code></pre>\n<h2 id=\"内部数据结构\"><a href=\"#内部数据结构\" class=\"headerlink\" title=\"内部数据结构\"></a>内部数据结构</h2><pre><code>ConcurrentHashMap的内部是Segment[]数组，Segment中存储的是HashEntry&lt;Key,value&gt;[]数组\n其实Segment就类似是一个HashMap</code></pre>\n<h2 id=\"几个重要的默认参数\"><a href=\"#几个重要的默认参数\" class=\"headerlink\" title=\"几个重要的默认参数\"></a>几个重要的默认参数</h2><pre><code>concurrencyLevel\ninitialCapacity\nloadFactor</code></pre>\n<h2 id=\"一个Segment中应该有几个HashEntry\"><a href=\"#一个Segment中应该有几个HashEntry\" class=\"headerlink\" title=\"一个Segment中应该有几个HashEntry\"></a>一个Segment中应该有几个HashEntry</h2><pre><code>默认情况下 DEFAULT_CONCURRENCY_LEVEL =16 ，DEFAULT_CAPACITY =16\nDEFAULT_CONCURRENCY_LEVEL    代表Segment[]的长度\nDEFAULT_CAPACITY            代表HashEntry[]的长度\n那么按照除法应该是一个Segment创建的时候有一个HashEntry，但是事实却是2\n    因为内部计算中有一部计算按照DEFAULT_CAPACITY/DEFAULT_CONCURRENCY_LEVEL + 1 的计算\n    举个例子 DEFAULT_CONCURRENCY_LEVEL = 16 ， DEFAULT_CAPACITY = 17\n    那么这时 DEFAULT_CAPACITY/DEFAULT_CONCURRENCY_LEVEL = 1，按照除法算得话，一个Segment存一个HashEntry，但是这样的话16个Segment就只能存16个HashEntry了，而我们设置的是17个，这显然不合理；\n    所以会改成一个Segment存两个HashEntry。</code></pre>\n<h2 id=\"put方法\"><a href=\"#put方法\" class=\"headerlink\" title=\"put方法\"></a>put方法</h2><pre><code>当put时如果要put到的位置的segment为空则会先初始化Segment\n然后在放到Segment的HashEntry[]里面\n这个过程是使用Unsafe的方式实现的；\n当第一个Segment创建好后，后面的Segment会按照第一个Segment为原型进行创建，这样就减少了Segment初始化的一系列的判断；</code></pre>\n<h2 id=\"HashCode-如何确定Segment和HashEntry的位置？\"><a href=\"#HashCode-如何确定Segment和HashEntry的位置？\" class=\"headerlink\" title=\"HashCode 如何确定Segment和HashEntry的位置？\"></a>HashCode 如何确定Segment和HashEntry的位置？</h2><pre><code>高位确定的是 在Segment数组的位置\n低的几位确定的是 在hashEntry的位置</code></pre>\n"},{"title":"Kakfa的ISR","renderNumberedHeading":true,"grammar_cjkRuby":true,"_content":"\n### Kafka Replica\n```\n1.每个topic的Replica个数必须小于replication-factor的个数，因为每个broker只能有一个partition的一个副本\n2.当某个topic的replication-factor的个数大于1时，则每个partition都会有n个副本，包含leader和follower\n3.所有partition的Replica会均匀分布到broker上\n```\n\n### 副本如何扩散出去消息？\n```\n\t每个partition有一个leader和多个follower，当producer生产数据时，只会往leader中写数据。\n\tfollower从leader中pull(拉去)数据,过程和consumer消费数据类似。\n\t读数据只会从leader中读，当leader挂掉时，follower顶上去作为leader提供服务，所以consumer并不会从follower中读取数据，follower只是作为副本和预备leader。\n```\n","source":"_posts/Kafka ISR.md","raw":"---\ntitle: Kakfa的ISR\ntags: kafka,ISR,副本同步机制\nrenderNumberedHeading: true\ngrammar_cjkRuby: true\n---\n\n### Kafka Replica\n```\n1.每个topic的Replica个数必须小于replication-factor的个数，因为每个broker只能有一个partition的一个副本\n2.当某个topic的replication-factor的个数大于1时，则每个partition都会有n个副本，包含leader和follower\n3.所有partition的Replica会均匀分布到broker上\n```\n\n### 副本如何扩散出去消息？\n```\n\t每个partition有一个leader和多个follower，当producer生产数据时，只会往leader中写数据。\n\tfollower从leader中pull(拉去)数据,过程和consumer消费数据类似。\n\t读数据只会从leader中读，当leader挂掉时，follower顶上去作为leader提供服务，所以consumer并不会从follower中读取数据，follower只是作为副本和预备leader。\n```\n","slug":"Kafka ISR","published":1,"date":"2020-10-26T06:56:14.773Z","updated":"2020-10-26T06:56:14.773Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgq712te00030gg09r0pf7zp","content":"<h3 id=\"Kafka-Replica\"><a href=\"#Kafka-Replica\" class=\"headerlink\" title=\"Kafka Replica\"></a>Kafka Replica</h3><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>每个topic的<span class=\"keyword\">Replica</span>个数必须小于<span class=\"keyword\">replication</span>-factor的个数，因为每个broker只能有一个<span class=\"keyword\">partition</span>的一个副本</span><br><span class=\"line\"><span class=\"number\">2.</span>当某个topic的<span class=\"keyword\">replication</span>-factor的个数大于<span class=\"number\">1</span>时，则每个<span class=\"keyword\">partition</span>都会有n个副本，包含leader和follower</span><br><span class=\"line\"><span class=\"number\">3.</span>所有<span class=\"keyword\">partition</span>的<span class=\"keyword\">Replica</span>会均匀分布到broker上</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"副本如何扩散出去消息？\"><a href=\"#副本如何扩散出去消息？\" class=\"headerlink\" title=\"副本如何扩散出去消息？\"></a>副本如何扩散出去消息？</h3><figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">每个partition有一个<span class=\"built_in\">leader</span>和多个follower，当producer生产数据时，只会往<span class=\"built_in\">leader</span>中写数据。</span><br><span class=\"line\">follower从<span class=\"built_in\">leader</span>中pull(拉去)数据,过程和consumer消费数据类似。</span><br><span class=\"line\">读数据只会从<span class=\"built_in\">leader</span>中读，当<span class=\"built_in\">leader</span>挂掉时，follower顶上去作为<span class=\"built_in\">leader</span>提供服务，所以consumer并不会从follower中读取数据，follower只是作为副本和预备<span class=\"built_in\">leader</span>。</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Kafka-Replica\"><a href=\"#Kafka-Replica\" class=\"headerlink\" title=\"Kafka Replica\"></a>Kafka Replica</h3><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>每个topic的<span class=\"keyword\">Replica</span>个数必须小于<span class=\"keyword\">replication</span>-factor的个数，因为每个broker只能有一个<span class=\"keyword\">partition</span>的一个副本</span><br><span class=\"line\"><span class=\"number\">2.</span>当某个topic的<span class=\"keyword\">replication</span>-factor的个数大于<span class=\"number\">1</span>时，则每个<span class=\"keyword\">partition</span>都会有n个副本，包含leader和follower</span><br><span class=\"line\"><span class=\"number\">3.</span>所有<span class=\"keyword\">partition</span>的<span class=\"keyword\">Replica</span>会均匀分布到broker上</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"副本如何扩散出去消息？\"><a href=\"#副本如何扩散出去消息？\" class=\"headerlink\" title=\"副本如何扩散出去消息？\"></a>副本如何扩散出去消息？</h3><figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">每个partition有一个<span class=\"built_in\">leader</span>和多个follower，当producer生产数据时，只会往<span class=\"built_in\">leader</span>中写数据。</span><br><span class=\"line\">follower从<span class=\"built_in\">leader</span>中pull(拉去)数据,过程和consumer消费数据类似。</span><br><span class=\"line\">读数据只会从<span class=\"built_in\">leader</span>中读，当<span class=\"built_in\">leader</span>挂掉时，follower顶上去作为<span class=\"built_in\">leader</span>提供服务，所以consumer并不会从follower中读取数据，follower只是作为副本和预备<span class=\"built_in\">leader</span>。</span><br></pre></td></tr></table></figure>\n"},{"title":"HashMap实现原理","renderNumberedHeading":true,"grammar_cjkRuby":true,"_content":"\n\n\n## jdk1.7\n```\nHashMap存的内容是一个数组散列。数组中的每个元素是一个链条；\nEntry的插入是头插入。当有两个key计算出的index的是同一个那么第一个会首先存到对应的index中，第二个会把第一个设置为next，然后Entry链表会下移\n\tint hashcode = key.hashcode();\n\tint index = hashcode % table.length; //这只是一个伪代码，实际中并不是这样计算index的\n\t//下面这一步，会完成Entry的头插入操作\n\ttable[index] = new Entry(key,value,table[index]);\n\nindex计算过程：\n\t首先，获取hashcode值，然后右移 在取异或值。\n\t为什么这样计算，因为不移位的情况下，hashcode值的高位在计算&操作时无法起到作用，所以容易 index冲突，会造成某个链表会很长；\n扩容：\n\t1.7 中如果达到了扩容阈值，先扩容，后存值\n\t\t扩容条件，当size >= threshold时，并且key要存放的地方的不为空\n\t\t扩容时，会重新计算length的值，也会重新计算index的值，所以链表也会有所改变\n\t\tnull的key会固定的落在index为0的地方\n\t1.8 中加了红黑树\n\t\t因为极端情况下可能会出现一个链表特别长的情况，这种情况下，查询效率会非常慢。所以当链表长度达到8后会改成红黑树\n\t\t为什么要使用红黑树？因为红黑树既可以保证插入的效率，也可以保证查询的效率\n\t\tindex冲突时采用的是尾插入。因为就是要确定是否有8个所以需要遍历，所以反正要遍历，所以就直接插入到尾部了。\n\t\t链表和红黑树切换时机：\n\t\t\t当链表长度达到8时，会变成红黑树。\n\t\t\t当红黑树长度变为6时，会变成链表\n\t\t为什么会是6和8呢？ 而不是8和8呢？\n\t\t\t为了防止在8的长度上频繁添加删除，会造成链表和红黑树的频繁切换；\n\t\n```\n## jdk1.8\n\n\n![enter description here](./images/1600691842904.png)\n\n\n![enter description here](./images/1600699351349.png)","source":"_posts/HashMap.md","raw":"---\ntitle: HashMap实现原理\ntags: \nrenderNumberedHeading: true\ngrammar_cjkRuby: true\n---\n\n\n\n## jdk1.7\n```\nHashMap存的内容是一个数组散列。数组中的每个元素是一个链条；\nEntry的插入是头插入。当有两个key计算出的index的是同一个那么第一个会首先存到对应的index中，第二个会把第一个设置为next，然后Entry链表会下移\n\tint hashcode = key.hashcode();\n\tint index = hashcode % table.length; //这只是一个伪代码，实际中并不是这样计算index的\n\t//下面这一步，会完成Entry的头插入操作\n\ttable[index] = new Entry(key,value,table[index]);\n\nindex计算过程：\n\t首先，获取hashcode值，然后右移 在取异或值。\n\t为什么这样计算，因为不移位的情况下，hashcode值的高位在计算&操作时无法起到作用，所以容易 index冲突，会造成某个链表会很长；\n扩容：\n\t1.7 中如果达到了扩容阈值，先扩容，后存值\n\t\t扩容条件，当size >= threshold时，并且key要存放的地方的不为空\n\t\t扩容时，会重新计算length的值，也会重新计算index的值，所以链表也会有所改变\n\t\tnull的key会固定的落在index为0的地方\n\t1.8 中加了红黑树\n\t\t因为极端情况下可能会出现一个链表特别长的情况，这种情况下，查询效率会非常慢。所以当链表长度达到8后会改成红黑树\n\t\t为什么要使用红黑树？因为红黑树既可以保证插入的效率，也可以保证查询的效率\n\t\tindex冲突时采用的是尾插入。因为就是要确定是否有8个所以需要遍历，所以反正要遍历，所以就直接插入到尾部了。\n\t\t链表和红黑树切换时机：\n\t\t\t当链表长度达到8时，会变成红黑树。\n\t\t\t当红黑树长度变为6时，会变成链表\n\t\t为什么会是6和8呢？ 而不是8和8呢？\n\t\t\t为了防止在8的长度上频繁添加删除，会造成链表和红黑树的频繁切换；\n\t\n```\n## jdk1.8\n\n\n![enter description here](./images/1600691842904.png)\n\n\n![enter description here](./images/1600699351349.png)","slug":"HashMap","published":1,"date":"2020-10-26T06:56:14.773Z","updated":"2020-10-26T06:56:14.773Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgq712tf00040gg0dct1bj1d","content":"<h2 id=\"jdk1-7\"><a href=\"#jdk1-7\" class=\"headerlink\" title=\"jdk1.7\"></a>jdk1.7</h2><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HashMap存的内容是一个数组散列。数组中的每个元素是一个链条；</span><br><span class=\"line\">Entry的插入是头插入。当有两个key计算出的<span class=\"keyword\">index</span>的是同一个那么第一个会首先存到对应的<span class=\"keyword\">index</span>中，第二个会把第一个设置为next，然后Entry链表会下移</span><br><span class=\"line\">\tint hashcode = <span class=\"keyword\">key</span>.hashcode();</span><br><span class=\"line\">\tint <span class=\"keyword\">index</span> = hashcode % table.<span class=\"built_in\">length</span>; //这只是一个伪代码，实际中并不是这样计算<span class=\"keyword\">index</span>的</span><br><span class=\"line\">\t//下面这一步，会完成Entry的头插入操作</span><br><span class=\"line\">\ttable[<span class=\"keyword\">index</span>] = new Entry(<span class=\"keyword\">key</span>,<span class=\"keyword\">value</span>,table[<span class=\"keyword\">index</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">index</span>计算过程：</span><br><span class=\"line\">\t首先，获取hashcode值，然后右移 在取异或值。</span><br><span class=\"line\">\t为什么这样计算，因为不移位的情况下，hashcode值的高位在计算&amp;操作时无法起到作用，所以容易 <span class=\"keyword\">index</span>冲突，会造成某个链表会很长；</span><br><span class=\"line\">扩容：</span><br><span class=\"line\">\t<span class=\"number\">1.7</span> 中如果达到了扩容阈值，先扩容，后存值</span><br><span class=\"line\">\t\t扩容条件，当size &gt;= threshold时，并且<span class=\"keyword\">key</span>要存放的地方的不为空</span><br><span class=\"line\">\t\t扩容时，会重新计算<span class=\"built_in\">length</span>的值，也会重新计算<span class=\"keyword\">index</span>的值，所以链表也会有所改变</span><br><span class=\"line\">\t\t<span class=\"literal\">null</span>的<span class=\"keyword\">key</span>会固定的落在<span class=\"keyword\">index</span>为<span class=\"number\">0</span>的地方</span><br><span class=\"line\">\t<span class=\"number\">1.8</span> 中加了红黑树</span><br><span class=\"line\">\t\t因为极端情况下可能会出现一个链表特别长的情况，这种情况下，查询效率会非常慢。所以当链表长度达到<span class=\"number\">8</span>后会改成红黑树</span><br><span class=\"line\">\t\t为什么要使用红黑树？因为红黑树既可以保证插入的效率，也可以保证查询的效率</span><br><span class=\"line\">\t\t<span class=\"keyword\">index</span>冲突时采用的是尾插入。因为就是要确定是否有<span class=\"number\">8</span>个所以需要遍历，所以反正要遍历，所以就直接插入到尾部了。</span><br><span class=\"line\">\t\t链表和红黑树切换时机：</span><br><span class=\"line\">\t\t\t当链表长度达到<span class=\"number\">8</span>时，会变成红黑树。</span><br><span class=\"line\">\t\t\t当红黑树长度变为<span class=\"number\">6</span>时，会变成链表</span><br><span class=\"line\">\t\t为什么会是<span class=\"number\">6</span>和<span class=\"number\">8</span>呢？ 而不是<span class=\"number\">8</span>和<span class=\"number\">8</span>呢？</span><br><span class=\"line\">\t\t\t为了防止在<span class=\"number\">8</span>的长度上频繁添加删除，会造成链表和红黑树的频繁切换；</span><br><span class=\"line\">\t</span><br></pre></td></tr></table></figure>\n<h2 id=\"jdk1-8\"><a href=\"#jdk1-8\" class=\"headerlink\" title=\"jdk1.8\"></a>jdk1.8</h2><p><img src=\"./images/1600691842904.png\" alt=\"enter description here\"></p>\n<p><img src=\"./images/1600699351349.png\" alt=\"enter description here\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"jdk1-7\"><a href=\"#jdk1-7\" class=\"headerlink\" title=\"jdk1.7\"></a>jdk1.7</h2><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HashMap存的内容是一个数组散列。数组中的每个元素是一个链条；</span><br><span class=\"line\">Entry的插入是头插入。当有两个key计算出的<span class=\"keyword\">index</span>的是同一个那么第一个会首先存到对应的<span class=\"keyword\">index</span>中，第二个会把第一个设置为next，然后Entry链表会下移</span><br><span class=\"line\">\tint hashcode = <span class=\"keyword\">key</span>.hashcode();</span><br><span class=\"line\">\tint <span class=\"keyword\">index</span> = hashcode % table.<span class=\"built_in\">length</span>; //这只是一个伪代码，实际中并不是这样计算<span class=\"keyword\">index</span>的</span><br><span class=\"line\">\t//下面这一步，会完成Entry的头插入操作</span><br><span class=\"line\">\ttable[<span class=\"keyword\">index</span>] = new Entry(<span class=\"keyword\">key</span>,<span class=\"keyword\">value</span>,table[<span class=\"keyword\">index</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">index</span>计算过程：</span><br><span class=\"line\">\t首先，获取hashcode值，然后右移 在取异或值。</span><br><span class=\"line\">\t为什么这样计算，因为不移位的情况下，hashcode值的高位在计算&amp;操作时无法起到作用，所以容易 <span class=\"keyword\">index</span>冲突，会造成某个链表会很长；</span><br><span class=\"line\">扩容：</span><br><span class=\"line\">\t<span class=\"number\">1.7</span> 中如果达到了扩容阈值，先扩容，后存值</span><br><span class=\"line\">\t\t扩容条件，当size &gt;= threshold时，并且<span class=\"keyword\">key</span>要存放的地方的不为空</span><br><span class=\"line\">\t\t扩容时，会重新计算<span class=\"built_in\">length</span>的值，也会重新计算<span class=\"keyword\">index</span>的值，所以链表也会有所改变</span><br><span class=\"line\">\t\t<span class=\"literal\">null</span>的<span class=\"keyword\">key</span>会固定的落在<span class=\"keyword\">index</span>为<span class=\"number\">0</span>的地方</span><br><span class=\"line\">\t<span class=\"number\">1.8</span> 中加了红黑树</span><br><span class=\"line\">\t\t因为极端情况下可能会出现一个链表特别长的情况，这种情况下，查询效率会非常慢。所以当链表长度达到<span class=\"number\">8</span>后会改成红黑树</span><br><span class=\"line\">\t\t为什么要使用红黑树？因为红黑树既可以保证插入的效率，也可以保证查询的效率</span><br><span class=\"line\">\t\t<span class=\"keyword\">index</span>冲突时采用的是尾插入。因为就是要确定是否有<span class=\"number\">8</span>个所以需要遍历，所以反正要遍历，所以就直接插入到尾部了。</span><br><span class=\"line\">\t\t链表和红黑树切换时机：</span><br><span class=\"line\">\t\t\t当链表长度达到<span class=\"number\">8</span>时，会变成红黑树。</span><br><span class=\"line\">\t\t\t当红黑树长度变为<span class=\"number\">6</span>时，会变成链表</span><br><span class=\"line\">\t\t为什么会是<span class=\"number\">6</span>和<span class=\"number\">8</span>呢？ 而不是<span class=\"number\">8</span>和<span class=\"number\">8</span>呢？</span><br><span class=\"line\">\t\t\t为了防止在<span class=\"number\">8</span>的长度上频繁添加删除，会造成链表和红黑树的频繁切换；</span><br><span class=\"line\">\t</span><br></pre></td></tr></table></figure>\n<h2 id=\"jdk1-8\"><a href=\"#jdk1-8\" class=\"headerlink\" title=\"jdk1.8\"></a>jdk1.8</h2><p><img src=\"./images/1600691842904.png\" alt=\"enter description here\"></p>\n<p><img src=\"./images/1600699351349.png\" alt=\"enter description here\"></p>\n"},{"title":"小书匠语法使用手册","slug":"filename","grammar_abbr":true,"grammar_table":true,"grammar_defList":true,"grammar_emoji":true,"grammar_footnote":true,"grammar_ins":true,"grammar_mark":true,"grammar_sub":true,"grammar_sup":true,"grammar_checkbox":true,"grammar_mathjax":true,"grammar_flow":true,"grammar_sequence":true,"grammar_plot":true,"grammar_code":true,"grammar_highlight":true,"grammar_html":true,"grammar_linkify":true,"grammar_typographer":true,"grammar_video":true,"grammar_audio":true,"grammar_attachment":true,"grammar_mermaid":true,"grammar_classy":true,"grammar_cjkEmphasis":true,"grammar_cjkRuby":true,"grammar_center":true,"grammar_align":true,"grammar_tableExtra":true,"_content":" \n\n[toc!?theme=gray&depth=4]\n\n# 常用语法\n\n___\n\n## 标题\n\n```markdown\n这是 H1 一级标题\n======\n这是 H2 二级标题\n------\n# 这是 H1 一级标题\n## 这是 H2 二级标题\n### 这是 H3 三级标题\n#### 这是 H4 四级标题\n##### 这是 H5 五级标题\n###### 这是 H6 六级标题\n```\n**快捷键**: [ctrl + h]\n\n\n## 列表\n### 无序列表\n```markdown\n* 项目1\n  * 子项目1.1\n  * 子项目1.2\n    * 子项目1.2.1\n* 项目2\n* 项目3\n\n+ 项目1\n  + 子项目1.1\n  + 子项目1.2\n    + 子项目1.2.1\n+ 项目2\n+ 项目3\n\n- 项目1\n  - 子项目1.1\n  - 子项目1.2\n    - 子项目1.2.1\n- 项目2\n- 项目3\n```\n**快捷键**: [ctrl + u]\n### 有序列表\n```markdown\n1. 项目1\n2. 项目2\n3. 项目3\n    1. 项目3.1\n    2. 项目3.2\n\n1. 项目1\n1. 项目2\n1. 项目3\n    1. 项目3.1\n    1. 项目3.2\n```\n### 有序列表起始编号\n```markdown\n58. 项目5\n2. 项目6\n```\n**快捷键**: [ctrl + o]\n\n\n## 链接\n```markdown\n[链接名称](链接地址)\n[链接名称][1]\n[1] : 链接地址\n```\n\n\n## 图片\n```markdown\n![名称](链接地址)\n![名称][1]\n[1] : 链接地址\n```\n\n\n## 文字格式\n```markdown\n**这是文字粗体格式**\n\n__这是文字粗体格式__\n\n*这是文字斜体格式*\n\n_这是文字斜体格式_\n```\n\n\n## 引用\n```markdown\n> 第一行引用文字\n> 第二行引用文字\n```\n\n\n## 水平线\n```markdown\n***\n```\n\n___\n\n# GFM扩展语法\n\n___\n\n## 表格\n```markdown\nFirst Header  | Second Header\n------------- | -------------\nContent Cell  | Content Cell\nContent Cell  | Content Cell\n```\n\n\n## 增强型表格\n```markdown\n|First Header  | Second Header ||\n|First Header  | Second Header | Third Header|\n|------------- | -------------|-------------|\n表身1Content Cell  | Merge Content Cell||\nContent Cell  | Content Cell| Content Cell|\n\n表身2Content Cell  | Merge Content Cell||\nContent Cell  | Content Cell| Content Cell|\n[表格标题]\n```\n\n\n## 代码\n### 行内代码\n```markdown\n`var x = \"hello world\"`\n```\n### 块代码\n\n```javascript\nvar a = \"hello world\";\nvar b = \"good luck\";\n```\n\n\n\n## 自动转换成超链接\n系统将自动根据内容，将地址转换成超链接格式\n```markdown\nhttp://markdown.xiaoshujiang.com\n```\n\n\n## HTML\n```markdown\n<div class=\"hey\">Hello world</div>\n```\n[支持的html标签](https://github.com/github/markup/tree/master#html-sanitization)\n\n\n## 删除线\n```markdown\n~~在文字上添加删除线~~\n```\n\n___\n\n# 扩展语法\n\n___\n\n## 目录\n```markdown\n[toc]\n```\n\n\n## 扩展的文字格式\n```markdown\n++插入的文字++\n\n==被记号的文字==\n\n上角文字: 19^th^\n\n下角文字: H~2~O\n```\n\n\n## 印刷字替换\n系统将自动替换下列文字，转换成排版系统使用的符号\n```markdown\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\n```\n\n\n## 缩写定义\n```markdown\nThe HTML specification\nis maintained by the W3C.\n*[HTML]: Hyper Text Markup Language\n*[W3C]:  World Wide Web Consortium\n```\n\n\n## 待办事项\n```markdown\n- [ ] 未完成事项\n- [ ] 未完成事项\n- [x] 完成事项\n- [X] 完成事项\n```\n\n\n## 脚注\n```markdown\n脚注[^1x]\n[^1x]: 脚注的用法\n```\n\n\n## 定义\n```markdown\n苹果\n: 一种水果\n: 一种品牌，计算机，手持设备\n桔子\n: 一种水果\n```\n\n\n## 公式\n\n### 行内公式\n```markdown\n这是行内公式`!$ \\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,. $`\n```\n### 块公式\n````markdown\n```mathjax!\n$$\\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,.$$\n```\n````\n\n\n### 流程图 ([语法](http://adrai.github.io/flowchart.js/))\n````markdown\n```flow\nst=>start: 开始\ne=>end: 结束\nop=>operation: 操作步骤\ncond=>condition: 是 或者 否?\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```\n````\n\n\n### 序列图 ([语法](https://github.com/bramp/js-sequence-diagrams/blob/master/src/grammar.jison))\n````markdown\n```sequence\n小明->小李: 你好 小李, 最近怎么样?\nNote right of 小李: 小李想了想\n小李-->小明: 还是老样子\n```\n````\n\n___\n\n# 小书匠编辑器扩展语法\n\n___\n\n## 块代码内文字格式\n### 块代码高亮标记\n````markdown\n```javascript\nvar >>==hello==<< = 'hello world'\n```\n````\n### 块代码删除线\n````markdown\n```javascript\nvar >>~~hello~~<< = 'hello world'\n```\n````\n### 块代码加粗\n````markdown\n```javascript\nvar >>**hello**<< = 'hello world'\n```\n````\n### 块代码下横线\n````markdown\n```javascript\nvar >>++hello++<< = 'hello world'\n```\n````\n\n\n小书匠编辑器提供了附件管理功能，用户可通过`./`对附件的引用，比如图片`./jiangzhu.jpg`。附件的上传需通过工具栏的插入图片`ctrl+g`，插入视频`ctrl+shift+v`，插入音频`ctrl+shift+a`，插入附件`ctrl+shift+t`功能键进行操作。\n## 视频\n```markdown\n%[名称](链接地址)\n%[名称][1]\n[1] : 链接地址\n\n```\n\n## 音频\n```markdown\n~[名称](链接地址)\n~[名称][1]\n[1] : 链接地址\n```\n\n## 附件\n```markdown\n=[名称](链接地址)\n=[名称][1]\n[1] : 链接地址\n```\n\n## 元数据\n元数据必须放置在每篇文章的开头才能生效。如果文章里有元数据时，系统将自动以元数据的标题为准，用户通过文章信息的维护界面修改的标题及tags将会被覆盖掉。\n```markdown\n---\ntitle: 小书匠语法使用手册\ntags: 小书匠,语法,MARKDOWN,帮助\n--- \n```\n\n\n## mermaid流程图，序列图，甘特图（[mermaid语法](http://knsv.github.io/mermaid/index.html)）\n\n````markdown\n```mermaid!\ngraph TD;\nA-->B;\nA-->C;\nB-->D;\nC-->D;\n```\n````\n\n\n## 统计图 （[统计图语法](https://github.com/flot/flot/blob/master/API.md)）\n数据格式为：`{\"data\": [], \"options\":{}}`\n系统使用[jquery.parseJSON()](http://api.jquery.com/jquery.parsejson/)函数进行解析，因此代码必须符合该函数的要求才能正常解析。\n````markdown\n```plot!\n{\n\"data\": [ [[0, 0], [1, 1]] ],\n\"options\": { \"yaxis\": { \"max\": 1 } }\n}\n```\n````\n\n\n## 自定义class\n```` markdown\n## 自定义class {class名称}\n````\n通过自定义的class名称后，你就可以在每篇文章的自定义css里添加自己想要的样式了．\n\n\n## cjk强调\n``` markdown\n_这里将显示带有衬线字体效果的中文做为强调_\n```\n\n\n## cjk注音标示\n``` markdown\n{需要被注音标示的内容}(注音标示)\n{需要被注音标示的内容}[编号]\n[编号]: 注音标示\n```\n\n\n## 居中显示文字\n```markdown\n->居中显示的文字<-\n```\n\n\n## 对齐显示文字\n\n```markdown\n:>居左显示的文字<-\n->居右显示的文字<:\n:>两端对齐显示的文字<:\n->居中显示的文字<-\n```\n注： 该语法与center语法冲突，两种语法同时开启时，align语法将覆盖center语法。\n\n----------\n\n\n___\n\n# 示例\n\n\n___\n\n[toc]\n\n![箭竹](./jianzhu.jpg)\n\nhttp://www.github.com/suziwen/markdownxiaoshujiang\nhttp://www.xiaoshujiang.com\n\n# 这是 H1 一s级标题\n## 这是 H2 二级标题\n### 这是 H3 三级标题\n#### 这是 H4 四级标题\n##### 这是 H5 五级标题\n###### 这是 H6 六级标题\n\n### 视频\n%[电影](http://markdown.xiaoshujiang.com/media/movie.ogg)\n\n### 音频\n~[音乐](http://markdown.xiaoshujiang.com/media/horse.ogg)\n\n### 附件\n=[附件](./jianzhu.jpg)\n\n### 待办事项\n- [ ] 未完成事项\n- [x] 完成事项\n- [X] 完成事项\n\n### 缩写定义\n\nThe HTML specification\nis maintained by the W3C.\n\n*[HTML]: Hyper Text Markup Language\n*[W3C]:  World Wide Web Consortium\n\n### 印刷字替换\n\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\n\n### html代码\n\n<div>html代码</div>\n\n### 流程图 ([语法](http://adrai.github.io/flowchart.js/))\n\n```flow\nst=>start: 开始\ne=>end: 结束\nop=>operation: 操作步骤\ncond=>condition: 是 或者 否?\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```\n\n### 序列图 ([语法](https://github.com/bramp/js-sequence-diagrams/blob/master/src/grammar.jison))\n\n```sequence\n小明->小李: 你好 小李, 最近怎么样?\nNote right of 小李: 小李想了想\n小李-->小明: 还是老样子\n```\n\n### 脚注[^1x]\n\n[^1x]: 脚注的用法\n\n### 表格Tables\n\nFirst Header  | Second Header\n------------- | -------------\nContent Cell  | Content Cell\nContent Cell  | Content Cell\n\n### 定义\n\n苹果\n: 一种水果\n: 一种品牌，计算机，手持设备\n\n桔子\n: 一种水果\n\n### 文字格式\n\n**这是文字粗体格式**\n\n__这是文字粗体格式__\n\n*这是文字斜体格式*\n\n_这是文字斜体格式_\n\n~~在文字上添加删除线~~\n\n++插入的文字++\n\n==被记号的文字==\n\n上角文字: 19^th^\n\n下角文字: H~2~O\n\n### 无序列表\n\n* 项目1\n  * 子项目1.1\n  * 子项目1.2\n    * 子项目1.2.1\n* 项目2\n* 项目3\n\n### 有序列表\n\n1. 项目1\n2. 项目2\n3. 项目3\n    1. 项目3.1\n    2. 项目3.2\n\n### 有序列表起始编号\n\n58. 项目5\n2. 项目6\n\n### 图片\n\n![图片名称](http://xiaoshujiang.com/favicon.ico)\n链接\n\n[链接名称](http://xiaoshujiang.com)\n### 引用\n\n> 第一行引用文字\n> 第二行引用文字\n### 水平线\n\n***\n### 代码\n\n#### 行内代码\n\n`var x = \"hello world\"`\n\n#### 块代码\n\n```java\n/**\n * @author John Smith <john.smith@example.com>\n * @version 1.0\n*/\npackage l2f.gameserver.model;\n\nimport >>++java.util.ArrayList++<<;\n\n>>~~public abstract class L2Character {~~<<\n>>++public abstract class L2Character extends L2Object {++<<\n  public static final Short ABNORMAL_EFFECT_BLEEDING = 0x0_0_0_1; // not sure\n\n  public void moveTo(int x, int y, int z) {\n    _ai = null;\n    _log.warning(\"Should not be called\");\n    if (1 > 5) {\n      return;\n    }\n  }\n\n  /** Task of AI notification */\n  @SuppressWarnings( { \"nls\", \"unqualified-field-access\", \"boxing\" })\n  >>==public class NotifyAITask implements Runnable {\n    private final CtrlEvent _evt;\n\n    List<String> mList==<< = new ArrayList<String>()\n\n    public void run() {\n      try {\n        getAI().notifyEvent(_evt, _evt.class, null);\n      } catch (Throwable t) {\n        t.printStackTrace();\n      }\n    }\n  }\n}\n```\n## 块代码内文字格式\n### 块代码高亮标记\n```javascript\n  var >>==hello==<< = 'hello world'\n```\n### 块代码删除线\n```javascript\n  var >>~~hello~~<< = 'hello world'\n```\n### 块代码加粗\n```javascript\n  var >>**hello**<< = 'hello world'\n```\n### 块代码下横线\n```javascript\n  var >>++hello++<< = 'hello world'\n```\n\n### 显示行号\n``` javascript?linenums\nvar x = 1;\nvar z = 'str';\n```\n\n### 高亮指定行\n``` javascript?linenums&fancy=1,3,5\nvar x = 1;\nvar y = 2;\nvar z = 3;\nvar u = 4;\nvar w = 5;\nvar a = 6;\n```\n\n### 显示行号并从指定行数计数\n``` javascript?linenums=10\nvar x = 1;\n```\n\n### 禁用显示行号\n``` javascript?linenums=false\nvar x = 1;\n```\n\n### 公式\n#### 行内公式\n这是行内公式`!$ \\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,. $`\n#### 块公式\n```mathjax!\n$$\\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,.$$\n```\n\n#### 带编号的公式\n`!$\\eqref{ref1}$`\n\n```mathjax!\n\\begin{equation}\n\\int_0^\\infty \\frac{x^22}{e^x-1}\\,dx = \\frac{\\pi^4}{15}\\label{ref1}\n\\end{equation}\n```\n\n`!$\\eqref{ref1}$`\n### 统计图\n```plot!\n{\n\"data\": [ [[0, 0], [1, 1]] ],\n\"options\": { \"yaxis\": { \"max\": 1 } }\n}\n```\n\n### mermaid流程图，序列图，甘特图\n\n\n#### 流程图\n```mermaid!\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n\n#### 序列图\n\n```mermaid!\nsequenceDiagram\nA->> B: Query\nB->> C: Forward query\nNote right of C: Thinking...\nC->> B: Response\nB->> A: Forward response\n```\n\n#### 甘特图\n```mermaid!\ngantt\n        dateFormat  YYYY-MM-DD\n        title Adding GANTT diagram functionality to mermaid\n        section A section\n        Completed task            :done,    des1, 2014-01-06,2014-01-08\n        Active task               :active,  des2, 2014-01-09, 3d\n        Future task               :         des3, after des2, 5d\n        Future task2               :         des4, after des3, 5d\n        section Critical tasks\n        Completed task in the critical line :crit, done, 2014-01-06,24h\n        Implement parser and jison          :crit, done, after des1, 2d\n        Create tests for parser             :crit, active, 3d\n        Future task in critical line        :crit, 5d\n        Create tests for renderer           :2d\n        Add to mermaid                      :1d\n```\n\n### PPT语法\n\n使用\n```\n \n ----\n \n```\n作为一个水平页分割线，注意在`----`前后都需要空一行\n\n使用\n```\n \n --\n \n```\n作为一个垂直页分割线, 注意在`--`前后都需要空一行\n\n通过如下形式\n```\n<!-- .element: class=\"fragment\" data-fragment-index=\"1\" -->\n```\n可以实现fragment显示效果\n\n注：　在演示文档模式下，`toc`和脚注语法将失效.\n\n\n### emoji表情[语法](https://github.com/twitter/twemoji)\n\n> Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:\n>\n> Shortcuts (emoticons): :-) :-( 8-) ;)\n\n### 自定义class\n\n#### 自定义class用例{green}\n\n你可以通过查看生成的html代码里，在h4里找到名为`green`的class名称．\n\n### cjk强调\n\n#### _这里将显示中文衬线字体做为强调样式_\n\n### cjk注音标示\n\n{小}(xiao){书}(shu){匠}(jiang)\n\n### 居中显示\n\n->居中显示的{文字}(wenzi)<-\n\n->![箭竹](./jianzhu.jpg)<-\n\n### 文字对齐\n\n:>居左显示的文字<-\n\n->居右显示的文字<:\n\n:>两端对齐显示的文字<:\n\n->居中显示的文字<-\n\n### 增强型表格\n|First Header  | Second Header ||\n|First Header  | Second Header | Third Header|\n|------------- | -------------|-------------|\n表身1Content Cell  | Merge Content Cell||\nContent Cell  | Content Cell| Content Cell|\n\n表身2Content Cell  | Merge Content Cell||\nContent Cell  | Content Cell| Content Cell|\n[表格标题]\n\n\n# 其他\n\n[小书匠更新手册](storywriter/upgrade_log)\n[小书匠语法手册](storywriter/grammar)\n[小书匠使用手册](storywriter/tutorial)\n","source":"_posts/filename.md","raw":"---\ntitle: 小书匠语法使用手册\ntags: 小书匠,语法,MARKDOWN,帮助\nslug: storywriter/grammar\ngrammar_abbr: true\ngrammar_table: true\ngrammar_defList: true\ngrammar_emoji: true\ngrammar_footnote: true\ngrammar_ins: true\ngrammar_mark: true\ngrammar_sub: true\ngrammar_sup: true\ngrammar_checkbox: true\ngrammar_mathjax: true\ngrammar_flow: true\ngrammar_sequence: true\ngrammar_plot: true\ngrammar_code: true\ngrammar_highlight: true\ngrammar_html: true\ngrammar_linkify: true\ngrammar_typographer: true\ngrammar_video: true\ngrammar_audio: true\ngrammar_attachment: true\ngrammar_mermaid: true\ngrammar_classy: true\ngrammar_cjkEmphasis: true\ngrammar_cjkRuby: true\ngrammar_center: true\ngrammar_align: true\ngrammar_tableExtra: true\n--- \n\n[toc!?theme=gray&depth=4]\n\n# 常用语法\n\n___\n\n## 标题\n\n```markdown\n这是 H1 一级标题\n======\n这是 H2 二级标题\n------\n# 这是 H1 一级标题\n## 这是 H2 二级标题\n### 这是 H3 三级标题\n#### 这是 H4 四级标题\n##### 这是 H5 五级标题\n###### 这是 H6 六级标题\n```\n**快捷键**: [ctrl + h]\n\n\n## 列表\n### 无序列表\n```markdown\n* 项目1\n  * 子项目1.1\n  * 子项目1.2\n    * 子项目1.2.1\n* 项目2\n* 项目3\n\n+ 项目1\n  + 子项目1.1\n  + 子项目1.2\n    + 子项目1.2.1\n+ 项目2\n+ 项目3\n\n- 项目1\n  - 子项目1.1\n  - 子项目1.2\n    - 子项目1.2.1\n- 项目2\n- 项目3\n```\n**快捷键**: [ctrl + u]\n### 有序列表\n```markdown\n1. 项目1\n2. 项目2\n3. 项目3\n    1. 项目3.1\n    2. 项目3.2\n\n1. 项目1\n1. 项目2\n1. 项目3\n    1. 项目3.1\n    1. 项目3.2\n```\n### 有序列表起始编号\n```markdown\n58. 项目5\n2. 项目6\n```\n**快捷键**: [ctrl + o]\n\n\n## 链接\n```markdown\n[链接名称](链接地址)\n[链接名称][1]\n[1] : 链接地址\n```\n\n\n## 图片\n```markdown\n![名称](链接地址)\n![名称][1]\n[1] : 链接地址\n```\n\n\n## 文字格式\n```markdown\n**这是文字粗体格式**\n\n__这是文字粗体格式__\n\n*这是文字斜体格式*\n\n_这是文字斜体格式_\n```\n\n\n## 引用\n```markdown\n> 第一行引用文字\n> 第二行引用文字\n```\n\n\n## 水平线\n```markdown\n***\n```\n\n___\n\n# GFM扩展语法\n\n___\n\n## 表格\n```markdown\nFirst Header  | Second Header\n------------- | -------------\nContent Cell  | Content Cell\nContent Cell  | Content Cell\n```\n\n\n## 增强型表格\n```markdown\n|First Header  | Second Header ||\n|First Header  | Second Header | Third Header|\n|------------- | -------------|-------------|\n表身1Content Cell  | Merge Content Cell||\nContent Cell  | Content Cell| Content Cell|\n\n表身2Content Cell  | Merge Content Cell||\nContent Cell  | Content Cell| Content Cell|\n[表格标题]\n```\n\n\n## 代码\n### 行内代码\n```markdown\n`var x = \"hello world\"`\n```\n### 块代码\n\n```javascript\nvar a = \"hello world\";\nvar b = \"good luck\";\n```\n\n\n\n## 自动转换成超链接\n系统将自动根据内容，将地址转换成超链接格式\n```markdown\nhttp://markdown.xiaoshujiang.com\n```\n\n\n## HTML\n```markdown\n<div class=\"hey\">Hello world</div>\n```\n[支持的html标签](https://github.com/github/markup/tree/master#html-sanitization)\n\n\n## 删除线\n```markdown\n~~在文字上添加删除线~~\n```\n\n___\n\n# 扩展语法\n\n___\n\n## 目录\n```markdown\n[toc]\n```\n\n\n## 扩展的文字格式\n```markdown\n++插入的文字++\n\n==被记号的文字==\n\n上角文字: 19^th^\n\n下角文字: H~2~O\n```\n\n\n## 印刷字替换\n系统将自动替换下列文字，转换成排版系统使用的符号\n```markdown\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\n```\n\n\n## 缩写定义\n```markdown\nThe HTML specification\nis maintained by the W3C.\n*[HTML]: Hyper Text Markup Language\n*[W3C]:  World Wide Web Consortium\n```\n\n\n## 待办事项\n```markdown\n- [ ] 未完成事项\n- [ ] 未完成事项\n- [x] 完成事项\n- [X] 完成事项\n```\n\n\n## 脚注\n```markdown\n脚注[^1x]\n[^1x]: 脚注的用法\n```\n\n\n## 定义\n```markdown\n苹果\n: 一种水果\n: 一种品牌，计算机，手持设备\n桔子\n: 一种水果\n```\n\n\n## 公式\n\n### 行内公式\n```markdown\n这是行内公式`!$ \\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,. $`\n```\n### 块公式\n````markdown\n```mathjax!\n$$\\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,.$$\n```\n````\n\n\n### 流程图 ([语法](http://adrai.github.io/flowchart.js/))\n````markdown\n```flow\nst=>start: 开始\ne=>end: 结束\nop=>operation: 操作步骤\ncond=>condition: 是 或者 否?\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```\n````\n\n\n### 序列图 ([语法](https://github.com/bramp/js-sequence-diagrams/blob/master/src/grammar.jison))\n````markdown\n```sequence\n小明->小李: 你好 小李, 最近怎么样?\nNote right of 小李: 小李想了想\n小李-->小明: 还是老样子\n```\n````\n\n___\n\n# 小书匠编辑器扩展语法\n\n___\n\n## 块代码内文字格式\n### 块代码高亮标记\n````markdown\n```javascript\nvar >>==hello==<< = 'hello world'\n```\n````\n### 块代码删除线\n````markdown\n```javascript\nvar >>~~hello~~<< = 'hello world'\n```\n````\n### 块代码加粗\n````markdown\n```javascript\nvar >>**hello**<< = 'hello world'\n```\n````\n### 块代码下横线\n````markdown\n```javascript\nvar >>++hello++<< = 'hello world'\n```\n````\n\n\n小书匠编辑器提供了附件管理功能，用户可通过`./`对附件的引用，比如图片`./jiangzhu.jpg`。附件的上传需通过工具栏的插入图片`ctrl+g`，插入视频`ctrl+shift+v`，插入音频`ctrl+shift+a`，插入附件`ctrl+shift+t`功能键进行操作。\n## 视频\n```markdown\n%[名称](链接地址)\n%[名称][1]\n[1] : 链接地址\n\n```\n\n## 音频\n```markdown\n~[名称](链接地址)\n~[名称][1]\n[1] : 链接地址\n```\n\n## 附件\n```markdown\n=[名称](链接地址)\n=[名称][1]\n[1] : 链接地址\n```\n\n## 元数据\n元数据必须放置在每篇文章的开头才能生效。如果文章里有元数据时，系统将自动以元数据的标题为准，用户通过文章信息的维护界面修改的标题及tags将会被覆盖掉。\n```markdown\n---\ntitle: 小书匠语法使用手册\ntags: 小书匠,语法,MARKDOWN,帮助\n--- \n```\n\n\n## mermaid流程图，序列图，甘特图（[mermaid语法](http://knsv.github.io/mermaid/index.html)）\n\n````markdown\n```mermaid!\ngraph TD;\nA-->B;\nA-->C;\nB-->D;\nC-->D;\n```\n````\n\n\n## 统计图 （[统计图语法](https://github.com/flot/flot/blob/master/API.md)）\n数据格式为：`{\"data\": [], \"options\":{}}`\n系统使用[jquery.parseJSON()](http://api.jquery.com/jquery.parsejson/)函数进行解析，因此代码必须符合该函数的要求才能正常解析。\n````markdown\n```plot!\n{\n\"data\": [ [[0, 0], [1, 1]] ],\n\"options\": { \"yaxis\": { \"max\": 1 } }\n}\n```\n````\n\n\n## 自定义class\n```` markdown\n## 自定义class {class名称}\n````\n通过自定义的class名称后，你就可以在每篇文章的自定义css里添加自己想要的样式了．\n\n\n## cjk强调\n``` markdown\n_这里将显示带有衬线字体效果的中文做为强调_\n```\n\n\n## cjk注音标示\n``` markdown\n{需要被注音标示的内容}(注音标示)\n{需要被注音标示的内容}[编号]\n[编号]: 注音标示\n```\n\n\n## 居中显示文字\n```markdown\n->居中显示的文字<-\n```\n\n\n## 对齐显示文字\n\n```markdown\n:>居左显示的文字<-\n->居右显示的文字<:\n:>两端对齐显示的文字<:\n->居中显示的文字<-\n```\n注： 该语法与center语法冲突，两种语法同时开启时，align语法将覆盖center语法。\n\n----------\n\n\n___\n\n# 示例\n\n\n___\n\n[toc]\n\n![箭竹](./jianzhu.jpg)\n\nhttp://www.github.com/suziwen/markdownxiaoshujiang\nhttp://www.xiaoshujiang.com\n\n# 这是 H1 一s级标题\n## 这是 H2 二级标题\n### 这是 H3 三级标题\n#### 这是 H4 四级标题\n##### 这是 H5 五级标题\n###### 这是 H6 六级标题\n\n### 视频\n%[电影](http://markdown.xiaoshujiang.com/media/movie.ogg)\n\n### 音频\n~[音乐](http://markdown.xiaoshujiang.com/media/horse.ogg)\n\n### 附件\n=[附件](./jianzhu.jpg)\n\n### 待办事项\n- [ ] 未完成事项\n- [x] 完成事项\n- [X] 完成事项\n\n### 缩写定义\n\nThe HTML specification\nis maintained by the W3C.\n\n*[HTML]: Hyper Text Markup Language\n*[W3C]:  World Wide Web Consortium\n\n### 印刷字替换\n\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\n\n### html代码\n\n<div>html代码</div>\n\n### 流程图 ([语法](http://adrai.github.io/flowchart.js/))\n\n```flow\nst=>start: 开始\ne=>end: 结束\nop=>operation: 操作步骤\ncond=>condition: 是 或者 否?\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```\n\n### 序列图 ([语法](https://github.com/bramp/js-sequence-diagrams/blob/master/src/grammar.jison))\n\n```sequence\n小明->小李: 你好 小李, 最近怎么样?\nNote right of 小李: 小李想了想\n小李-->小明: 还是老样子\n```\n\n### 脚注[^1x]\n\n[^1x]: 脚注的用法\n\n### 表格Tables\n\nFirst Header  | Second Header\n------------- | -------------\nContent Cell  | Content Cell\nContent Cell  | Content Cell\n\n### 定义\n\n苹果\n: 一种水果\n: 一种品牌，计算机，手持设备\n\n桔子\n: 一种水果\n\n### 文字格式\n\n**这是文字粗体格式**\n\n__这是文字粗体格式__\n\n*这是文字斜体格式*\n\n_这是文字斜体格式_\n\n~~在文字上添加删除线~~\n\n++插入的文字++\n\n==被记号的文字==\n\n上角文字: 19^th^\n\n下角文字: H~2~O\n\n### 无序列表\n\n* 项目1\n  * 子项目1.1\n  * 子项目1.2\n    * 子项目1.2.1\n* 项目2\n* 项目3\n\n### 有序列表\n\n1. 项目1\n2. 项目2\n3. 项目3\n    1. 项目3.1\n    2. 项目3.2\n\n### 有序列表起始编号\n\n58. 项目5\n2. 项目6\n\n### 图片\n\n![图片名称](http://xiaoshujiang.com/favicon.ico)\n链接\n\n[链接名称](http://xiaoshujiang.com)\n### 引用\n\n> 第一行引用文字\n> 第二行引用文字\n### 水平线\n\n***\n### 代码\n\n#### 行内代码\n\n`var x = \"hello world\"`\n\n#### 块代码\n\n```java\n/**\n * @author John Smith <john.smith@example.com>\n * @version 1.0\n*/\npackage l2f.gameserver.model;\n\nimport >>++java.util.ArrayList++<<;\n\n>>~~public abstract class L2Character {~~<<\n>>++public abstract class L2Character extends L2Object {++<<\n  public static final Short ABNORMAL_EFFECT_BLEEDING = 0x0_0_0_1; // not sure\n\n  public void moveTo(int x, int y, int z) {\n    _ai = null;\n    _log.warning(\"Should not be called\");\n    if (1 > 5) {\n      return;\n    }\n  }\n\n  /** Task of AI notification */\n  @SuppressWarnings( { \"nls\", \"unqualified-field-access\", \"boxing\" })\n  >>==public class NotifyAITask implements Runnable {\n    private final CtrlEvent _evt;\n\n    List<String> mList==<< = new ArrayList<String>()\n\n    public void run() {\n      try {\n        getAI().notifyEvent(_evt, _evt.class, null);\n      } catch (Throwable t) {\n        t.printStackTrace();\n      }\n    }\n  }\n}\n```\n## 块代码内文字格式\n### 块代码高亮标记\n```javascript\n  var >>==hello==<< = 'hello world'\n```\n### 块代码删除线\n```javascript\n  var >>~~hello~~<< = 'hello world'\n```\n### 块代码加粗\n```javascript\n  var >>**hello**<< = 'hello world'\n```\n### 块代码下横线\n```javascript\n  var >>++hello++<< = 'hello world'\n```\n\n### 显示行号\n``` javascript?linenums\nvar x = 1;\nvar z = 'str';\n```\n\n### 高亮指定行\n``` javascript?linenums&fancy=1,3,5\nvar x = 1;\nvar y = 2;\nvar z = 3;\nvar u = 4;\nvar w = 5;\nvar a = 6;\n```\n\n### 显示行号并从指定行数计数\n``` javascript?linenums=10\nvar x = 1;\n```\n\n### 禁用显示行号\n``` javascript?linenums=false\nvar x = 1;\n```\n\n### 公式\n#### 行内公式\n这是行内公式`!$ \\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,. $`\n#### 块公式\n```mathjax!\n$$\\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,.$$\n```\n\n#### 带编号的公式\n`!$\\eqref{ref1}$`\n\n```mathjax!\n\\begin{equation}\n\\int_0^\\infty \\frac{x^22}{e^x-1}\\,dx = \\frac{\\pi^4}{15}\\label{ref1}\n\\end{equation}\n```\n\n`!$\\eqref{ref1}$`\n### 统计图\n```plot!\n{\n\"data\": [ [[0, 0], [1, 1]] ],\n\"options\": { \"yaxis\": { \"max\": 1 } }\n}\n```\n\n### mermaid流程图，序列图，甘特图\n\n\n#### 流程图\n```mermaid!\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n\n#### 序列图\n\n```mermaid!\nsequenceDiagram\nA->> B: Query\nB->> C: Forward query\nNote right of C: Thinking...\nC->> B: Response\nB->> A: Forward response\n```\n\n#### 甘特图\n```mermaid!\ngantt\n        dateFormat  YYYY-MM-DD\n        title Adding GANTT diagram functionality to mermaid\n        section A section\n        Completed task            :done,    des1, 2014-01-06,2014-01-08\n        Active task               :active,  des2, 2014-01-09, 3d\n        Future task               :         des3, after des2, 5d\n        Future task2               :         des4, after des3, 5d\n        section Critical tasks\n        Completed task in the critical line :crit, done, 2014-01-06,24h\n        Implement parser and jison          :crit, done, after des1, 2d\n        Create tests for parser             :crit, active, 3d\n        Future task in critical line        :crit, 5d\n        Create tests for renderer           :2d\n        Add to mermaid                      :1d\n```\n\n### PPT语法\n\n使用\n```\n \n ----\n \n```\n作为一个水平页分割线，注意在`----`前后都需要空一行\n\n使用\n```\n \n --\n \n```\n作为一个垂直页分割线, 注意在`--`前后都需要空一行\n\n通过如下形式\n```\n<!-- .element: class=\"fragment\" data-fragment-index=\"1\" -->\n```\n可以实现fragment显示效果\n\n注：　在演示文档模式下，`toc`和脚注语法将失效.\n\n\n### emoji表情[语法](https://github.com/twitter/twemoji)\n\n> Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:\n>\n> Shortcuts (emoticons): :-) :-( 8-) ;)\n\n### 自定义class\n\n#### 自定义class用例{green}\n\n你可以通过查看生成的html代码里，在h4里找到名为`green`的class名称．\n\n### cjk强调\n\n#### _这里将显示中文衬线字体做为强调样式_\n\n### cjk注音标示\n\n{小}(xiao){书}(shu){匠}(jiang)\n\n### 居中显示\n\n->居中显示的{文字}(wenzi)<-\n\n->![箭竹](./jianzhu.jpg)<-\n\n### 文字对齐\n\n:>居左显示的文字<-\n\n->居右显示的文字<:\n\n:>两端对齐显示的文字<:\n\n->居中显示的文字<-\n\n### 增强型表格\n|First Header  | Second Header ||\n|First Header  | Second Header | Third Header|\n|------------- | -------------|-------------|\n表身1Content Cell  | Merge Content Cell||\nContent Cell  | Content Cell| Content Cell|\n\n表身2Content Cell  | Merge Content Cell||\nContent Cell  | Content Cell| Content Cell|\n[表格标题]\n\n\n# 其他\n\n[小书匠更新手册](storywriter/upgrade_log)\n[小书匠语法手册](storywriter/grammar)\n[小书匠使用手册](storywriter/tutorial)\n","published":1,"date":"2020-10-26T06:56:14.774Z","updated":"2020-10-26T06:56:14.774Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgq712th00080gg0ao1sdvr2","content":"<p>[toc!?theme=gray&amp;depth=4]</p>\n<h1 id=\"常用语法\"><a href=\"#常用语法\" class=\"headerlink\" title=\"常用语法\"></a>常用语法</h1><hr>\n<h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是 H1 一级标题</span><br><span class=\"line\">======</span><br><span class=\"line\">这是 H2 二级标题</span><br><span class=\"line\">------</span><br><span class=\"line\"><span class=\"section\"># 这是 H1 一级标题</span></span><br><span class=\"line\"><span class=\"section\">## 这是 H2 二级标题</span></span><br><span class=\"line\"><span class=\"section\">### 这是 H3 三级标题</span></span><br><span class=\"line\"><span class=\"section\">#### 这是 H4 四级标题</span></span><br><span class=\"line\"><span class=\"section\">##### 这是 H5 五级标题</span></span><br><span class=\"line\"><span class=\"section\">###### 这是 H6 六级标题</span></span><br></pre></td></tr></table></figure>\n<p><strong>快捷键</strong>: [ctrl + h]</p>\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><h3 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">*</span> 项目1</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 子项目1.1</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 子项目1.2</span><br><span class=\"line\"><span class=\"bullet\">    *</span> 子项目1.2.1</span><br><span class=\"line\"><span class=\"bullet\">*</span> 项目2</span><br><span class=\"line\"><span class=\"bullet\">*</span> 项目3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">+</span> 项目1</span><br><span class=\"line\"><span class=\"bullet\">  +</span> 子项目1.1</span><br><span class=\"line\"><span class=\"bullet\">  +</span> 子项目1.2</span><br><span class=\"line\"><span class=\"bullet\">    +</span> 子项目1.2.1</span><br><span class=\"line\"><span class=\"bullet\">+</span> 项目2</span><br><span class=\"line\"><span class=\"bullet\">+</span> 项目3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> 项目1</span><br><span class=\"line\"><span class=\"bullet\">  -</span> 子项目1.1</span><br><span class=\"line\"><span class=\"bullet\">  -</span> 子项目1.2</span><br><span class=\"line\"><span class=\"bullet\">    -</span> 子项目1.2.1</span><br><span class=\"line\"><span class=\"bullet\">-</span> 项目2</span><br><span class=\"line\"><span class=\"bullet\">-</span> 项目3</span><br></pre></td></tr></table></figure>\n<p><strong>快捷键</strong>: [ctrl + u]</p>\n<h3 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1.</span> 项目1</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 项目2</span><br><span class=\"line\"><span class=\"bullet\">3.</span> 项目3</span><br><span class=\"line\"><span class=\"bullet\">    1.</span> 项目3.1</span><br><span class=\"line\"><span class=\"bullet\">    2.</span> 项目3.2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">1.</span> 项目1</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 项目2</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 项目3</span><br><span class=\"line\"><span class=\"bullet\">    1.</span> 项目3.1</span><br><span class=\"line\"><span class=\"bullet\">    1.</span> 项目3.2</span><br></pre></td></tr></table></figure>\n<h3 id=\"有序列表起始编号\"><a href=\"#有序列表起始编号\" class=\"headerlink\" title=\"有序列表起始编号\"></a>有序列表起始编号</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">58.</span> 项目5</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 项目6</span><br></pre></td></tr></table></figure>\n<p><strong>快捷键</strong>: [ctrl + o]</p>\n<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">链接名称</span>](<span class=\"link\">链接地址</span>)</span><br><span class=\"line\">[<span class=\"string\">链接名称</span>][<span class=\"symbol\">1</span>]</span><br><span class=\"line\">[1] : 链接地址</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">名称</span>](<span class=\"link\">链接地址</span>)</span><br><span class=\"line\">![<span class=\"string\">名称</span>][<span class=\"symbol\">1</span>]</span><br><span class=\"line\">[1] : 链接地址</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"文字格式\"><a href=\"#文字格式\" class=\"headerlink\" title=\"文字格式\"></a>文字格式</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"strong\">**这是文字粗体格式**</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"strong\">__这是文字粗体格式__</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"emphasis\">*这是文字斜体格式*</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"emphasis\">_这是文字斜体格式_</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt; 第一行引用文字</span></span><br><span class=\"line\"><span class=\"quote\">&gt; 第二行引用文字</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"水平线\"><a href=\"#水平线\" class=\"headerlink\" title=\"水平线\"></a>水平线</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"strong\">**<span class=\"emphasis\">*</span></span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"GFM扩展语法\"><a href=\"#GFM扩展语法\" class=\"headerlink\" title=\"GFM扩展语法\"></a>GFM扩展语法</h1><hr>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">First Header  | Second Header</span><br><span class=\"line\">------------- | -------------</span><br><span class=\"line\">Content Cell  | Content Cell</span><br><span class=\"line\">Content Cell  | Content Cell</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"增强型表格\"><a href=\"#增强型表格\" class=\"headerlink\" title=\"增强型表格\"></a>增强型表格</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|First Header  | Second Header ||</span><br><span class=\"line\">|First Header  | Second Header | Third Header|</span><br><span class=\"line\">|------------- | -------------|-------------|</span><br><span class=\"line\">表身1Content Cell  | Merge Content Cell||</span><br><span class=\"line\">Content Cell  | Content Cell| Content Cell|</span><br><span class=\"line\"></span><br><span class=\"line\">表身2Content Cell  | Merge Content Cell||</span><br><span class=\"line\">Content Cell  | Content Cell| Content Cell|</span><br><span class=\"line\">[表格标题]</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"行内代码\"><a href=\"#行内代码\" class=\"headerlink\" title=\"行内代码\"></a>行内代码</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">`var x = &quot;hello world&quot;`</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"块代码\"><a href=\"#块代码\" class=\"headerlink\" title=\"块代码\"></a>块代码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">&quot;hello world&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"string\">&quot;good luck&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"自动转换成超链接\"><a href=\"#自动转换成超链接\" class=\"headerlink\" title=\"自动转换成超链接\"></a>自动转换成超链接</h2><p>系统将自动根据内容，将地址转换成超链接格式</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://markdown.xiaoshujiang.com</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;hey&quot;</span>&gt;</span></span>Hello world<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/github/markup/tree/master#html-sanitization\">支持的html标签</a></p>\n<h2 id=\"删除线\"><a href=\"#删除线\" class=\"headerlink\" title=\"删除线\"></a>删除线</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~~在文字上添加删除线~~</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"扩展语法\"><a href=\"#扩展语法\" class=\"headerlink\" title=\"扩展语法\"></a>扩展语法</h1><hr>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[toc]</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"扩展的文字格式\"><a href=\"#扩展的文字格式\" class=\"headerlink\" title=\"扩展的文字格式\"></a>扩展的文字格式</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">++插入的文字++</span><br><span class=\"line\"></span><br><span class=\"line\">==被记号的文字==</span><br><span class=\"line\"></span><br><span class=\"line\">上角文字: 19^th^</span><br><span class=\"line\"></span><br><span class=\"line\">下角文字: H~2~O</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"印刷字替换\"><a href=\"#印刷字替换\" class=\"headerlink\" title=\"印刷字替换\"></a>印刷字替换</h2><p>系统将自动替换下列文字，转换成排版系统使用的符号</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(c) (C) (r) (R) (tm) (TM) (p) (P) +-</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"缩写定义\"><a href=\"#缩写定义\" class=\"headerlink\" title=\"缩写定义\"></a>缩写定义</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The HTML specification</span><br><span class=\"line\">is maintained by the W3C.</span><br><span class=\"line\"><span class=\"emphasis\">*[HTML]: Hyper Text Markup Language</span></span><br><span class=\"line\"><span class=\"emphasis\">*</span>[W3C]:  World Wide Web Consortium</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"待办事项\"><a href=\"#待办事项\" class=\"headerlink\" title=\"待办事项\"></a>待办事项</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> [ ] 未完成事项</span><br><span class=\"line\"><span class=\"bullet\">-</span> [ ] 未完成事项</span><br><span class=\"line\"><span class=\"bullet\">-</span> [x] 完成事项</span><br><span class=\"line\"><span class=\"bullet\">-</span> [X] 完成事项</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"脚注\"><a href=\"#脚注\" class=\"headerlink\" title=\"脚注\"></a>脚注</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">脚注[^1x]</span><br><span class=\"line\">[<span class=\"symbol\">^1x</span>]: <span class=\"link\">脚注的用法</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">苹果</span><br><span class=\"line\">: 一种水果</span><br><span class=\"line\">: 一种品牌，计算机，手持设备</span><br><span class=\"line\">桔子</span><br><span class=\"line\">: 一种水果</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"公式\"><a href=\"#公式\" class=\"headerlink\" title=\"公式\"></a>公式</h2><h3 id=\"行内公式\"><a href=\"#行内公式\" class=\"headerlink\" title=\"行内公式\"></a>行内公式</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是行内公式<span class=\"code\">`!$ \\Gamma(z) = \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,. $`</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"块公式\"><a href=\"#块公式\" class=\"headerlink\" title=\"块公式\"></a>块公式</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```mathjax!</span></span><br><span class=\"line\"><span class=\"code\">$$\\Gamma(z) = \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,.$$</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"流程图-语法\"><a href=\"#流程图-语法\" class=\"headerlink\" title=\"流程图 (语法)\"></a>流程图 (<a href=\"http://adrai.github.io/flowchart.js/\">语法</a>)</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```flow</span></span><br><span class=\"line\"><span class=\"code\">st=&gt;start: 开始</span></span><br><span class=\"line\"><span class=\"code\">e=&gt;end: 结束</span></span><br><span class=\"line\"><span class=\"code\">op=&gt;operation: 操作步骤</span></span><br><span class=\"line\"><span class=\"code\">cond=&gt;condition: 是 或者 否?</span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\">st-&gt;op-&gt;cond</span></span><br><span class=\"line\"><span class=\"code\">cond(yes)-&gt;e</span></span><br><span class=\"line\"><span class=\"code\">cond(no)-&gt;op</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"序列图-语法\"><a href=\"#序列图-语法\" class=\"headerlink\" title=\"序列图 (语法)\"></a>序列图 (<a href=\"https://github.com/bramp/js-sequence-diagrams/blob/master/src/grammar.jison\">语法</a>)</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```sequence</span></span><br><span class=\"line\"><span class=\"code\">小明-&gt;小李: 你好 小李, 最近怎么样?</span></span><br><span class=\"line\"><span class=\"code\">Note right of 小李: 小李想了想</span></span><br><span class=\"line\"><span class=\"code\">小李--&gt;小明: 还是老样子</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"小书匠编辑器扩展语法\"><a href=\"#小书匠编辑器扩展语法\" class=\"headerlink\" title=\"小书匠编辑器扩展语法\"></a>小书匠编辑器扩展语法</h1><hr>\n<h2 id=\"块代码内文字格式\"><a href=\"#块代码内文字格式\" class=\"headerlink\" title=\"块代码内文字格式\"></a>块代码内文字格式</h2><h3 id=\"块代码高亮标记\"><a href=\"#块代码高亮标记\" class=\"headerlink\" title=\"块代码高亮标记\"></a>块代码高亮标记</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```javascript</span></span><br><span class=\"line\"><span class=\"code\">var &gt;&gt;==hello==&lt;&lt; = &#x27;hello world&#x27;</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"块代码删除线\"><a href=\"#块代码删除线\" class=\"headerlink\" title=\"块代码删除线\"></a>块代码删除线</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```javascript</span></span><br><span class=\"line\"><span class=\"code\">var &gt;&gt;~~hello~~&lt;&lt; = &#x27;hello world&#x27;</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"块代码加粗\"><a href=\"#块代码加粗\" class=\"headerlink\" title=\"块代码加粗\"></a>块代码加粗</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```javascript</span></span><br><span class=\"line\"><span class=\"code\">var &gt;&gt;**hello**&lt;&lt; = &#x27;hello world&#x27;</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"块代码下横线\"><a href=\"#块代码下横线\" class=\"headerlink\" title=\"块代码下横线\"></a>块代码下横线</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```javascript</span></span><br><span class=\"line\"><span class=\"code\">var &gt;&gt;++hello++&lt;&lt; = &#x27;hello world&#x27;</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n\n\n<p>小书匠编辑器提供了附件管理功能，用户可通过<code>./</code>对附件的引用，比如图片<code>./jiangzhu.jpg</code>。附件的上传需通过工具栏的插入图片<code>ctrl+g</code>，插入视频<code>ctrl+shift+v</code>，插入音频<code>ctrl+shift+a</code>，插入附件<code>ctrl+shift+t</code>功能键进行操作。</p>\n<h2 id=\"视频\"><a href=\"#视频\" class=\"headerlink\" title=\"视频\"></a>视频</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%[<span class=\"string\">名称</span>](<span class=\"link\">链接地址</span>)</span><br><span class=\"line\">%[<span class=\"string\">名称</span>][<span class=\"symbol\">1</span>]</span><br><span class=\"line\">[1] : 链接地址</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"音频\"><a href=\"#音频\" class=\"headerlink\" title=\"音频\"></a>音频</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~[<span class=\"string\">名称</span>](<span class=\"link\">链接地址</span>)</span><br><span class=\"line\">~[<span class=\"string\">名称</span>][<span class=\"symbol\">1</span>]</span><br><span class=\"line\">[1] : 链接地址</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"附件\"><a href=\"#附件\" class=\"headerlink\" title=\"附件\"></a>附件</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">=[<span class=\"string\">名称</span>](<span class=\"link\">链接地址</span>)</span><br><span class=\"line\">=[<span class=\"string\">名称</span>][<span class=\"symbol\">1</span>]</span><br><span class=\"line\">[1] : 链接地址</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"元数据\"><a href=\"#元数据\" class=\"headerlink\" title=\"元数据\"></a>元数据</h2><p>元数据必须放置在每篇文章的开头才能生效。如果文章里有元数据时，系统将自动以元数据的标题为准，用户通过文章信息的维护界面修改的标题及tags将会被覆盖掉。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 小书匠语法使用手册</span><br><span class=\"line\">tags: 小书匠,语法,MARKDOWN,帮助</span><br><span class=\"line\">--- </span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"mermaid流程图，序列图，甘特图（mermaid语法）\"><a href=\"#mermaid流程图，序列图，甘特图（mermaid语法）\" class=\"headerlink\" title=\"mermaid流程图，序列图，甘特图（mermaid语法）\"></a>mermaid流程图，序列图，甘特图（<a href=\"http://knsv.github.io/mermaid/index.html\">mermaid语法</a>）</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```mermaid!</span></span><br><span class=\"line\"><span class=\"code\">graph TD;</span></span><br><span class=\"line\"><span class=\"code\">A--&gt;B;</span></span><br><span class=\"line\"><span class=\"code\">A--&gt;C;</span></span><br><span class=\"line\"><span class=\"code\">B--&gt;D;</span></span><br><span class=\"line\"><span class=\"code\">C--&gt;D;</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"统计图-（统计图语法）\"><a href=\"#统计图-（统计图语法）\" class=\"headerlink\" title=\"统计图 （统计图语法）\"></a>统计图 （<a href=\"https://github.com/flot/flot/blob/master/API.md\">统计图语法</a>）</h2><p>数据格式为：<code>&#123;&quot;data&quot;: [], &quot;options&quot;:&#123;&#125;&#125;</code><br>系统使用<a href=\"http://api.jquery.com/jquery.parsejson/\">jquery.parseJSON()</a>函数进行解析，因此代码必须符合该函数的要求才能正常解析。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```plot!</span></span><br><span class=\"line\"><span class=\"code\">&#123;</span></span><br><span class=\"line\"><span class=\"code\">&quot;data&quot;: [ [[0, 0], [1, 1]] ],</span></span><br><span class=\"line\"><span class=\"code\">&quot;options&quot;: &#123; &quot;yaxis&quot;: &#123; &quot;max&quot;: 1 &#125; &#125;</span></span><br><span class=\"line\"><span class=\"code\">&#125;</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"自定义class\"><a href=\"#自定义class\" class=\"headerlink\" title=\"自定义class\"></a>自定义class</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">## 自定义class &#123;class名称&#125;</span></span><br></pre></td></tr></table></figure>\n<p>通过自定义的class名称后，你就可以在每篇文章的自定义css里添加自己想要的样式了．</p>\n<h2 id=\"cjk强调\"><a href=\"#cjk强调\" class=\"headerlink\" title=\"cjk强调\"></a>cjk强调</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"emphasis\">_这里将显示带有衬线字体效果的中文做为强调_</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"cjk注音标示\"><a href=\"#cjk注音标示\" class=\"headerlink\" title=\"cjk注音标示\"></a>cjk注音标示</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;需要被注音标示的内容&#125;(注音标示)</span><br><span class=\"line\">&#123;需要被注音标示的内容&#125;[编号]</span><br><span class=\"line\">[<span class=\"symbol\">编号</span>]: <span class=\"link\">注音标示</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"居中显示文字\"><a href=\"#居中显示文字\" class=\"headerlink\" title=\"居中显示文字\"></a>居中显示文字</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-&gt;居中显示的文字<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">-</span></span></span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"对齐显示文字\"><a href=\"#对齐显示文字\" class=\"headerlink\" title=\"对齐显示文字\"></a>对齐显示文字</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:&gt;居左显示的文字<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">-</span></span></span></span><br><span class=\"line\"><span class=\"xml\">-&gt;</span>居右显示的文字<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">:</span></span></span></span><br><span class=\"line\"><span class=\"xml\">:&gt;</span>两端对齐显示的文字<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">:</span></span></span></span><br><span class=\"line\"><span class=\"xml\">-&gt;</span>居中显示的文字<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">-</span></span></span></span><br></pre></td></tr></table></figure>\n<p>注： 该语法与center语法冲突，两种语法同时开启时，align语法将覆盖center语法。</p>\n<hr>\n<hr>\n<h1 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h1><hr>\n<p>[toc]</p>\n<p><img src=\"./jianzhu.jpg\" alt=\"箭竹\"></p>\n<p><a href=\"http://www.github.com/suziwen/markdownxiaoshujiang\">http://www.github.com/suziwen/markdownxiaoshujiang</a><br><a href=\"http://www.xiaoshujiang.com/\">http://www.xiaoshujiang.com</a></p>\n<h1 id=\"这是-H1-一s级标题\"><a href=\"#这是-H1-一s级标题\" class=\"headerlink\" title=\"这是 H1 一s级标题\"></a>这是 H1 一s级标题</h1><h2 id=\"这是-H2-二级标题\"><a href=\"#这是-H2-二级标题\" class=\"headerlink\" title=\"这是 H2 二级标题\"></a>这是 H2 二级标题</h2><h3 id=\"这是-H3-三级标题\"><a href=\"#这是-H3-三级标题\" class=\"headerlink\" title=\"这是 H3 三级标题\"></a>这是 H3 三级标题</h3><h4 id=\"这是-H4-四级标题\"><a href=\"#这是-H4-四级标题\" class=\"headerlink\" title=\"这是 H4 四级标题\"></a>这是 H4 四级标题</h4><h5 id=\"这是-H5-五级标题\"><a href=\"#这是-H5-五级标题\" class=\"headerlink\" title=\"这是 H5 五级标题\"></a>这是 H5 五级标题</h5><h6 id=\"这是-H6-六级标题\"><a href=\"#这是-H6-六级标题\" class=\"headerlink\" title=\"这是 H6 六级标题\"></a>这是 H6 六级标题</h6><h3 id=\"视频-1\"><a href=\"#视频-1\" class=\"headerlink\" title=\"视频\"></a>视频</h3><p>%<a href=\"http://markdown.xiaoshujiang.com/media/movie.ogg\">电影</a></p>\n<h3 id=\"音频-1\"><a href=\"#音频-1\" class=\"headerlink\" title=\"音频\"></a>音频</h3><p>~<a href=\"http://markdown.xiaoshujiang.com/media/horse.ogg\">音乐</a></p>\n<h3 id=\"附件-1\"><a href=\"#附件-1\" class=\"headerlink\" title=\"附件\"></a>附件</h3><p>=<a href=\"./jianzhu.jpg\">附件</a></p>\n<h3 id=\"待办事项-1\"><a href=\"#待办事项-1\" class=\"headerlink\" title=\"待办事项\"></a>待办事项</h3><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 未完成事项</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 完成事项</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 完成事项</li>\n</ul>\n<h3 id=\"缩写定义-1\"><a href=\"#缩写定义-1\" class=\"headerlink\" title=\"缩写定义\"></a>缩写定义</h3><p>The HTML specification<br>is maintained by the W3C.</p>\n<p>*[HTML]: Hyper Text Markup Language<br>*[W3C]:  World Wide Web Consortium</p>\n<h3 id=\"印刷字替换-1\"><a href=\"#印刷字替换-1\" class=\"headerlink\" title=\"印刷字替换\"></a>印刷字替换</h3><p>(c) (C) (r) (R) (tm) (TM) (p) (P) +-</p>\n<h3 id=\"html代码\"><a href=\"#html代码\" class=\"headerlink\" title=\"html代码\"></a>html代码</h3><div>html代码</div>\n\n<h3 id=\"流程图-语法-1\"><a href=\"#流程图-语法-1\" class=\"headerlink\" title=\"流程图 (语法)\"></a>流程图 (<a href=\"http://adrai.github.io/flowchart.js/\">语法</a>)</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st&#x3D;&gt;start: 开始</span><br><span class=\"line\">e&#x3D;&gt;end: 结束</span><br><span class=\"line\">op&#x3D;&gt;operation: 操作步骤</span><br><span class=\"line\">cond&#x3D;&gt;condition: 是 或者 否?</span><br><span class=\"line\"></span><br><span class=\"line\">st-&gt;op-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;op</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"序列图-语法-1\"><a href=\"#序列图-语法-1\" class=\"headerlink\" title=\"序列图 (语法)\"></a>序列图 (<a href=\"https://github.com/bramp/js-sequence-diagrams/blob/master/src/grammar.jison\">语法</a>)</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">小明-&gt;小李: 你好 小李, 最近怎么样?</span><br><span class=\"line\">Note right of 小李: 小李想了想</span><br><span class=\"line\">小李--&gt;小明: 还是老样子</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"脚注-1x\"><a href=\"#脚注-1x\" class=\"headerlink\" title=\"脚注^1x\"></a>脚注<a href=\"%E8%84%9A%E6%B3%A8%E7%9A%84%E7%94%A8%E6%B3%95\">^1x</a></h3><h3 id=\"表格Tables\"><a href=\"#表格Tables\" class=\"headerlink\" title=\"表格Tables\"></a>表格Tables</h3><table>\n<thead>\n<tr>\n<th>First Header</th>\n<th>Second Header</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Content Cell</td>\n<td>Content Cell</td>\n</tr>\n<tr>\n<td>Content Cell</td>\n<td>Content Cell</td>\n</tr>\n</tbody></table>\n<h3 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h3><dl><dt>苹果<br>: 一种水果</dt><dd>一种品牌，计算机，手持设备</dd></dl><dl><dt>桔子</dt><dd>一种水果</dd></dl><h3 id=\"文字格式-1\"><a href=\"#文字格式-1\" class=\"headerlink\" title=\"文字格式\"></a>文字格式</h3><p><strong>这是文字粗体格式</strong></p>\n<p><strong>这是文字粗体格式</strong></p>\n<p><em>这是文字斜体格式</em></p>\n<p><em>这是文字斜体格式</em></p>\n<p><del>在文字上添加删除线</del></p>\n<p>++插入的文字++</p>\n<p>==被记号的文字==</p>\n<p>上角文字: 19^th^</p>\n<p>下角文字: H<del>2</del>O</p>\n<h3 id=\"无序列表-1\"><a href=\"#无序列表-1\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h3><ul>\n<li>项目1<ul>\n<li>子项目1.1</li>\n<li>子项目1.2<ul>\n<li>子项目1.2.1</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>项目2</li>\n<li>项目3</li>\n</ul>\n<h3 id=\"有序列表-1\"><a href=\"#有序列表-1\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h3><ol>\n<li>项目1</li>\n<li>项目2</li>\n<li>项目3<ol>\n<li>项目3.1</li>\n<li>项目3.2</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"有序列表起始编号-1\"><a href=\"#有序列表起始编号-1\" class=\"headerlink\" title=\"有序列表起始编号\"></a>有序列表起始编号</h3><ol start=\"58\">\n<li>项目5</li>\n<li>项目6</li>\n</ol>\n<h3 id=\"图片-1\"><a href=\"#图片-1\" class=\"headerlink\" title=\"图片\"></a>图片</h3><p><img src=\"http://xiaoshujiang.com/favicon.ico\" alt=\"图片名称\"><br>链接</p>\n<p><a href=\"http://xiaoshujiang.com/\">链接名称</a></p>\n<h3 id=\"引用-1\"><a href=\"#引用-1\" class=\"headerlink\" title=\"引用\"></a>引用</h3><blockquote>\n<p>第一行引用文字<br>第二行引用文字</p>\n</blockquote>\n<h3 id=\"水平线-1\"><a href=\"#水平线-1\" class=\"headerlink\" title=\"水平线\"></a>水平线</h3><hr>\n<h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><h4 id=\"行内代码-1\"><a href=\"#行内代码-1\" class=\"headerlink\" title=\"行内代码\"></a>行内代码</h4><p><code>var x = &quot;hello world&quot;</code></p>\n<h4 id=\"块代码-1\"><a href=\"#块代码-1\" class=\"headerlink\" title=\"块代码\"></a>块代码</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> John Smith &lt;john.smith@example.com&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> l2f.gameserver.model;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &gt;&gt;++java.util.ArrayList++&lt;&lt;;</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;~~<span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">L2Character</span> </span>&#123;~~&lt;&lt;</span><br><span class=\"line\">&gt;&gt;++<span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">L2Character</span> <span class=\"keyword\">extends</span> <span class=\"title\">L2Object</span> </span>&#123;++&lt;&lt;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Short ABNORMAL_EFFECT_BLEEDING = <span class=\"number\">0x0_0_0_1</span>; <span class=\"comment\">// not sure</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">moveTo</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y, <span class=\"keyword\">int</span> z)</span> </span>&#123;</span><br><span class=\"line\">    _ai = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    _log.warning(<span class=\"string\">&quot;Should not be called&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"number\">1</span> &gt; <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/** Task of AI notification */</span></span><br><span class=\"line\">  <span class=\"meta\">@SuppressWarnings( &#123; &quot;nls&quot;, &quot;unqualified-field-access&quot;, &quot;boxing&quot; &#125;)</span></span><br><span class=\"line\">  &gt;&gt;==<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NotifyAITask</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> CtrlEvent _evt;</span><br><span class=\"line\"></span><br><span class=\"line\">    List&lt;String&gt; mList==&lt;&lt; = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        getAI().notifyEvent(_evt, _evt.class, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (Throwable t) &#123;</span><br><span class=\"line\">        t.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"块代码内文字格式-1\"><a href=\"#块代码内文字格式-1\" class=\"headerlink\" title=\"块代码内文字格式\"></a>块代码内文字格式</h2><h3 id=\"块代码高亮标记-1\"><a href=\"#块代码高亮标记-1\" class=\"headerlink\" title=\"块代码高亮标记\"></a>块代码高亮标记</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> &gt;&gt;==hello==&lt;&lt; = <span class=\"string\">&#x27;hello world&#x27;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"块代码删除线-1\"><a href=\"#块代码删除线-1\" class=\"headerlink\" title=\"块代码删除线\"></a>块代码删除线</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> &gt;&gt;~~hello~~&lt;&lt; = <span class=\"string\">&#x27;hello world&#x27;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"块代码加粗-1\"><a href=\"#块代码加粗-1\" class=\"headerlink\" title=\"块代码加粗\"></a>块代码加粗</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> &gt;&gt;**hello**&lt;&lt; = <span class=\"string\">&#x27;hello world&#x27;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"块代码下横线-1\"><a href=\"#块代码下横线-1\" class=\"headerlink\" title=\"块代码下横线\"></a>块代码下横线</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> &gt;&gt;++hello++&lt;&lt; = <span class=\"string\">&#x27;hello world&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"显示行号\"><a href=\"#显示行号\" class=\"headerlink\" title=\"显示行号\"></a>显示行号</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var x &#x3D; 1;</span><br><span class=\"line\">var z &#x3D; &#39;str&#39;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"高亮指定行\"><a href=\"#高亮指定行\" class=\"headerlink\" title=\"高亮指定行\"></a>高亮指定行</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var x &#x3D; 1;</span><br><span class=\"line\">var y &#x3D; 2;</span><br><span class=\"line\">var z &#x3D; 3;</span><br><span class=\"line\">var u &#x3D; 4;</span><br><span class=\"line\">var w &#x3D; 5;</span><br><span class=\"line\">var a &#x3D; 6;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"显示行号并从指定行数计数\"><a href=\"#显示行号并从指定行数计数\" class=\"headerlink\" title=\"显示行号并从指定行数计数\"></a>显示行号并从指定行数计数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var x &#x3D; 1;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"禁用显示行号\"><a href=\"#禁用显示行号\" class=\"headerlink\" title=\"禁用显示行号\"></a>禁用显示行号</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var x &#x3D; 1;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"公式-1\"><a href=\"#公式-1\" class=\"headerlink\" title=\"公式\"></a>公式</h3><h4 id=\"行内公式-1\"><a href=\"#行内公式-1\" class=\"headerlink\" title=\"行内公式\"></a>行内公式</h4><p>这是行内公式<code>!$ \\Gamma(z) = \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,. $</code></p>\n<h4 id=\"块公式-1\"><a href=\"#块公式-1\" class=\"headerlink\" title=\"块公式\"></a>块公式</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$\\Gamma(z) &#x3D; \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,.$$</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"带编号的公式\"><a href=\"#带编号的公式\" class=\"headerlink\" title=\"带编号的公式\"></a>带编号的公式</h4><p><code>!$\\eqref&#123;ref1&#125;$</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;equation&#125;</span><br><span class=\"line\">\\int_0^\\infty \\frac&#123;x^22&#125;&#123;e^x-1&#125;\\,dx &#x3D; \\frac&#123;\\pi^4&#125;&#123;15&#125;\\label&#123;ref1&#125;</span><br><span class=\"line\">\\end&#123;equation&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>!$\\eqref&#123;ref1&#125;$</code></p>\n<h3 id=\"统计图\"><a href=\"#统计图\" class=\"headerlink\" title=\"统计图\"></a>统计图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">&quot;data&quot;: [ [[0, 0], [1, 1]] ],</span><br><span class=\"line\">&quot;options&quot;: &#123; &quot;yaxis&quot;: &#123; &quot;max&quot;: 1 &#125; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"mermaid流程图，序列图，甘特图\"><a href=\"#mermaid流程图，序列图，甘特图\" class=\"headerlink\" title=\"mermaid流程图，序列图，甘特图\"></a>mermaid流程图，序列图，甘特图</h3><h4 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph TD;</span><br><span class=\"line\">    A--&gt;B;</span><br><span class=\"line\">    A--&gt;C;</span><br><span class=\"line\">    B--&gt;D;</span><br><span class=\"line\">    C--&gt;D;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"序列图\"><a href=\"#序列图\" class=\"headerlink\" title=\"序列图\"></a>序列图</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sequenceDiagram</span><br><span class=\"line\">A-&gt;&gt; B: Query</span><br><span class=\"line\">B-&gt;&gt; C: Forward query</span><br><span class=\"line\">Note right of C: Thinking...</span><br><span class=\"line\">C-&gt;&gt; B: Response</span><br><span class=\"line\">B-&gt;&gt; A: Forward response</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"甘特图\"><a href=\"#甘特图\" class=\"headerlink\" title=\"甘特图\"></a>甘特图</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gantt</span><br><span class=\"line\">        dateFormat  YYYY-MM-DD</span><br><span class=\"line\">        title Adding GANTT diagram functionality to mermaid</span><br><span class=\"line\">        section A section</span><br><span class=\"line\">        Completed task            :done,    des1, 2014-01-06,2014-01-08</span><br><span class=\"line\">        Active task               :active,  des2, 2014-01-09, 3d</span><br><span class=\"line\">        Future task               :         des3, after des2, 5d</span><br><span class=\"line\">        Future task2               :         des4, after des3, 5d</span><br><span class=\"line\">        section Critical tasks</span><br><span class=\"line\">        Completed task in the critical line :crit, done, 2014-01-06,24h</span><br><span class=\"line\">        Implement parser and jison          :crit, done, after des1, 2d</span><br><span class=\"line\">        Create tests for parser             :crit, active, 3d</span><br><span class=\"line\">        Future task in critical line        :crit, 5d</span><br><span class=\"line\">        Create tests for renderer           :2d</span><br><span class=\"line\">        Add to mermaid                      :1d</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"PPT语法\"><a href=\"#PPT语法\" class=\"headerlink\" title=\"PPT语法\"></a>PPT语法</h3><p>使用</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">----</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>作为一个水平页分割线，注意在<code>----</code>前后都需要空一行</p>\n<p>使用</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>作为一个垂直页分割线, 注意在<code>--</code>前后都需要空一行</p>\n<p>通过如下形式</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- .element: class=&quot;fragment&quot; data-fragment-index=&quot;1&quot; --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>可以实现fragment显示效果</p>\n<p>注：　在演示文档模式下，<code>toc</code>和脚注语法将失效.</p>\n<h3 id=\"emoji表情语法\"><a href=\"#emoji表情语法\" class=\"headerlink\" title=\"emoji表情语法\"></a>emoji表情<a href=\"https://github.com/twitter/twemoji\">语法</a></h3><blockquote>\n<p>Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:</p>\n<p>Shortcuts (emoticons): :-) :-( 8-) ;)</p>\n</blockquote>\n<h3 id=\"自定义class-1\"><a href=\"#自定义class-1\" class=\"headerlink\" title=\"自定义class\"></a>自定义class</h3><h4 id=\"自定义class用例-green\"><a href=\"#自定义class用例-green\" class=\"headerlink\" title=\"自定义class用例{green}\"></a>自定义class用例{green}</h4><p>你可以通过查看生成的html代码里，在h4里找到名为<code>green</code>的class名称．</p>\n<h3 id=\"cjk强调-1\"><a href=\"#cjk强调-1\" class=\"headerlink\" title=\"cjk强调\"></a>cjk强调</h3><h4 id=\"这里将显示中文衬线字体做为强调样式\"><a href=\"#这里将显示中文衬线字体做为强调样式\" class=\"headerlink\" title=\"这里将显示中文衬线字体做为强调样式\"></a><em>这里将显示中文衬线字体做为强调样式</em></h4><h3 id=\"cjk注音标示-1\"><a href=\"#cjk注音标示-1\" class=\"headerlink\" title=\"cjk注音标示\"></a>cjk注音标示</h3><p>{小}(xiao){书}(shu){匠}(jiang)</p>\n<h3 id=\"居中显示\"><a href=\"#居中显示\" class=\"headerlink\" title=\"居中显示\"></a>居中显示</h3><p>-&gt;居中显示的{文字}(wenzi)&lt;-</p>\n<p>-&gt;<img src=\"./jianzhu.jpg\" alt=\"箭竹\">&lt;-</p>\n<h3 id=\"文字对齐\"><a href=\"#文字对齐\" class=\"headerlink\" title=\"文字对齐\"></a>文字对齐</h3><p>:&gt;居左显示的文字&lt;-</p>\n<p>-&gt;居右显示的文字&lt;:</p>\n<p>:&gt;两端对齐显示的文字&lt;:</p>\n<p>-&gt;居中显示的文字&lt;-</p>\n<h3 id=\"增强型表格-1\"><a href=\"#增强型表格-1\" class=\"headerlink\" title=\"增强型表格\"></a>增强型表格</h3><p>|First Header  | Second Header ||<br>|First Header  | Second Header | Third Header|<br>|————- | ————-|————-|<br>表身1Content Cell  | Merge Content Cell||<br>Content Cell  | Content Cell| Content Cell|</p>\n<p>表身2Content Cell  | Merge Content Cell||<br>Content Cell  | Content Cell| Content Cell|<br>[表格标题]</p>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><p><a href=\"storywriter/upgrade_log\">小书匠更新手册</a><br><a href=\"storywriter/grammar\">小书匠语法手册</a><br><a href=\"storywriter/tutorial\">小书匠使用手册</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>[toc!?theme=gray&amp;depth=4]</p>\n<h1 id=\"常用语法\"><a href=\"#常用语法\" class=\"headerlink\" title=\"常用语法\"></a>常用语法</h1><hr>\n<h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是 H1 一级标题</span><br><span class=\"line\">======</span><br><span class=\"line\">这是 H2 二级标题</span><br><span class=\"line\">------</span><br><span class=\"line\"><span class=\"section\"># 这是 H1 一级标题</span></span><br><span class=\"line\"><span class=\"section\">## 这是 H2 二级标题</span></span><br><span class=\"line\"><span class=\"section\">### 这是 H3 三级标题</span></span><br><span class=\"line\"><span class=\"section\">#### 这是 H4 四级标题</span></span><br><span class=\"line\"><span class=\"section\">##### 这是 H5 五级标题</span></span><br><span class=\"line\"><span class=\"section\">###### 这是 H6 六级标题</span></span><br></pre></td></tr></table></figure>\n<p><strong>快捷键</strong>: [ctrl + h]</p>\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><h3 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">*</span> 项目1</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 子项目1.1</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 子项目1.2</span><br><span class=\"line\"><span class=\"bullet\">    *</span> 子项目1.2.1</span><br><span class=\"line\"><span class=\"bullet\">*</span> 项目2</span><br><span class=\"line\"><span class=\"bullet\">*</span> 项目3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">+</span> 项目1</span><br><span class=\"line\"><span class=\"bullet\">  +</span> 子项目1.1</span><br><span class=\"line\"><span class=\"bullet\">  +</span> 子项目1.2</span><br><span class=\"line\"><span class=\"bullet\">    +</span> 子项目1.2.1</span><br><span class=\"line\"><span class=\"bullet\">+</span> 项目2</span><br><span class=\"line\"><span class=\"bullet\">+</span> 项目3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> 项目1</span><br><span class=\"line\"><span class=\"bullet\">  -</span> 子项目1.1</span><br><span class=\"line\"><span class=\"bullet\">  -</span> 子项目1.2</span><br><span class=\"line\"><span class=\"bullet\">    -</span> 子项目1.2.1</span><br><span class=\"line\"><span class=\"bullet\">-</span> 项目2</span><br><span class=\"line\"><span class=\"bullet\">-</span> 项目3</span><br></pre></td></tr></table></figure>\n<p><strong>快捷键</strong>: [ctrl + u]</p>\n<h3 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1.</span> 项目1</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 项目2</span><br><span class=\"line\"><span class=\"bullet\">3.</span> 项目3</span><br><span class=\"line\"><span class=\"bullet\">    1.</span> 项目3.1</span><br><span class=\"line\"><span class=\"bullet\">    2.</span> 项目3.2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">1.</span> 项目1</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 项目2</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 项目3</span><br><span class=\"line\"><span class=\"bullet\">    1.</span> 项目3.1</span><br><span class=\"line\"><span class=\"bullet\">    1.</span> 项目3.2</span><br></pre></td></tr></table></figure>\n<h3 id=\"有序列表起始编号\"><a href=\"#有序列表起始编号\" class=\"headerlink\" title=\"有序列表起始编号\"></a>有序列表起始编号</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">58.</span> 项目5</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 项目6</span><br></pre></td></tr></table></figure>\n<p><strong>快捷键</strong>: [ctrl + o]</p>\n<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">链接名称</span>](<span class=\"link\">链接地址</span>)</span><br><span class=\"line\">[<span class=\"string\">链接名称</span>][<span class=\"symbol\">1</span>]</span><br><span class=\"line\">[1] : 链接地址</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">名称</span>](<span class=\"link\">链接地址</span>)</span><br><span class=\"line\">![<span class=\"string\">名称</span>][<span class=\"symbol\">1</span>]</span><br><span class=\"line\">[1] : 链接地址</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"文字格式\"><a href=\"#文字格式\" class=\"headerlink\" title=\"文字格式\"></a>文字格式</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"strong\">**这是文字粗体格式**</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"strong\">__这是文字粗体格式__</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"emphasis\">*这是文字斜体格式*</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"emphasis\">_这是文字斜体格式_</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt; 第一行引用文字</span></span><br><span class=\"line\"><span class=\"quote\">&gt; 第二行引用文字</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"水平线\"><a href=\"#水平线\" class=\"headerlink\" title=\"水平线\"></a>水平线</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"strong\">**<span class=\"emphasis\">*</span></span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"GFM扩展语法\"><a href=\"#GFM扩展语法\" class=\"headerlink\" title=\"GFM扩展语法\"></a>GFM扩展语法</h1><hr>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">First Header  | Second Header</span><br><span class=\"line\">------------- | -------------</span><br><span class=\"line\">Content Cell  | Content Cell</span><br><span class=\"line\">Content Cell  | Content Cell</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"增强型表格\"><a href=\"#增强型表格\" class=\"headerlink\" title=\"增强型表格\"></a>增强型表格</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|First Header  | Second Header ||</span><br><span class=\"line\">|First Header  | Second Header | Third Header|</span><br><span class=\"line\">|------------- | -------------|-------------|</span><br><span class=\"line\">表身1Content Cell  | Merge Content Cell||</span><br><span class=\"line\">Content Cell  | Content Cell| Content Cell|</span><br><span class=\"line\"></span><br><span class=\"line\">表身2Content Cell  | Merge Content Cell||</span><br><span class=\"line\">Content Cell  | Content Cell| Content Cell|</span><br><span class=\"line\">[表格标题]</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"行内代码\"><a href=\"#行内代码\" class=\"headerlink\" title=\"行内代码\"></a>行内代码</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">`var x = &quot;hello world&quot;`</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"块代码\"><a href=\"#块代码\" class=\"headerlink\" title=\"块代码\"></a>块代码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">&quot;hello world&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"string\">&quot;good luck&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"自动转换成超链接\"><a href=\"#自动转换成超链接\" class=\"headerlink\" title=\"自动转换成超链接\"></a>自动转换成超链接</h2><p>系统将自动根据内容，将地址转换成超链接格式</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://markdown.xiaoshujiang.com</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;hey&quot;</span>&gt;</span></span>Hello world<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/github/markup/tree/master#html-sanitization\">支持的html标签</a></p>\n<h2 id=\"删除线\"><a href=\"#删除线\" class=\"headerlink\" title=\"删除线\"></a>删除线</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~~在文字上添加删除线~~</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"扩展语法\"><a href=\"#扩展语法\" class=\"headerlink\" title=\"扩展语法\"></a>扩展语法</h1><hr>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[toc]</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"扩展的文字格式\"><a href=\"#扩展的文字格式\" class=\"headerlink\" title=\"扩展的文字格式\"></a>扩展的文字格式</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">++插入的文字++</span><br><span class=\"line\"></span><br><span class=\"line\">==被记号的文字==</span><br><span class=\"line\"></span><br><span class=\"line\">上角文字: 19^th^</span><br><span class=\"line\"></span><br><span class=\"line\">下角文字: H~2~O</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"印刷字替换\"><a href=\"#印刷字替换\" class=\"headerlink\" title=\"印刷字替换\"></a>印刷字替换</h2><p>系统将自动替换下列文字，转换成排版系统使用的符号</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(c) (C) (r) (R) (tm) (TM) (p) (P) +-</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"缩写定义\"><a href=\"#缩写定义\" class=\"headerlink\" title=\"缩写定义\"></a>缩写定义</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The HTML specification</span><br><span class=\"line\">is maintained by the W3C.</span><br><span class=\"line\"><span class=\"emphasis\">*[HTML]: Hyper Text Markup Language</span></span><br><span class=\"line\"><span class=\"emphasis\">*</span>[W3C]:  World Wide Web Consortium</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"待办事项\"><a href=\"#待办事项\" class=\"headerlink\" title=\"待办事项\"></a>待办事项</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> [ ] 未完成事项</span><br><span class=\"line\"><span class=\"bullet\">-</span> [ ] 未完成事项</span><br><span class=\"line\"><span class=\"bullet\">-</span> [x] 完成事项</span><br><span class=\"line\"><span class=\"bullet\">-</span> [X] 完成事项</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"脚注\"><a href=\"#脚注\" class=\"headerlink\" title=\"脚注\"></a>脚注</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">脚注[^1x]</span><br><span class=\"line\">[<span class=\"symbol\">^1x</span>]: <span class=\"link\">脚注的用法</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">苹果</span><br><span class=\"line\">: 一种水果</span><br><span class=\"line\">: 一种品牌，计算机，手持设备</span><br><span class=\"line\">桔子</span><br><span class=\"line\">: 一种水果</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"公式\"><a href=\"#公式\" class=\"headerlink\" title=\"公式\"></a>公式</h2><h3 id=\"行内公式\"><a href=\"#行内公式\" class=\"headerlink\" title=\"行内公式\"></a>行内公式</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是行内公式<span class=\"code\">`!$ \\Gamma(z) = \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,. $`</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"块公式\"><a href=\"#块公式\" class=\"headerlink\" title=\"块公式\"></a>块公式</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```mathjax!</span></span><br><span class=\"line\"><span class=\"code\">$$\\Gamma(z) = \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,.$$</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"流程图-语法\"><a href=\"#流程图-语法\" class=\"headerlink\" title=\"流程图 (语法)\"></a>流程图 (<a href=\"http://adrai.github.io/flowchart.js/\">语法</a>)</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```flow</span></span><br><span class=\"line\"><span class=\"code\">st=&gt;start: 开始</span></span><br><span class=\"line\"><span class=\"code\">e=&gt;end: 结束</span></span><br><span class=\"line\"><span class=\"code\">op=&gt;operation: 操作步骤</span></span><br><span class=\"line\"><span class=\"code\">cond=&gt;condition: 是 或者 否?</span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\">st-&gt;op-&gt;cond</span></span><br><span class=\"line\"><span class=\"code\">cond(yes)-&gt;e</span></span><br><span class=\"line\"><span class=\"code\">cond(no)-&gt;op</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"序列图-语法\"><a href=\"#序列图-语法\" class=\"headerlink\" title=\"序列图 (语法)\"></a>序列图 (<a href=\"https://github.com/bramp/js-sequence-diagrams/blob/master/src/grammar.jison\">语法</a>)</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```sequence</span></span><br><span class=\"line\"><span class=\"code\">小明-&gt;小李: 你好 小李, 最近怎么样?</span></span><br><span class=\"line\"><span class=\"code\">Note right of 小李: 小李想了想</span></span><br><span class=\"line\"><span class=\"code\">小李--&gt;小明: 还是老样子</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"小书匠编辑器扩展语法\"><a href=\"#小书匠编辑器扩展语法\" class=\"headerlink\" title=\"小书匠编辑器扩展语法\"></a>小书匠编辑器扩展语法</h1><hr>\n<h2 id=\"块代码内文字格式\"><a href=\"#块代码内文字格式\" class=\"headerlink\" title=\"块代码内文字格式\"></a>块代码内文字格式</h2><h3 id=\"块代码高亮标记\"><a href=\"#块代码高亮标记\" class=\"headerlink\" title=\"块代码高亮标记\"></a>块代码高亮标记</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```javascript</span></span><br><span class=\"line\"><span class=\"code\">var &gt;&gt;==hello==&lt;&lt; = &#x27;hello world&#x27;</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"块代码删除线\"><a href=\"#块代码删除线\" class=\"headerlink\" title=\"块代码删除线\"></a>块代码删除线</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```javascript</span></span><br><span class=\"line\"><span class=\"code\">var &gt;&gt;~~hello~~&lt;&lt; = &#x27;hello world&#x27;</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"块代码加粗\"><a href=\"#块代码加粗\" class=\"headerlink\" title=\"块代码加粗\"></a>块代码加粗</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```javascript</span></span><br><span class=\"line\"><span class=\"code\">var &gt;&gt;**hello**&lt;&lt; = &#x27;hello world&#x27;</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"块代码下横线\"><a href=\"#块代码下横线\" class=\"headerlink\" title=\"块代码下横线\"></a>块代码下横线</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```javascript</span></span><br><span class=\"line\"><span class=\"code\">var &gt;&gt;++hello++&lt;&lt; = &#x27;hello world&#x27;</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n\n\n<p>小书匠编辑器提供了附件管理功能，用户可通过<code>./</code>对附件的引用，比如图片<code>./jiangzhu.jpg</code>。附件的上传需通过工具栏的插入图片<code>ctrl+g</code>，插入视频<code>ctrl+shift+v</code>，插入音频<code>ctrl+shift+a</code>，插入附件<code>ctrl+shift+t</code>功能键进行操作。</p>\n<h2 id=\"视频\"><a href=\"#视频\" class=\"headerlink\" title=\"视频\"></a>视频</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%[<span class=\"string\">名称</span>](<span class=\"link\">链接地址</span>)</span><br><span class=\"line\">%[<span class=\"string\">名称</span>][<span class=\"symbol\">1</span>]</span><br><span class=\"line\">[1] : 链接地址</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"音频\"><a href=\"#音频\" class=\"headerlink\" title=\"音频\"></a>音频</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~[<span class=\"string\">名称</span>](<span class=\"link\">链接地址</span>)</span><br><span class=\"line\">~[<span class=\"string\">名称</span>][<span class=\"symbol\">1</span>]</span><br><span class=\"line\">[1] : 链接地址</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"附件\"><a href=\"#附件\" class=\"headerlink\" title=\"附件\"></a>附件</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">=[<span class=\"string\">名称</span>](<span class=\"link\">链接地址</span>)</span><br><span class=\"line\">=[<span class=\"string\">名称</span>][<span class=\"symbol\">1</span>]</span><br><span class=\"line\">[1] : 链接地址</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"元数据\"><a href=\"#元数据\" class=\"headerlink\" title=\"元数据\"></a>元数据</h2><p>元数据必须放置在每篇文章的开头才能生效。如果文章里有元数据时，系统将自动以元数据的标题为准，用户通过文章信息的维护界面修改的标题及tags将会被覆盖掉。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 小书匠语法使用手册</span><br><span class=\"line\">tags: 小书匠,语法,MARKDOWN,帮助</span><br><span class=\"line\">--- </span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"mermaid流程图，序列图，甘特图（mermaid语法）\"><a href=\"#mermaid流程图，序列图，甘特图（mermaid语法）\" class=\"headerlink\" title=\"mermaid流程图，序列图，甘特图（mermaid语法）\"></a>mermaid流程图，序列图，甘特图（<a href=\"http://knsv.github.io/mermaid/index.html\">mermaid语法</a>）</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```mermaid!</span></span><br><span class=\"line\"><span class=\"code\">graph TD;</span></span><br><span class=\"line\"><span class=\"code\">A--&gt;B;</span></span><br><span class=\"line\"><span class=\"code\">A--&gt;C;</span></span><br><span class=\"line\"><span class=\"code\">B--&gt;D;</span></span><br><span class=\"line\"><span class=\"code\">C--&gt;D;</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"统计图-（统计图语法）\"><a href=\"#统计图-（统计图语法）\" class=\"headerlink\" title=\"统计图 （统计图语法）\"></a>统计图 （<a href=\"https://github.com/flot/flot/blob/master/API.md\">统计图语法</a>）</h2><p>数据格式为：<code>&#123;&quot;data&quot;: [], &quot;options&quot;:&#123;&#125;&#125;</code><br>系统使用<a href=\"http://api.jquery.com/jquery.parsejson/\">jquery.parseJSON()</a>函数进行解析，因此代码必须符合该函数的要求才能正常解析。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```plot!</span></span><br><span class=\"line\"><span class=\"code\">&#123;</span></span><br><span class=\"line\"><span class=\"code\">&quot;data&quot;: [ [[0, 0], [1, 1]] ],</span></span><br><span class=\"line\"><span class=\"code\">&quot;options&quot;: &#123; &quot;yaxis&quot;: &#123; &quot;max&quot;: 1 &#125; &#125;</span></span><br><span class=\"line\"><span class=\"code\">&#125;</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"自定义class\"><a href=\"#自定义class\" class=\"headerlink\" title=\"自定义class\"></a>自定义class</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">## 自定义class &#123;class名称&#125;</span></span><br></pre></td></tr></table></figure>\n<p>通过自定义的class名称后，你就可以在每篇文章的自定义css里添加自己想要的样式了．</p>\n<h2 id=\"cjk强调\"><a href=\"#cjk强调\" class=\"headerlink\" title=\"cjk强调\"></a>cjk强调</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"emphasis\">_这里将显示带有衬线字体效果的中文做为强调_</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"cjk注音标示\"><a href=\"#cjk注音标示\" class=\"headerlink\" title=\"cjk注音标示\"></a>cjk注音标示</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;需要被注音标示的内容&#125;(注音标示)</span><br><span class=\"line\">&#123;需要被注音标示的内容&#125;[编号]</span><br><span class=\"line\">[<span class=\"symbol\">编号</span>]: <span class=\"link\">注音标示</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"居中显示文字\"><a href=\"#居中显示文字\" class=\"headerlink\" title=\"居中显示文字\"></a>居中显示文字</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-&gt;居中显示的文字<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">-</span></span></span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"对齐显示文字\"><a href=\"#对齐显示文字\" class=\"headerlink\" title=\"对齐显示文字\"></a>对齐显示文字</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:&gt;居左显示的文字<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">-</span></span></span></span><br><span class=\"line\"><span class=\"xml\">-&gt;</span>居右显示的文字<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">:</span></span></span></span><br><span class=\"line\"><span class=\"xml\">:&gt;</span>两端对齐显示的文字<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">:</span></span></span></span><br><span class=\"line\"><span class=\"xml\">-&gt;</span>居中显示的文字<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">-</span></span></span></span><br></pre></td></tr></table></figure>\n<p>注： 该语法与center语法冲突，两种语法同时开启时，align语法将覆盖center语法。</p>\n<hr>\n<hr>\n<h1 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h1><hr>\n<p>[toc]</p>\n<p><img src=\"./jianzhu.jpg\" alt=\"箭竹\"></p>\n<p><a href=\"http://www.github.com/suziwen/markdownxiaoshujiang\">http://www.github.com/suziwen/markdownxiaoshujiang</a><br><a href=\"http://www.xiaoshujiang.com/\">http://www.xiaoshujiang.com</a></p>\n<h1 id=\"这是-H1-一s级标题\"><a href=\"#这是-H1-一s级标题\" class=\"headerlink\" title=\"这是 H1 一s级标题\"></a>这是 H1 一s级标题</h1><h2 id=\"这是-H2-二级标题\"><a href=\"#这是-H2-二级标题\" class=\"headerlink\" title=\"这是 H2 二级标题\"></a>这是 H2 二级标题</h2><h3 id=\"这是-H3-三级标题\"><a href=\"#这是-H3-三级标题\" class=\"headerlink\" title=\"这是 H3 三级标题\"></a>这是 H3 三级标题</h3><h4 id=\"这是-H4-四级标题\"><a href=\"#这是-H4-四级标题\" class=\"headerlink\" title=\"这是 H4 四级标题\"></a>这是 H4 四级标题</h4><h5 id=\"这是-H5-五级标题\"><a href=\"#这是-H5-五级标题\" class=\"headerlink\" title=\"这是 H5 五级标题\"></a>这是 H5 五级标题</h5><h6 id=\"这是-H6-六级标题\"><a href=\"#这是-H6-六级标题\" class=\"headerlink\" title=\"这是 H6 六级标题\"></a>这是 H6 六级标题</h6><h3 id=\"视频-1\"><a href=\"#视频-1\" class=\"headerlink\" title=\"视频\"></a>视频</h3><p>%<a href=\"http://markdown.xiaoshujiang.com/media/movie.ogg\">电影</a></p>\n<h3 id=\"音频-1\"><a href=\"#音频-1\" class=\"headerlink\" title=\"音频\"></a>音频</h3><p>~<a href=\"http://markdown.xiaoshujiang.com/media/horse.ogg\">音乐</a></p>\n<h3 id=\"附件-1\"><a href=\"#附件-1\" class=\"headerlink\" title=\"附件\"></a>附件</h3><p>=<a href=\"./jianzhu.jpg\">附件</a></p>\n<h3 id=\"待办事项-1\"><a href=\"#待办事项-1\" class=\"headerlink\" title=\"待办事项\"></a>待办事项</h3><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 未完成事项</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 完成事项</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 完成事项</li>\n</ul>\n<h3 id=\"缩写定义-1\"><a href=\"#缩写定义-1\" class=\"headerlink\" title=\"缩写定义\"></a>缩写定义</h3><p>The HTML specification<br>is maintained by the W3C.</p>\n<p>*[HTML]: Hyper Text Markup Language<br>*[W3C]:  World Wide Web Consortium</p>\n<h3 id=\"印刷字替换-1\"><a href=\"#印刷字替换-1\" class=\"headerlink\" title=\"印刷字替换\"></a>印刷字替换</h3><p>(c) (C) (r) (R) (tm) (TM) (p) (P) +-</p>\n<h3 id=\"html代码\"><a href=\"#html代码\" class=\"headerlink\" title=\"html代码\"></a>html代码</h3><div>html代码</div>\n\n<h3 id=\"流程图-语法-1\"><a href=\"#流程图-语法-1\" class=\"headerlink\" title=\"流程图 (语法)\"></a>流程图 (<a href=\"http://adrai.github.io/flowchart.js/\">语法</a>)</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st&#x3D;&gt;start: 开始</span><br><span class=\"line\">e&#x3D;&gt;end: 结束</span><br><span class=\"line\">op&#x3D;&gt;operation: 操作步骤</span><br><span class=\"line\">cond&#x3D;&gt;condition: 是 或者 否?</span><br><span class=\"line\"></span><br><span class=\"line\">st-&gt;op-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;op</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"序列图-语法-1\"><a href=\"#序列图-语法-1\" class=\"headerlink\" title=\"序列图 (语法)\"></a>序列图 (<a href=\"https://github.com/bramp/js-sequence-diagrams/blob/master/src/grammar.jison\">语法</a>)</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">小明-&gt;小李: 你好 小李, 最近怎么样?</span><br><span class=\"line\">Note right of 小李: 小李想了想</span><br><span class=\"line\">小李--&gt;小明: 还是老样子</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"脚注-1x\"><a href=\"#脚注-1x\" class=\"headerlink\" title=\"脚注^1x\"></a>脚注<a href=\"%E8%84%9A%E6%B3%A8%E7%9A%84%E7%94%A8%E6%B3%95\">^1x</a></h3><h3 id=\"表格Tables\"><a href=\"#表格Tables\" class=\"headerlink\" title=\"表格Tables\"></a>表格Tables</h3><table>\n<thead>\n<tr>\n<th>First Header</th>\n<th>Second Header</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Content Cell</td>\n<td>Content Cell</td>\n</tr>\n<tr>\n<td>Content Cell</td>\n<td>Content Cell</td>\n</tr>\n</tbody></table>\n<h3 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h3><dl><dt>苹果<br>: 一种水果</dt><dd>一种品牌，计算机，手持设备</dd></dl><dl><dt>桔子</dt><dd>一种水果</dd></dl><h3 id=\"文字格式-1\"><a href=\"#文字格式-1\" class=\"headerlink\" title=\"文字格式\"></a>文字格式</h3><p><strong>这是文字粗体格式</strong></p>\n<p><strong>这是文字粗体格式</strong></p>\n<p><em>这是文字斜体格式</em></p>\n<p><em>这是文字斜体格式</em></p>\n<p><del>在文字上添加删除线</del></p>\n<p>++插入的文字++</p>\n<p>==被记号的文字==</p>\n<p>上角文字: 19^th^</p>\n<p>下角文字: H<del>2</del>O</p>\n<h3 id=\"无序列表-1\"><a href=\"#无序列表-1\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h3><ul>\n<li>项目1<ul>\n<li>子项目1.1</li>\n<li>子项目1.2<ul>\n<li>子项目1.2.1</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>项目2</li>\n<li>项目3</li>\n</ul>\n<h3 id=\"有序列表-1\"><a href=\"#有序列表-1\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h3><ol>\n<li>项目1</li>\n<li>项目2</li>\n<li>项目3<ol>\n<li>项目3.1</li>\n<li>项目3.2</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"有序列表起始编号-1\"><a href=\"#有序列表起始编号-1\" class=\"headerlink\" title=\"有序列表起始编号\"></a>有序列表起始编号</h3><ol start=\"58\">\n<li>项目5</li>\n<li>项目6</li>\n</ol>\n<h3 id=\"图片-1\"><a href=\"#图片-1\" class=\"headerlink\" title=\"图片\"></a>图片</h3><p><img src=\"http://xiaoshujiang.com/favicon.ico\" alt=\"图片名称\"><br>链接</p>\n<p><a href=\"http://xiaoshujiang.com/\">链接名称</a></p>\n<h3 id=\"引用-1\"><a href=\"#引用-1\" class=\"headerlink\" title=\"引用\"></a>引用</h3><blockquote>\n<p>第一行引用文字<br>第二行引用文字</p>\n</blockquote>\n<h3 id=\"水平线-1\"><a href=\"#水平线-1\" class=\"headerlink\" title=\"水平线\"></a>水平线</h3><hr>\n<h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><h4 id=\"行内代码-1\"><a href=\"#行内代码-1\" class=\"headerlink\" title=\"行内代码\"></a>行内代码</h4><p><code>var x = &quot;hello world&quot;</code></p>\n<h4 id=\"块代码-1\"><a href=\"#块代码-1\" class=\"headerlink\" title=\"块代码\"></a>块代码</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> John Smith &lt;john.smith@example.com&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> l2f.gameserver.model;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &gt;&gt;++java.util.ArrayList++&lt;&lt;;</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;~~<span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">L2Character</span> </span>&#123;~~&lt;&lt;</span><br><span class=\"line\">&gt;&gt;++<span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">L2Character</span> <span class=\"keyword\">extends</span> <span class=\"title\">L2Object</span> </span>&#123;++&lt;&lt;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Short ABNORMAL_EFFECT_BLEEDING = <span class=\"number\">0x0_0_0_1</span>; <span class=\"comment\">// not sure</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">moveTo</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y, <span class=\"keyword\">int</span> z)</span> </span>&#123;</span><br><span class=\"line\">    _ai = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    _log.warning(<span class=\"string\">&quot;Should not be called&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"number\">1</span> &gt; <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/** Task of AI notification */</span></span><br><span class=\"line\">  <span class=\"meta\">@SuppressWarnings( &#123; &quot;nls&quot;, &quot;unqualified-field-access&quot;, &quot;boxing&quot; &#125;)</span></span><br><span class=\"line\">  &gt;&gt;==<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NotifyAITask</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> CtrlEvent _evt;</span><br><span class=\"line\"></span><br><span class=\"line\">    List&lt;String&gt; mList==&lt;&lt; = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        getAI().notifyEvent(_evt, _evt.class, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (Throwable t) &#123;</span><br><span class=\"line\">        t.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"块代码内文字格式-1\"><a href=\"#块代码内文字格式-1\" class=\"headerlink\" title=\"块代码内文字格式\"></a>块代码内文字格式</h2><h3 id=\"块代码高亮标记-1\"><a href=\"#块代码高亮标记-1\" class=\"headerlink\" title=\"块代码高亮标记\"></a>块代码高亮标记</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> &gt;&gt;==hello==&lt;&lt; = <span class=\"string\">&#x27;hello world&#x27;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"块代码删除线-1\"><a href=\"#块代码删除线-1\" class=\"headerlink\" title=\"块代码删除线\"></a>块代码删除线</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> &gt;&gt;~~hello~~&lt;&lt; = <span class=\"string\">&#x27;hello world&#x27;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"块代码加粗-1\"><a href=\"#块代码加粗-1\" class=\"headerlink\" title=\"块代码加粗\"></a>块代码加粗</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> &gt;&gt;**hello**&lt;&lt; = <span class=\"string\">&#x27;hello world&#x27;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"块代码下横线-1\"><a href=\"#块代码下横线-1\" class=\"headerlink\" title=\"块代码下横线\"></a>块代码下横线</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> &gt;&gt;++hello++&lt;&lt; = <span class=\"string\">&#x27;hello world&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"显示行号\"><a href=\"#显示行号\" class=\"headerlink\" title=\"显示行号\"></a>显示行号</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var x &#x3D; 1;</span><br><span class=\"line\">var z &#x3D; &#39;str&#39;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"高亮指定行\"><a href=\"#高亮指定行\" class=\"headerlink\" title=\"高亮指定行\"></a>高亮指定行</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var x &#x3D; 1;</span><br><span class=\"line\">var y &#x3D; 2;</span><br><span class=\"line\">var z &#x3D; 3;</span><br><span class=\"line\">var u &#x3D; 4;</span><br><span class=\"line\">var w &#x3D; 5;</span><br><span class=\"line\">var a &#x3D; 6;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"显示行号并从指定行数计数\"><a href=\"#显示行号并从指定行数计数\" class=\"headerlink\" title=\"显示行号并从指定行数计数\"></a>显示行号并从指定行数计数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var x &#x3D; 1;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"禁用显示行号\"><a href=\"#禁用显示行号\" class=\"headerlink\" title=\"禁用显示行号\"></a>禁用显示行号</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var x &#x3D; 1;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"公式-1\"><a href=\"#公式-1\" class=\"headerlink\" title=\"公式\"></a>公式</h3><h4 id=\"行内公式-1\"><a href=\"#行内公式-1\" class=\"headerlink\" title=\"行内公式\"></a>行内公式</h4><p>这是行内公式<code>!$ \\Gamma(z) = \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,. $</code></p>\n<h4 id=\"块公式-1\"><a href=\"#块公式-1\" class=\"headerlink\" title=\"块公式\"></a>块公式</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$\\Gamma(z) &#x3D; \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,.$$</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"带编号的公式\"><a href=\"#带编号的公式\" class=\"headerlink\" title=\"带编号的公式\"></a>带编号的公式</h4><p><code>!$\\eqref&#123;ref1&#125;$</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;equation&#125;</span><br><span class=\"line\">\\int_0^\\infty \\frac&#123;x^22&#125;&#123;e^x-1&#125;\\,dx &#x3D; \\frac&#123;\\pi^4&#125;&#123;15&#125;\\label&#123;ref1&#125;</span><br><span class=\"line\">\\end&#123;equation&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>!$\\eqref&#123;ref1&#125;$</code></p>\n<h3 id=\"统计图\"><a href=\"#统计图\" class=\"headerlink\" title=\"统计图\"></a>统计图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">&quot;data&quot;: [ [[0, 0], [1, 1]] ],</span><br><span class=\"line\">&quot;options&quot;: &#123; &quot;yaxis&quot;: &#123; &quot;max&quot;: 1 &#125; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"mermaid流程图，序列图，甘特图\"><a href=\"#mermaid流程图，序列图，甘特图\" class=\"headerlink\" title=\"mermaid流程图，序列图，甘特图\"></a>mermaid流程图，序列图，甘特图</h3><h4 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph TD;</span><br><span class=\"line\">    A--&gt;B;</span><br><span class=\"line\">    A--&gt;C;</span><br><span class=\"line\">    B--&gt;D;</span><br><span class=\"line\">    C--&gt;D;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"序列图\"><a href=\"#序列图\" class=\"headerlink\" title=\"序列图\"></a>序列图</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sequenceDiagram</span><br><span class=\"line\">A-&gt;&gt; B: Query</span><br><span class=\"line\">B-&gt;&gt; C: Forward query</span><br><span class=\"line\">Note right of C: Thinking...</span><br><span class=\"line\">C-&gt;&gt; B: Response</span><br><span class=\"line\">B-&gt;&gt; A: Forward response</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"甘特图\"><a href=\"#甘特图\" class=\"headerlink\" title=\"甘特图\"></a>甘特图</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gantt</span><br><span class=\"line\">        dateFormat  YYYY-MM-DD</span><br><span class=\"line\">        title Adding GANTT diagram functionality to mermaid</span><br><span class=\"line\">        section A section</span><br><span class=\"line\">        Completed task            :done,    des1, 2014-01-06,2014-01-08</span><br><span class=\"line\">        Active task               :active,  des2, 2014-01-09, 3d</span><br><span class=\"line\">        Future task               :         des3, after des2, 5d</span><br><span class=\"line\">        Future task2               :         des4, after des3, 5d</span><br><span class=\"line\">        section Critical tasks</span><br><span class=\"line\">        Completed task in the critical line :crit, done, 2014-01-06,24h</span><br><span class=\"line\">        Implement parser and jison          :crit, done, after des1, 2d</span><br><span class=\"line\">        Create tests for parser             :crit, active, 3d</span><br><span class=\"line\">        Future task in critical line        :crit, 5d</span><br><span class=\"line\">        Create tests for renderer           :2d</span><br><span class=\"line\">        Add to mermaid                      :1d</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"PPT语法\"><a href=\"#PPT语法\" class=\"headerlink\" title=\"PPT语法\"></a>PPT语法</h3><p>使用</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">----</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>作为一个水平页分割线，注意在<code>----</code>前后都需要空一行</p>\n<p>使用</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>作为一个垂直页分割线, 注意在<code>--</code>前后都需要空一行</p>\n<p>通过如下形式</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- .element: class=&quot;fragment&quot; data-fragment-index=&quot;1&quot; --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>可以实现fragment显示效果</p>\n<p>注：　在演示文档模式下，<code>toc</code>和脚注语法将失效.</p>\n<h3 id=\"emoji表情语法\"><a href=\"#emoji表情语法\" class=\"headerlink\" title=\"emoji表情语法\"></a>emoji表情<a href=\"https://github.com/twitter/twemoji\">语法</a></h3><blockquote>\n<p>Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:</p>\n<p>Shortcuts (emoticons): :-) :-( 8-) ;)</p>\n</blockquote>\n<h3 id=\"自定义class-1\"><a href=\"#自定义class-1\" class=\"headerlink\" title=\"自定义class\"></a>自定义class</h3><h4 id=\"自定义class用例-green\"><a href=\"#自定义class用例-green\" class=\"headerlink\" title=\"自定义class用例{green}\"></a>自定义class用例{green}</h4><p>你可以通过查看生成的html代码里，在h4里找到名为<code>green</code>的class名称．</p>\n<h3 id=\"cjk强调-1\"><a href=\"#cjk强调-1\" class=\"headerlink\" title=\"cjk强调\"></a>cjk强调</h3><h4 id=\"这里将显示中文衬线字体做为强调样式\"><a href=\"#这里将显示中文衬线字体做为强调样式\" class=\"headerlink\" title=\"这里将显示中文衬线字体做为强调样式\"></a><em>这里将显示中文衬线字体做为强调样式</em></h4><h3 id=\"cjk注音标示-1\"><a href=\"#cjk注音标示-1\" class=\"headerlink\" title=\"cjk注音标示\"></a>cjk注音标示</h3><p>{小}(xiao){书}(shu){匠}(jiang)</p>\n<h3 id=\"居中显示\"><a href=\"#居中显示\" class=\"headerlink\" title=\"居中显示\"></a>居中显示</h3><p>-&gt;居中显示的{文字}(wenzi)&lt;-</p>\n<p>-&gt;<img src=\"./jianzhu.jpg\" alt=\"箭竹\">&lt;-</p>\n<h3 id=\"文字对齐\"><a href=\"#文字对齐\" class=\"headerlink\" title=\"文字对齐\"></a>文字对齐</h3><p>:&gt;居左显示的文字&lt;-</p>\n<p>-&gt;居右显示的文字&lt;:</p>\n<p>:&gt;两端对齐显示的文字&lt;:</p>\n<p>-&gt;居中显示的文字&lt;-</p>\n<h3 id=\"增强型表格-1\"><a href=\"#增强型表格-1\" class=\"headerlink\" title=\"增强型表格\"></a>增强型表格</h3><p>|First Header  | Second Header ||<br>|First Header  | Second Header | Third Header|<br>|————- | ————-|————-|<br>表身1Content Cell  | Merge Content Cell||<br>Content Cell  | Content Cell| Content Cell|</p>\n<p>表身2Content Cell  | Merge Content Cell||<br>Content Cell  | Content Cell| Content Cell|<br>[表格标题]</p>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><p><a href=\"storywriter/upgrade_log\">小书匠更新手册</a><br><a href=\"storywriter/grammar\">小书匠语法手册</a><br><a href=\"storywriter/tutorial\">小书匠使用手册</a></p>\n"},{"title":"flink","renderNumberedHeading":true,"grammar_cjkRuby":true,"_content":"\n开发文档地址：\n```\nhttps://ci.apache.org/projects/flink/flink-docs-release-1.9/dev/types_serialization.html\n```\n\n### Stateful Computations over Data Streams\n\t离线处理/批处理 有没有状态？ 一般不需要状态\n\t\n\t\n\tUnbound stream  无界的   就是流处理\n\tbound stream\t有界的\t\t批处理\n\t\n\t\n\tflink比较好的：\n\t\t\n\t\t\n\t\t\n\t\t\nDepending on the type of data sources, i.e. bounded or unbounded sources, you would either write a batch program or a streaming program where the DataSet API is used for batch and the DataStream API is used for streaming. \n\n\n\n### DataSet and DataStream\n```\n\tFlink has the special classes DataSet and DataStream to represent data in a program. You can think of them as immutable collections of data that can contain duplicates. In the case of DataSet the data is finite while for a DataStream the number of elements can be unbounded.\n\n\tThese collections differ from regular Java collections in some key ways. First, they are immutable, meaning that once they are created you cannot add or remove elements. You can also not simply inspect the elements inside.\n\n\tA collection is initially created by adding a source in a Flink program and new collections are derived from these by transforming them using API methods such as map, filter and so on.\n```\n\n### Anatomy of a Flink Program\n\n```\nFlink programs look like regular programs that transform collections of data. Each program consists of the same basic parts:\n\nObtain an execution environment,\nLoad/create the initial data,\nSpecify transformations on this data,\nSpecify where to put the results of your computations,\nTrigger the program execution\n```\n\n### flink的connect算子\n```\n\tconnect算子可以合并两个DataStream对象，两个DataStream的类型不必一致\n\tunion\t算子同样可以合并两个DataStream对象，两个DataStream的类型需要一致\n```\n\n### flink的自定义分区器\n  步骤：\n1. 继承Partitioner类，定义输入类型为范型 \n2. 实现partition方法\n3. 返回分区数\n  ```java\n  class LikerPartitioner extends Partitioner[String]{\n  override def partition(key: String, numPartitions: Int): Int = {\n    if(key == \"liker\"){\n      0\n    } else if(key == \"erlei\"){\n      1\n    } else if(key == \"hehe\"){\n      2\n    }else {\n\t  3\n\t}\n  }\n}\n  ```\n  \n  ### 自定义DataSource\n\tDataSource有如下几种\n\t  1. SourceFunction\n\t  2. RichSourceFunction\n\t  2. ParallelSourceFunction\n\t  3. RichParallelSourceFunction\n  ```\n其中SourceFunction和ParallelSourceFunction的区别是\n\t1. SourceFunction 不能设置并行度\n\t2. ParallelSourceFunction可以设置并行度\n\t3. 而RichXXX主要是有两个open、close方法，这两个方法可以作为初始化和关闭资源使用。\n  \t\n  ```\n  ### 自定义MySql的DataSource\n\t步骤：\n\t\t1. 继承RichSourceFunction类\n\t\t2. open方法中建立连接\n\t\t3. run方法中执行查询语句。并将数据collect到sourceContetxt中\n\t\t4. close释放连接\n  ```java\n  class MySQLSource(sql:String) extends RichSourceFunction[Liker]{\n\n  var connection:Connection = _\n  var pstmt:PreparedStatement = _\n\n  override def open(parameters: Configuration): Unit = {\n    super.open(parameters)\n    connection = JdbcUtil.connection\n    pstmt = connection.prepareStatement(sql)\n  }\n\n  override def close(): Unit = {\n    super.close()\n    JdbcUtil.relase(connection,pstmt,null)\n  }\n  override def run(sourceContext: SourceFunction.SourceContext[Liker]): Unit = {\n    var rs = pstmt.executeQuery()\n    while (rs.next()){\n      val liker = Liker(rs.getInt(0),rs.getString(1),rs.getString(2))\n      sourceContext.collect(liker)\n\n    }\n  }\n\n  override def cancel(): Unit = {\n\t\n  }\n}\n  ```\n  \n  ### Execution Parameters\n  \n   ```\n   Execution Parameters\n   ```\n   \n   \n   ### Controlling Latency\n   ```\n   Controlling Latency\n   By default, elements are not transferred on the network one-by-one (which would cause unnecessary network traffic) but are buffered. The size of the buffers (which are actually transferred between machines) can be set in the Flink config files. While this method is good for optimizing throughput, it can cause latency issues when the incoming stream is not fast enough. To control throughput and latency, you can use env.setBufferTimeout(timeoutMillis) on the execution environment (or on individual operators) to set a maximum wait time for the buffers to fill up. After this time, the buffers are sent automatically even if they are not full. The default value for this timeout is 100 ms.\n```\n```scala\nval env: LocalStreamEnvironment = StreamExecutionEnvironment.createLocalEnvironment\nenv.setBufferTimeout(timeoutMillis)\n```\n```\nenv.generateSequence(1,10).map(myMap).setBufferTimeout(timeoutMillis)\nTo maximize throughput, set setBufferTimeout(-1) which will remove the timeout and buffers will only be flushed when they are full. To minimize latency, set the timeout to a value close to 0 (for example 5 or 10 ms). A buffer timeout of 0 should be avoided, because it can cause severe performance degradation.\n   ```\n   ","source":"_posts/flink.md","raw":"---\ntitle: flink\ntags: 新建,模板,小书匠\nrenderNumberedHeading: true\ngrammar_cjkRuby: true\n---\n\n开发文档地址：\n```\nhttps://ci.apache.org/projects/flink/flink-docs-release-1.9/dev/types_serialization.html\n```\n\n### Stateful Computations over Data Streams\n\t离线处理/批处理 有没有状态？ 一般不需要状态\n\t\n\t\n\tUnbound stream  无界的   就是流处理\n\tbound stream\t有界的\t\t批处理\n\t\n\t\n\tflink比较好的：\n\t\t\n\t\t\n\t\t\n\t\t\nDepending on the type of data sources, i.e. bounded or unbounded sources, you would either write a batch program or a streaming program where the DataSet API is used for batch and the DataStream API is used for streaming. \n\n\n\n### DataSet and DataStream\n```\n\tFlink has the special classes DataSet and DataStream to represent data in a program. You can think of them as immutable collections of data that can contain duplicates. In the case of DataSet the data is finite while for a DataStream the number of elements can be unbounded.\n\n\tThese collections differ from regular Java collections in some key ways. First, they are immutable, meaning that once they are created you cannot add or remove elements. You can also not simply inspect the elements inside.\n\n\tA collection is initially created by adding a source in a Flink program and new collections are derived from these by transforming them using API methods such as map, filter and so on.\n```\n\n### Anatomy of a Flink Program\n\n```\nFlink programs look like regular programs that transform collections of data. Each program consists of the same basic parts:\n\nObtain an execution environment,\nLoad/create the initial data,\nSpecify transformations on this data,\nSpecify where to put the results of your computations,\nTrigger the program execution\n```\n\n### flink的connect算子\n```\n\tconnect算子可以合并两个DataStream对象，两个DataStream的类型不必一致\n\tunion\t算子同样可以合并两个DataStream对象，两个DataStream的类型需要一致\n```\n\n### flink的自定义分区器\n  步骤：\n1. 继承Partitioner类，定义输入类型为范型 \n2. 实现partition方法\n3. 返回分区数\n  ```java\n  class LikerPartitioner extends Partitioner[String]{\n  override def partition(key: String, numPartitions: Int): Int = {\n    if(key == \"liker\"){\n      0\n    } else if(key == \"erlei\"){\n      1\n    } else if(key == \"hehe\"){\n      2\n    }else {\n\t  3\n\t}\n  }\n}\n  ```\n  \n  ### 自定义DataSource\n\tDataSource有如下几种\n\t  1. SourceFunction\n\t  2. RichSourceFunction\n\t  2. ParallelSourceFunction\n\t  3. RichParallelSourceFunction\n  ```\n其中SourceFunction和ParallelSourceFunction的区别是\n\t1. SourceFunction 不能设置并行度\n\t2. ParallelSourceFunction可以设置并行度\n\t3. 而RichXXX主要是有两个open、close方法，这两个方法可以作为初始化和关闭资源使用。\n  \t\n  ```\n  ### 自定义MySql的DataSource\n\t步骤：\n\t\t1. 继承RichSourceFunction类\n\t\t2. open方法中建立连接\n\t\t3. run方法中执行查询语句。并将数据collect到sourceContetxt中\n\t\t4. close释放连接\n  ```java\n  class MySQLSource(sql:String) extends RichSourceFunction[Liker]{\n\n  var connection:Connection = _\n  var pstmt:PreparedStatement = _\n\n  override def open(parameters: Configuration): Unit = {\n    super.open(parameters)\n    connection = JdbcUtil.connection\n    pstmt = connection.prepareStatement(sql)\n  }\n\n  override def close(): Unit = {\n    super.close()\n    JdbcUtil.relase(connection,pstmt,null)\n  }\n  override def run(sourceContext: SourceFunction.SourceContext[Liker]): Unit = {\n    var rs = pstmt.executeQuery()\n    while (rs.next()){\n      val liker = Liker(rs.getInt(0),rs.getString(1),rs.getString(2))\n      sourceContext.collect(liker)\n\n    }\n  }\n\n  override def cancel(): Unit = {\n\t\n  }\n}\n  ```\n  \n  ### Execution Parameters\n  \n   ```\n   Execution Parameters\n   ```\n   \n   \n   ### Controlling Latency\n   ```\n   Controlling Latency\n   By default, elements are not transferred on the network one-by-one (which would cause unnecessary network traffic) but are buffered. The size of the buffers (which are actually transferred between machines) can be set in the Flink config files. While this method is good for optimizing throughput, it can cause latency issues when the incoming stream is not fast enough. To control throughput and latency, you can use env.setBufferTimeout(timeoutMillis) on the execution environment (or on individual operators) to set a maximum wait time for the buffers to fill up. After this time, the buffers are sent automatically even if they are not full. The default value for this timeout is 100 ms.\n```\n```scala\nval env: LocalStreamEnvironment = StreamExecutionEnvironment.createLocalEnvironment\nenv.setBufferTimeout(timeoutMillis)\n```\n```\nenv.generateSequence(1,10).map(myMap).setBufferTimeout(timeoutMillis)\nTo maximize throughput, set setBufferTimeout(-1) which will remove the timeout and buffers will only be flushed when they are full. To minimize latency, set the timeout to a value close to 0 (for example 5 or 10 ms). A buffer timeout of 0 should be avoided, because it can cause severe performance degradation.\n   ```\n   ","slug":"flink","published":1,"date":"2020-10-26T06:56:14.775Z","updated":"2020-10-26T06:56:14.775Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgq712ti00090gg07sc7d73q","content":"<p>开发文档地址：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:<span class=\"regexp\">//</span>ci.apache.org<span class=\"regexp\">/projects/</span>flink<span class=\"regexp\">/flink-docs-release-1.9/</span>dev/types_serialization.html</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Stateful-Computations-over-Data-Streams\"><a href=\"#Stateful-Computations-over-Data-Streams\" class=\"headerlink\" title=\"Stateful Computations over Data Streams\"></a>Stateful Computations over Data Streams</h3><pre><code>离线处理/批处理 有没有状态？ 一般不需要状态\n\n\nUnbound stream  无界的   就是流处理\nbound stream    有界的        批处理\n\n\nflink比较好的：</code></pre>\n<p>Depending on the type of data sources, i.e. bounded or unbounded sources, you would either write a batch program or a streaming program where the DataSet API is used for batch and the DataStream API is used for streaming. </p>\n<h3 id=\"DataSet-and-DataStream\"><a href=\"#DataSet-and-DataStream\" class=\"headerlink\" title=\"DataSet and DataStream\"></a>DataSet and DataStream</h3><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Flink has <span class=\"keyword\">the</span> special classes DataSet <span class=\"keyword\">and</span> DataStream <span class=\"built_in\">to</span> represent data <span class=\"keyword\">in</span> <span class=\"keyword\">a</span> program. You can think <span class=\"keyword\">of</span> them <span class=\"keyword\">as</span> immutable collections <span class=\"keyword\">of</span> data that can contain duplicates. In <span class=\"keyword\">the</span> <span class=\"keyword\">case</span> <span class=\"keyword\">of</span> DataSet <span class=\"keyword\">the</span> data is finite <span class=\"keyword\">while</span> <span class=\"keyword\">for</span> <span class=\"keyword\">a</span> DataStream <span class=\"keyword\">the</span> <span class=\"built_in\">number</span> <span class=\"keyword\">of</span> elements can be unbounded.</span><br><span class=\"line\"></span><br><span class=\"line\">These collections differ <span class=\"built_in\">from</span> regular Java collections <span class=\"keyword\">in</span> some key ways. First, they are immutable, meaning that once they are created you cannot <span class=\"built_in\">add</span> <span class=\"keyword\">or</span> remove elements. You can also <span class=\"keyword\">not</span> simply inspect <span class=\"keyword\">the</span> elements inside.</span><br><span class=\"line\"></span><br><span class=\"line\">A collection is initially created <span class=\"keyword\">by</span> adding <span class=\"keyword\">a</span> source <span class=\"keyword\">in</span> <span class=\"keyword\">a</span> Flink program <span class=\"keyword\">and</span> <span class=\"built_in\">new</span> collections are derived <span class=\"built_in\">from</span> these <span class=\"keyword\">by</span> transforming them <span class=\"keyword\">using</span> API methods such <span class=\"keyword\">as</span> map, <span class=\"built_in\">filter</span> <span class=\"keyword\">and</span> so on.</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Anatomy-of-a-Flink-Program\"><a href=\"#Anatomy-of-a-Flink-Program\" class=\"headerlink\" title=\"Anatomy of a Flink Program\"></a>Anatomy of a Flink Program</h3><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Flink programs look like regular programs that transform collections <span class=\"keyword\">of</span> data. Each program consists <span class=\"keyword\">of</span> <span class=\"keyword\">the</span> same basic parts:</span><br><span class=\"line\"></span><br><span class=\"line\">Obtain <span class=\"keyword\">an</span> execution environment,</span><br><span class=\"line\">Load/<span class=\"built_in\">create</span> <span class=\"keyword\">the</span> initial data,</span><br><span class=\"line\">Specify transformations <span class=\"keyword\">on</span> <span class=\"title\">this</span> <span class=\"title\">data</span>,</span><br><span class=\"line\">Specify where <span class=\"built_in\">to</span> <span class=\"built_in\">put</span> <span class=\"keyword\">the</span> results <span class=\"keyword\">of</span> your computations,</span><br><span class=\"line\">Trigger <span class=\"keyword\">the</span> program execution</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"flink的connect算子\"><a href=\"#flink的connect算子\" class=\"headerlink\" title=\"flink的connect算子\"></a>flink的connect算子</h3><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">connect算子可以合并两个DataStream对象，两个DataStream的类型不必一致</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>\t算子同样可以合并两个<span class=\"title\">DataStream</span>对象，两个<span class=\"title\">DataStream</span>的类型需要一致</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"flink的自定义分区器\"><a href=\"#flink的自定义分区器\" class=\"headerlink\" title=\"flink的自定义分区器\"></a>flink的自定义分区器</h3><p>  步骤：</p>\n<ol>\n<li><p>继承Partitioner类，定义输入类型为范型 </p>\n</li>\n<li><p>实现partition方法</p>\n</li>\n<li><p>返回分区数</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  class LikerPartitioner extends Partitioner[String]&#123;</span><br><span class=\"line\">  <span class=\"function\">override def <span class=\"title\">partition</span><span class=\"params\">(key: String, numPartitions: Int)</span>: Int </span>= &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(key == <span class=\"string\">&quot;liker&quot;</span>)&#123;</span><br><span class=\"line\">      <span class=\"number\">0</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(key == <span class=\"string\">&quot;erlei&quot;</span>)&#123;</span><br><span class=\"line\">      <span class=\"number\">1</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(key == <span class=\"string\">&quot;hehe&quot;</span>)&#123;</span><br><span class=\"line\">      <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t  <span class=\"number\">3</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自定义DataSource\"><a href=\"#自定义DataSource\" class=\"headerlink\" title=\"自定义DataSource\"></a>自定义DataSource</h3><p> DataSource有如下几种</p>\n<ol>\n<li>SourceFunction</li>\n<li>RichSourceFunction</li>\n<li>ParallelSourceFunction</li>\n<li>RichParallelSourceFunction<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">其中SourceFunction和ParallelSourceFunction的区别是</span><br><span class=\"line\">\t<span class=\"number\">1.</span> SourceFunction 不能设置并行度</span><br><span class=\"line\">\t<span class=\"number\">2.</span> ParallelSourceFunction可以设置并行度</span><br><span class=\"line\">\t<span class=\"number\">3.</span> 而RichXXX主要是有两个open、close方法，这两个方法可以作为初始化和关闭资源使用。</span><br><span class=\"line\">  \t</span><br></pre></td></tr></table></figure>\n<h3 id=\"自定义MySql的DataSource\"><a href=\"#自定义MySql的DataSource\" class=\"headerlink\" title=\"自定义MySql的DataSource\"></a>自定义MySql的DataSource</h3>步骤：<ol>\n<li>继承RichSourceFunction类</li>\n<li>open方法中建立连接</li>\n<li>run方法中执行查询语句。并将数据collect到sourceContetxt中</li>\n<li>close释放连接<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  class MySQLSource(sql:String) extends RichSourceFunction[Liker]&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> connection:Connection = _</span><br><span class=\"line\">  <span class=\"keyword\">var</span> pstmt:PreparedStatement = _</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\">override def <span class=\"title\">open</span><span class=\"params\">(parameters: Configuration)</span>: Unit </span>= &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.open(parameters)</span><br><span class=\"line\">    connection = JdbcUtil.connection</span><br><span class=\"line\">    pstmt = connection.prepareStatement(sql)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\">override def <span class=\"title\">close</span><span class=\"params\">()</span>: Unit </span>= &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.close()</span><br><span class=\"line\">    JdbcUtil.relase(connection,pstmt,<span class=\"keyword\">null</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\">override def <span class=\"title\">run</span><span class=\"params\">(sourceContext: SourceFunction.SourceContext[Liker])</span>: Unit </span>= &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> rs = pstmt.executeQuery()</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (rs.next())&#123;</span><br><span class=\"line\">      val liker = Liker(rs.getInt(<span class=\"number\">0</span>),rs.getString(<span class=\"number\">1</span>),rs.getString(<span class=\"number\">2</span>))</span><br><span class=\"line\">      sourceContext.collect(liker)</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\">override def <span class=\"title\">cancel</span><span class=\"params\">()</span>: Unit </span>= &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"Execution-Parameters\"><a href=\"#Execution-Parameters\" class=\"headerlink\" title=\"Execution Parameters\"></a>Execution Parameters</h3><figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Execution <span class=\"keyword\">Parameters</span></span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ol>\n<h3 id=\"Controlling-Latency\"><a href=\"#Controlling-Latency\" class=\"headerlink\" title=\"Controlling Latency\"></a>Controlling Latency</h3>   <figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Controlling Latency</span><br><span class=\"line\">By default, elements are <span class=\"keyword\">not</span> transferred on the<span class=\"built_in\"> network </span>one-by-one (which would cause unnecessary<span class=\"built_in\"> network </span>traffic) but are buffered. The size of the buffers (which are actually transferred between machines) can be <span class=\"builtin-name\">set</span> <span class=\"keyword\">in</span> the Flink<span class=\"built_in\"> config </span>files. <span class=\"keyword\">While</span> this method is good <span class=\"keyword\">for</span> optimizing throughput, it can cause latency issues when the<span class=\"built_in\"> incoming </span>stream is <span class=\"keyword\">not</span> fast enough. <span class=\"keyword\">To</span> control throughput <span class=\"keyword\">and</span> latency, you can use env.setBufferTimeout(timeoutMillis) on the execution environment (<span class=\"keyword\">or</span> on individual operators) <span class=\"keyword\">to</span> <span class=\"builtin-name\">set</span> a maximum wait time <span class=\"keyword\">for</span> the buffers <span class=\"keyword\">to</span> fill up. After this time, the buffers are sent automatically even <span class=\"keyword\">if</span> they are <span class=\"keyword\">not</span> full. The<span class=\"built_in\"> default </span>value <span class=\"keyword\">for</span> this timeout is 100 ms.</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">val</span> env: <span class=\"type\">LocalStreamEnvironment</span> = <span class=\"type\">StreamExecutionEnvironment</span>.createLocalEnvironment</span><br><span class=\"line\">env.setBufferTimeout(timeoutMillis)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">env.generateSequence(1,10).map(myMap).setBufferTimeout(timeoutMillis)</span><br><span class=\"line\">To maximize throughput, <span class=\"keyword\">set</span> setBufferTimeout(<span class=\"number\">-1</span>) which will remove the <span class=\"keyword\">timeout</span> <span class=\"keyword\">and</span> buffers will <span class=\"keyword\">only</span> be flushed <span class=\"keyword\">when</span> they <span class=\"keyword\">are</span> full. <span class=\"keyword\">To</span> minimize latency, <span class=\"keyword\">set</span> the <span class=\"keyword\">timeout</span> <span class=\"keyword\">to</span> a <span class=\"keyword\">value</span> <span class=\"keyword\">close</span> <span class=\"keyword\">to</span> <span class=\"number\">0</span> (<span class=\"keyword\">for</span> example <span class=\"number\">5</span> <span class=\"keyword\">or</span> <span class=\"number\">10</span> ms). A buffer <span class=\"keyword\">timeout</span> <span class=\"keyword\">of</span> <span class=\"number\">0</span> should be avoided, because it can cause severe <span class=\"keyword\">performance</span> degradation.</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>开发文档地址：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:<span class=\"regexp\">//</span>ci.apache.org<span class=\"regexp\">/projects/</span>flink<span class=\"regexp\">/flink-docs-release-1.9/</span>dev/types_serialization.html</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Stateful-Computations-over-Data-Streams\"><a href=\"#Stateful-Computations-over-Data-Streams\" class=\"headerlink\" title=\"Stateful Computations over Data Streams\"></a>Stateful Computations over Data Streams</h3><pre><code>离线处理/批处理 有没有状态？ 一般不需要状态\n\n\nUnbound stream  无界的   就是流处理\nbound stream    有界的        批处理\n\n\nflink比较好的：</code></pre>\n<p>Depending on the type of data sources, i.e. bounded or unbounded sources, you would either write a batch program or a streaming program where the DataSet API is used for batch and the DataStream API is used for streaming. </p>\n<h3 id=\"DataSet-and-DataStream\"><a href=\"#DataSet-and-DataStream\" class=\"headerlink\" title=\"DataSet and DataStream\"></a>DataSet and DataStream</h3><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Flink has <span class=\"keyword\">the</span> special classes DataSet <span class=\"keyword\">and</span> DataStream <span class=\"built_in\">to</span> represent data <span class=\"keyword\">in</span> <span class=\"keyword\">a</span> program. You can think <span class=\"keyword\">of</span> them <span class=\"keyword\">as</span> immutable collections <span class=\"keyword\">of</span> data that can contain duplicates. In <span class=\"keyword\">the</span> <span class=\"keyword\">case</span> <span class=\"keyword\">of</span> DataSet <span class=\"keyword\">the</span> data is finite <span class=\"keyword\">while</span> <span class=\"keyword\">for</span> <span class=\"keyword\">a</span> DataStream <span class=\"keyword\">the</span> <span class=\"built_in\">number</span> <span class=\"keyword\">of</span> elements can be unbounded.</span><br><span class=\"line\"></span><br><span class=\"line\">These collections differ <span class=\"built_in\">from</span> regular Java collections <span class=\"keyword\">in</span> some key ways. First, they are immutable, meaning that once they are created you cannot <span class=\"built_in\">add</span> <span class=\"keyword\">or</span> remove elements. You can also <span class=\"keyword\">not</span> simply inspect <span class=\"keyword\">the</span> elements inside.</span><br><span class=\"line\"></span><br><span class=\"line\">A collection is initially created <span class=\"keyword\">by</span> adding <span class=\"keyword\">a</span> source <span class=\"keyword\">in</span> <span class=\"keyword\">a</span> Flink program <span class=\"keyword\">and</span> <span class=\"built_in\">new</span> collections are derived <span class=\"built_in\">from</span> these <span class=\"keyword\">by</span> transforming them <span class=\"keyword\">using</span> API methods such <span class=\"keyword\">as</span> map, <span class=\"built_in\">filter</span> <span class=\"keyword\">and</span> so on.</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Anatomy-of-a-Flink-Program\"><a href=\"#Anatomy-of-a-Flink-Program\" class=\"headerlink\" title=\"Anatomy of a Flink Program\"></a>Anatomy of a Flink Program</h3><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Flink programs look like regular programs that transform collections <span class=\"keyword\">of</span> data. Each program consists <span class=\"keyword\">of</span> <span class=\"keyword\">the</span> same basic parts:</span><br><span class=\"line\"></span><br><span class=\"line\">Obtain <span class=\"keyword\">an</span> execution environment,</span><br><span class=\"line\">Load/<span class=\"built_in\">create</span> <span class=\"keyword\">the</span> initial data,</span><br><span class=\"line\">Specify transformations <span class=\"keyword\">on</span> <span class=\"title\">this</span> <span class=\"title\">data</span>,</span><br><span class=\"line\">Specify where <span class=\"built_in\">to</span> <span class=\"built_in\">put</span> <span class=\"keyword\">the</span> results <span class=\"keyword\">of</span> your computations,</span><br><span class=\"line\">Trigger <span class=\"keyword\">the</span> program execution</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"flink的connect算子\"><a href=\"#flink的connect算子\" class=\"headerlink\" title=\"flink的connect算子\"></a>flink的connect算子</h3><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">connect算子可以合并两个DataStream对象，两个DataStream的类型不必一致</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>\t算子同样可以合并两个<span class=\"title\">DataStream</span>对象，两个<span class=\"title\">DataStream</span>的类型需要一致</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"flink的自定义分区器\"><a href=\"#flink的自定义分区器\" class=\"headerlink\" title=\"flink的自定义分区器\"></a>flink的自定义分区器</h3><p>  步骤：</p>\n<ol>\n<li><p>继承Partitioner类，定义输入类型为范型 </p>\n</li>\n<li><p>实现partition方法</p>\n</li>\n<li><p>返回分区数</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  class LikerPartitioner extends Partitioner[String]&#123;</span><br><span class=\"line\">  <span class=\"function\">override def <span class=\"title\">partition</span><span class=\"params\">(key: String, numPartitions: Int)</span>: Int </span>= &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(key == <span class=\"string\">&quot;liker&quot;</span>)&#123;</span><br><span class=\"line\">      <span class=\"number\">0</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(key == <span class=\"string\">&quot;erlei&quot;</span>)&#123;</span><br><span class=\"line\">      <span class=\"number\">1</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(key == <span class=\"string\">&quot;hehe&quot;</span>)&#123;</span><br><span class=\"line\">      <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t  <span class=\"number\">3</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自定义DataSource\"><a href=\"#自定义DataSource\" class=\"headerlink\" title=\"自定义DataSource\"></a>自定义DataSource</h3><p> DataSource有如下几种</p>\n<ol>\n<li>SourceFunction</li>\n<li>RichSourceFunction</li>\n<li>ParallelSourceFunction</li>\n<li>RichParallelSourceFunction<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">其中SourceFunction和ParallelSourceFunction的区别是</span><br><span class=\"line\">\t<span class=\"number\">1.</span> SourceFunction 不能设置并行度</span><br><span class=\"line\">\t<span class=\"number\">2.</span> ParallelSourceFunction可以设置并行度</span><br><span class=\"line\">\t<span class=\"number\">3.</span> 而RichXXX主要是有两个open、close方法，这两个方法可以作为初始化和关闭资源使用。</span><br><span class=\"line\">  \t</span><br></pre></td></tr></table></figure>\n<h3 id=\"自定义MySql的DataSource\"><a href=\"#自定义MySql的DataSource\" class=\"headerlink\" title=\"自定义MySql的DataSource\"></a>自定义MySql的DataSource</h3>步骤：<ol>\n<li>继承RichSourceFunction类</li>\n<li>open方法中建立连接</li>\n<li>run方法中执行查询语句。并将数据collect到sourceContetxt中</li>\n<li>close释放连接<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  class MySQLSource(sql:String) extends RichSourceFunction[Liker]&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> connection:Connection = _</span><br><span class=\"line\">  <span class=\"keyword\">var</span> pstmt:PreparedStatement = _</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\">override def <span class=\"title\">open</span><span class=\"params\">(parameters: Configuration)</span>: Unit </span>= &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.open(parameters)</span><br><span class=\"line\">    connection = JdbcUtil.connection</span><br><span class=\"line\">    pstmt = connection.prepareStatement(sql)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\">override def <span class=\"title\">close</span><span class=\"params\">()</span>: Unit </span>= &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.close()</span><br><span class=\"line\">    JdbcUtil.relase(connection,pstmt,<span class=\"keyword\">null</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\">override def <span class=\"title\">run</span><span class=\"params\">(sourceContext: SourceFunction.SourceContext[Liker])</span>: Unit </span>= &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> rs = pstmt.executeQuery()</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (rs.next())&#123;</span><br><span class=\"line\">      val liker = Liker(rs.getInt(<span class=\"number\">0</span>),rs.getString(<span class=\"number\">1</span>),rs.getString(<span class=\"number\">2</span>))</span><br><span class=\"line\">      sourceContext.collect(liker)</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\">override def <span class=\"title\">cancel</span><span class=\"params\">()</span>: Unit </span>= &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"Execution-Parameters\"><a href=\"#Execution-Parameters\" class=\"headerlink\" title=\"Execution Parameters\"></a>Execution Parameters</h3><figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Execution <span class=\"keyword\">Parameters</span></span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ol>\n<h3 id=\"Controlling-Latency\"><a href=\"#Controlling-Latency\" class=\"headerlink\" title=\"Controlling Latency\"></a>Controlling Latency</h3>   <figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Controlling Latency</span><br><span class=\"line\">By default, elements are <span class=\"keyword\">not</span> transferred on the<span class=\"built_in\"> network </span>one-by-one (which would cause unnecessary<span class=\"built_in\"> network </span>traffic) but are buffered. The size of the buffers (which are actually transferred between machines) can be <span class=\"builtin-name\">set</span> <span class=\"keyword\">in</span> the Flink<span class=\"built_in\"> config </span>files. <span class=\"keyword\">While</span> this method is good <span class=\"keyword\">for</span> optimizing throughput, it can cause latency issues when the<span class=\"built_in\"> incoming </span>stream is <span class=\"keyword\">not</span> fast enough. <span class=\"keyword\">To</span> control throughput <span class=\"keyword\">and</span> latency, you can use env.setBufferTimeout(timeoutMillis) on the execution environment (<span class=\"keyword\">or</span> on individual operators) <span class=\"keyword\">to</span> <span class=\"builtin-name\">set</span> a maximum wait time <span class=\"keyword\">for</span> the buffers <span class=\"keyword\">to</span> fill up. After this time, the buffers are sent automatically even <span class=\"keyword\">if</span> they are <span class=\"keyword\">not</span> full. The<span class=\"built_in\"> default </span>value <span class=\"keyword\">for</span> this timeout is 100 ms.</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">val</span> env: <span class=\"type\">LocalStreamEnvironment</span> = <span class=\"type\">StreamExecutionEnvironment</span>.createLocalEnvironment</span><br><span class=\"line\">env.setBufferTimeout(timeoutMillis)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">env.generateSequence(1,10).map(myMap).setBufferTimeout(timeoutMillis)</span><br><span class=\"line\">To maximize throughput, <span class=\"keyword\">set</span> setBufferTimeout(<span class=\"number\">-1</span>) which will remove the <span class=\"keyword\">timeout</span> <span class=\"keyword\">and</span> buffers will <span class=\"keyword\">only</span> be flushed <span class=\"keyword\">when</span> they <span class=\"keyword\">are</span> full. <span class=\"keyword\">To</span> minimize latency, <span class=\"keyword\">set</span> the <span class=\"keyword\">timeout</span> <span class=\"keyword\">to</span> a <span class=\"keyword\">value</span> <span class=\"keyword\">close</span> <span class=\"keyword\">to</span> <span class=\"number\">0</span> (<span class=\"keyword\">for</span> example <span class=\"number\">5</span> <span class=\"keyword\">or</span> <span class=\"number\">10</span> ms). A buffer <span class=\"keyword\">timeout</span> <span class=\"keyword\">of</span> <span class=\"number\">0</span> should be avoided, because it can cause severe <span class=\"keyword\">performance</span> degradation.</span><br></pre></td></tr></table></figure>\n"},{"title":"多线程与高并发01","renderNumberedHeading":true,"grammar_cjkRuby":true,"_content":"\n### synchronized(Object)\n\tobject不能用String常量，Integer，Long。因为他们在常量池中，线程之间会共享。加锁可能会加到意料之外的代码中。\n\t\n### 线程同步\n\t-synchronized\n\t\t·锁的是对象，不是代码。\n\t\t·synchronized == synchronized(XX.class) , 即锁的是当前类的类对象\n\t\t·锁定方法，非锁定方法 同时执行会造成脏读\n\t\t·锁升级\n\t\t\t- 偏向锁 -> 自旋锁 -> 重量级锁\n\t\t\t- 自旋锁切换到重量级锁的时候需要从用户态切换到内核态\n\n### 锁升级过程\n\n\n```\n  \t无锁 --> 偏向锁 --> 自旋锁 --> 重量级锁\n\t\n```\n```\n\t无锁：未加锁态\n```\n```\n\t偏向锁(轻量级锁)：加锁的时候加上一个标记，当线程重新去执行时，判断这个标记是否是自己的标记，如果是，直接执行；效率高；\n\t\t1.默认情况 偏向锁有个时延，默认是4秒\n\t\t2.why? ...\n\t\t\n\t\t3.上偏向锁，指的就是，把markword的线程ID改为自己的线程ID的过程；\n```\n```\n\t自旋锁：指的是阻塞态的线程通过自旋的方式去获取锁(while(true))，这种方式的好处是，只需要在用户态即可完成，无需切换到内核态。在线程运行时间短，争用的线程少的情况下效率比较高；\n```\n\n```\n\t重量级锁：等待线程挂起，进入等待队列，等待操作系统的调度，然后再映射回用户空间\n\t\t优点：不占用cpu；\n\t\t缺点：需要从用户态切换到内核态；\n```\n\n```\n\t升级过程：\n\t\t1. Object o = new Object()\n\t\t2. 默认synchronized(o)\n\t\t\t1. 00->轻量级锁\n\t\t\t2. 默认情况 偏向锁有个时延，默认是4秒 \n\t\t\t3. why? 因为JVM虚拟机自己有一些默认启动的线程，里面有好多sync代码，这些sync代码启动时就知道肯定会有竞争，如果使用偏向锁，就会造成偏向锁不断的进行锁撤销和锁升级的操作，效率较低。\n\t\t3. 如果有线程上锁\n\t\t\t1. 上偏向锁，就是把markword的线程ID改为自己的线程ID的过程\n\t\t4. 如果有线程竞争\n\t\t\t1. 撤销偏向锁，升级轻量级锁\n\t\t\t2. 线程在自己的线程栈生成LockRecord，用CAS操作将markword设置为指向自己这个线程的LR指针，设置成功者的到锁\n\t\t\t3.  \n\t\t5. 如果竞争加剧\n\t\t\t1. 有线程超过10次自旋，-XX:PreBlockSpin可以设置，或者自选线程数超过CPU核数的一半，在jdk1.6之后，加入自适应自旋 Adapative Self Spinning，JVM自己控制 \n\t\t\t2. CPU从3级-0级系统调用，线程挂起，进入等待队列，等待操作系统的调度，然后在映射回用户空间；\n\t\t6. \n\t\t\t \n```\n\t\n\n","source":"_posts/多线程与高并发1.md","raw":"---\ntitle: 多线程与高并发01\ntags: 线程的概念，启动方式，常用方法\nrenderNumberedHeading: true\ngrammar_cjkRuby: true\n---\n\n### synchronized(Object)\n\tobject不能用String常量，Integer，Long。因为他们在常量池中，线程之间会共享。加锁可能会加到意料之外的代码中。\n\t\n### 线程同步\n\t-synchronized\n\t\t·锁的是对象，不是代码。\n\t\t·synchronized == synchronized(XX.class) , 即锁的是当前类的类对象\n\t\t·锁定方法，非锁定方法 同时执行会造成脏读\n\t\t·锁升级\n\t\t\t- 偏向锁 -> 自旋锁 -> 重量级锁\n\t\t\t- 自旋锁切换到重量级锁的时候需要从用户态切换到内核态\n\n### 锁升级过程\n\n\n```\n  \t无锁 --> 偏向锁 --> 自旋锁 --> 重量级锁\n\t\n```\n```\n\t无锁：未加锁态\n```\n```\n\t偏向锁(轻量级锁)：加锁的时候加上一个标记，当线程重新去执行时，判断这个标记是否是自己的标记，如果是，直接执行；效率高；\n\t\t1.默认情况 偏向锁有个时延，默认是4秒\n\t\t2.why? ...\n\t\t\n\t\t3.上偏向锁，指的就是，把markword的线程ID改为自己的线程ID的过程；\n```\n```\n\t自旋锁：指的是阻塞态的线程通过自旋的方式去获取锁(while(true))，这种方式的好处是，只需要在用户态即可完成，无需切换到内核态。在线程运行时间短，争用的线程少的情况下效率比较高；\n```\n\n```\n\t重量级锁：等待线程挂起，进入等待队列，等待操作系统的调度，然后再映射回用户空间\n\t\t优点：不占用cpu；\n\t\t缺点：需要从用户态切换到内核态；\n```\n\n```\n\t升级过程：\n\t\t1. Object o = new Object()\n\t\t2. 默认synchronized(o)\n\t\t\t1. 00->轻量级锁\n\t\t\t2. 默认情况 偏向锁有个时延，默认是4秒 \n\t\t\t3. why? 因为JVM虚拟机自己有一些默认启动的线程，里面有好多sync代码，这些sync代码启动时就知道肯定会有竞争，如果使用偏向锁，就会造成偏向锁不断的进行锁撤销和锁升级的操作，效率较低。\n\t\t3. 如果有线程上锁\n\t\t\t1. 上偏向锁，就是把markword的线程ID改为自己的线程ID的过程\n\t\t4. 如果有线程竞争\n\t\t\t1. 撤销偏向锁，升级轻量级锁\n\t\t\t2. 线程在自己的线程栈生成LockRecord，用CAS操作将markword设置为指向自己这个线程的LR指针，设置成功者的到锁\n\t\t\t3.  \n\t\t5. 如果竞争加剧\n\t\t\t1. 有线程超过10次自旋，-XX:PreBlockSpin可以设置，或者自选线程数超过CPU核数的一半，在jdk1.6之后，加入自适应自旋 Adapative Self Spinning，JVM自己控制 \n\t\t\t2. CPU从3级-0级系统调用，线程挂起，进入等待队列，等待操作系统的调度，然后在映射回用户空间；\n\t\t6. \n\t\t\t \n```\n\t\n\n","slug":"多线程与高并发1","published":1,"date":"2020-10-26T06:56:14.776Z","updated":"2020-10-26T06:56:14.776Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgq712tk000d0gg09qrtcw5p","content":"<h3 id=\"synchronized-Object\"><a href=\"#synchronized-Object\" class=\"headerlink\" title=\"synchronized(Object)\"></a>synchronized(Object)</h3><pre><code>object不能用String常量，Integer，Long。因为他们在常量池中，线程之间会共享。加锁可能会加到意料之外的代码中。</code></pre>\n<h3 id=\"线程同步\"><a href=\"#线程同步\" class=\"headerlink\" title=\"线程同步\"></a>线程同步</h3><pre><code>-synchronized\n    ·锁的是对象，不是代码。\n    ·synchronized == synchronized(XX.class) , 即锁的是当前类的类对象\n    ·锁定方法，非锁定方法 同时执行会造成脏读\n    ·锁升级\n        - 偏向锁 -&gt; 自旋锁 -&gt; 重量级锁\n        - 自旋锁切换到重量级锁的时候需要从用户态切换到内核态</code></pre>\n<h3 id=\"锁升级过程\"><a href=\"#锁升级过程\" class=\"headerlink\" title=\"锁升级过程\"></a>锁升级过程</h3><figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">无锁</span> --&gt; <span class=\"comment\">偏向锁</span> --&gt; <span class=\"comment\">自旋锁</span> --&gt; <span class=\"comment\">重量级锁</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">无锁：未加锁态</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">偏向锁(轻量级锁)：加锁的时候加上一个标记，当线程重新去执行时，判断这个标记是否是自己的标记，如果是，直接执行；效率高；</span><br><span class=\"line\">\t<span class=\"number\">1.</span>默认情况 偏向锁有个时延，默认是<span class=\"number\">4</span>秒</span><br><span class=\"line\">\t<span class=\"number\">2.</span>why? ...</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"number\">3.</span>上偏向锁，指的就是，把markword的线程ID改为自己的线程ID的过程；</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">自旋锁：指的是阻塞态的线程通过自旋的方式去获取锁(<span class=\"keyword\">while</span>(<span class=\"literal\">true</span>))，这种方式的好处是，只需要在用户态即可完成，无需切换到内核态。在线程运行时间短，争用的线程少的情况下效率比较高；</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight x86asm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">重量级锁：等待线程挂起，进入等待队列，等待操作系统的调度，然后再映射回用户空间</span><br><span class=\"line\">\t优点：不占用<span class=\"meta\">cpu</span>；</span><br><span class=\"line\">\t缺点：需要从用户态切换到内核态；</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">升级过程：</span><br><span class=\"line\">\t<span class=\"number\">1.</span> Object o = new Object()</span><br><span class=\"line\">\t<span class=\"number\">2.</span> 默认synchronized(o)</span><br><span class=\"line\">\t\t<span class=\"number\">1.</span> <span class=\"number\">00</span>-&gt;轻量级锁</span><br><span class=\"line\">\t\t<span class=\"number\">2.</span> 默认情况 偏向锁有个时延，默认是<span class=\"number\">4</span>秒 </span><br><span class=\"line\">\t\t<span class=\"number\">3.</span> why? 因为JVM虚拟机自己有一些默认启动的线程，里面有好多sync代码，这些sync代码启动时就知道肯定会有竞争，如果使用偏向锁，就会造成偏向锁不断的进行锁撤销和锁升级的操作，效率较低。</span><br><span class=\"line\">\t<span class=\"number\">3.</span> 如果有线程上锁</span><br><span class=\"line\">\t\t<span class=\"number\">1.</span> 上偏向锁，就是把markword的线程ID改为自己的线程ID的过程</span><br><span class=\"line\">\t<span class=\"number\">4.</span> 如果有线程竞争</span><br><span class=\"line\">\t\t<span class=\"number\">1.</span> 撤销偏向锁，升级轻量级锁</span><br><span class=\"line\">\t\t<span class=\"number\">2.</span> 线程在自己的线程栈生成LockRecord，用CAS操作将markword设置为指向自己这个线程的LR指针，设置成功者的到锁</span><br><span class=\"line\">\t\t<span class=\"number\">3.</span>  </span><br><span class=\"line\">\t<span class=\"number\">5.</span> 如果竞争加剧</span><br><span class=\"line\">\t\t<span class=\"number\">1.</span> 有线程超过<span class=\"number\">10</span>次自旋，-XX:PreBlockSpin可以设置，或者自选线程数超过CPU核数的一半，在jdk1<span class=\"number\">.6</span>之后，加入自适应自旋 Adapative Self Spinning，JVM自己控制 </span><br><span class=\"line\">\t\t<span class=\"number\">2.</span> CPU从<span class=\"number\">3</span>级<span class=\"number\">-0</span>级系统调用，线程挂起，进入等待队列，等待操作系统的调度，然后在映射回用户空间；</span><br><span class=\"line\">\t<span class=\"number\">6.</span> </span><br><span class=\"line\">\t\t </span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"synchronized-Object\"><a href=\"#synchronized-Object\" class=\"headerlink\" title=\"synchronized(Object)\"></a>synchronized(Object)</h3><pre><code>object不能用String常量，Integer，Long。因为他们在常量池中，线程之间会共享。加锁可能会加到意料之外的代码中。</code></pre>\n<h3 id=\"线程同步\"><a href=\"#线程同步\" class=\"headerlink\" title=\"线程同步\"></a>线程同步</h3><pre><code>-synchronized\n    ·锁的是对象，不是代码。\n    ·synchronized == synchronized(XX.class) , 即锁的是当前类的类对象\n    ·锁定方法，非锁定方法 同时执行会造成脏读\n    ·锁升级\n        - 偏向锁 -&gt; 自旋锁 -&gt; 重量级锁\n        - 自旋锁切换到重量级锁的时候需要从用户态切换到内核态</code></pre>\n<h3 id=\"锁升级过程\"><a href=\"#锁升级过程\" class=\"headerlink\" title=\"锁升级过程\"></a>锁升级过程</h3><figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">无锁</span> --&gt; <span class=\"comment\">偏向锁</span> --&gt; <span class=\"comment\">自旋锁</span> --&gt; <span class=\"comment\">重量级锁</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">无锁：未加锁态</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">偏向锁(轻量级锁)：加锁的时候加上一个标记，当线程重新去执行时，判断这个标记是否是自己的标记，如果是，直接执行；效率高；</span><br><span class=\"line\">\t<span class=\"number\">1.</span>默认情况 偏向锁有个时延，默认是<span class=\"number\">4</span>秒</span><br><span class=\"line\">\t<span class=\"number\">2.</span>why? ...</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"number\">3.</span>上偏向锁，指的就是，把markword的线程ID改为自己的线程ID的过程；</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">自旋锁：指的是阻塞态的线程通过自旋的方式去获取锁(<span class=\"keyword\">while</span>(<span class=\"literal\">true</span>))，这种方式的好处是，只需要在用户态即可完成，无需切换到内核态。在线程运行时间短，争用的线程少的情况下效率比较高；</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight x86asm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">重量级锁：等待线程挂起，进入等待队列，等待操作系统的调度，然后再映射回用户空间</span><br><span class=\"line\">\t优点：不占用<span class=\"meta\">cpu</span>；</span><br><span class=\"line\">\t缺点：需要从用户态切换到内核态；</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">升级过程：</span><br><span class=\"line\">\t<span class=\"number\">1.</span> Object o = new Object()</span><br><span class=\"line\">\t<span class=\"number\">2.</span> 默认synchronized(o)</span><br><span class=\"line\">\t\t<span class=\"number\">1.</span> <span class=\"number\">00</span>-&gt;轻量级锁</span><br><span class=\"line\">\t\t<span class=\"number\">2.</span> 默认情况 偏向锁有个时延，默认是<span class=\"number\">4</span>秒 </span><br><span class=\"line\">\t\t<span class=\"number\">3.</span> why? 因为JVM虚拟机自己有一些默认启动的线程，里面有好多sync代码，这些sync代码启动时就知道肯定会有竞争，如果使用偏向锁，就会造成偏向锁不断的进行锁撤销和锁升级的操作，效率较低。</span><br><span class=\"line\">\t<span class=\"number\">3.</span> 如果有线程上锁</span><br><span class=\"line\">\t\t<span class=\"number\">1.</span> 上偏向锁，就是把markword的线程ID改为自己的线程ID的过程</span><br><span class=\"line\">\t<span class=\"number\">4.</span> 如果有线程竞争</span><br><span class=\"line\">\t\t<span class=\"number\">1.</span> 撤销偏向锁，升级轻量级锁</span><br><span class=\"line\">\t\t<span class=\"number\">2.</span> 线程在自己的线程栈生成LockRecord，用CAS操作将markword设置为指向自己这个线程的LR指针，设置成功者的到锁</span><br><span class=\"line\">\t\t<span class=\"number\">3.</span>  </span><br><span class=\"line\">\t<span class=\"number\">5.</span> 如果竞争加剧</span><br><span class=\"line\">\t\t<span class=\"number\">1.</span> 有线程超过<span class=\"number\">10</span>次自旋，-XX:PreBlockSpin可以设置，或者自选线程数超过CPU核数的一半，在jdk1<span class=\"number\">.6</span>之后，加入自适应自旋 Adapative Self Spinning，JVM自己控制 </span><br><span class=\"line\">\t\t<span class=\"number\">2.</span> CPU从<span class=\"number\">3</span>级<span class=\"number\">-0</span>级系统调用，线程挂起，进入等待队列，等待操作系统的调度，然后在映射回用户空间；</span><br><span class=\"line\">\t<span class=\"number\">6.</span> </span><br><span class=\"line\">\t\t </span><br></pre></td></tr></table></figure>\n\n\n"},{"title":"语录","renderNumberedHeading":true,"grammar_cjkRuby":true,"_content":"\n\n2020-09-18 周五 天气还行\n```\n\t\t决定要坚持做一件事情时，信誓旦旦。\n\t\t坚持的过程中，怀疑自己，动摇自己，直到改变初心。\n```\n\n2020-09-19 周六 天气还行\n\n```\n\t\t其实现在并不糟糕，如今的现状不是没有预料到过，甚至可以说是在预料之中的。不要心急，沉下心，努力，努力努力。\n```\n\n```flow\nst=>start: 开始\ne=>end: 结束\nop=>operation: 操作步骤\ncond=>condition: 是 或者 否?\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```","source":"_posts/语录.md","raw":"---\ntitle: 语录\ntags: \nrenderNumberedHeading: true\ngrammar_cjkRuby: true\n---\n\n\n2020-09-18 周五 天气还行\n```\n\t\t决定要坚持做一件事情时，信誓旦旦。\n\t\t坚持的过程中，怀疑自己，动摇自己，直到改变初心。\n```\n\n2020-09-19 周六 天气还行\n\n```\n\t\t其实现在并不糟糕，如今的现状不是没有预料到过，甚至可以说是在预料之中的。不要心急，沉下心，努力，努力努力。\n```\n\n```flow\nst=>start: 开始\ne=>end: 结束\nop=>operation: 操作步骤\ncond=>condition: 是 或者 否?\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```","slug":"语录","published":1,"date":"2020-10-26T06:56:14.776Z","updated":"2020-10-26T06:56:14.777Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgq712tl000e0gg041gq17qo","content":"<p>2020-09-18 周五 天气还行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">决定要坚持做一件事情时，信誓旦旦。</span><br><span class=\"line\">坚持的过程中，怀疑自己，动摇自己，直到改变初心。</span><br></pre></td></tr></table></figure>\n\n<p>2020-09-19 周六 天气还行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">其实现在并不糟糕，如今的现状不是没有预料到过，甚至可以说是在预料之中的。不要心急，沉下心，努力，努力努力。</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st&#x3D;&gt;start: 开始</span><br><span class=\"line\">e&#x3D;&gt;end: 结束</span><br><span class=\"line\">op&#x3D;&gt;operation: 操作步骤</span><br><span class=\"line\">cond&#x3D;&gt;condition: 是 或者 否?</span><br><span class=\"line\"></span><br><span class=\"line\">st-&gt;op-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;op</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>2020-09-18 周五 天气还行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">决定要坚持做一件事情时，信誓旦旦。</span><br><span class=\"line\">坚持的过程中，怀疑自己，动摇自己，直到改变初心。</span><br></pre></td></tr></table></figure>\n\n<p>2020-09-19 周六 天气还行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">其实现在并不糟糕，如今的现状不是没有预料到过，甚至可以说是在预料之中的。不要心急，沉下心，努力，努力努力。</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st&#x3D;&gt;start: 开始</span><br><span class=\"line\">e&#x3D;&gt;end: 结束</span><br><span class=\"line\">op&#x3D;&gt;operation: 操作步骤</span><br><span class=\"line\">cond&#x3D;&gt;condition: 是 或者 否?</span><br><span class=\"line\"></span><br><span class=\"line\">st-&gt;op-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;op</span><br></pre></td></tr></table></figure>"},{"title":"Query DSL","renderNumberedHeading":true,"grammar_cjkRuby":true,"_content":"\n## Query and Filter context\n\n```\nQuery关注点：此文档与此查询子句的匹配程度如何?\n\t1）是否包含？\n\t\t确定文档是否应该成为结果的一部分\n\t2）相关度得分多少？\n\t\t除了确定文档是否匹配外，查询子句还计算了表示文档与其他文档相匹配的_score\n\t3）得分越高，相关度越高?\n\t\nFilter关注点：此文档和查询子句匹配么？\n\t1)是否包含\n\t2）不涉及评分\n\t3）针对结构化数据\n\t\t适用于完全精确匹配，范围检索\n\t4)更快\nfilter查询性能好，可缓存。不许计算得分\nquery不可缓存；需要计算得分。\n\nElasticsearch将创建一个文档匹配过滤器的位集bitset（如果文档匹配则为1，否则为0）。 随后用相同的过滤器执行查询将重用此信息。\n\n每当添加或更新新文档时，位集bitset也会更新。\n\n全文检索以及任何使用相关性评分的场景使用query检索。\n\n除此之外的其他使用filter过滤器过滤。\n\n```\n\n## Compound queries\n\n### bool query\n\n多个叶或组合查询语句的默认语句，例如must、should、must_not、filter，must和should子句的分数组合在一起，匹配越多越好，而must_not和filter子句在filter context中执行；\n\n### boosting query\n\n```\n返回与正相关匹配的文档，但是减少负相关文档的分数；\n```\n\n### constant_score query\n\n```\n一个query包装另外的query的查询，但是执行在filter context中。全部匹配的文档都使用相同的\"constant\"_score\n```\n\n### dis_max query\n\n```\n一个查询语句接受多个子查询，返回任意一个匹配任意一个查询语句的文档。当bool query合并所有匹配查询的分数时，dis_max查询使用最佳匹配的语句的分数；\n```\n\n### function_score query\n\n```\n使用函数修改主查询返回的分数，以考虑诸如受欢迎程度，新进度，距离或使用脚本实现的自定义算法等；\n```\n\n\n\n## 各种查询类型的详细说明\n\n### Boolean query\n\n```\n与文档匹配的查询，该文档与其他查询的boolean组合匹配\n使用一个或多个boolean子句，每一个子句都有一个类型\n```\n\n| occur    | Description                                                  |\n| -------- | ------------------------------------------------------------ |\n| must     | 查询子句必须出现在匹配的文档中，并且匹配的将有助于得分       |\n| filter   | 查询子句必须出现在匹配的文档中。但是并不像must 一样，不会进行评分。filter 的子句被执行在filter context中。意味着评分被忽略，并且查询会被考虑加入缓存； |\n| should   | 查询子句应该出现在匹配的文档中                               |\n| must_not | 查询子句必须不能出现在匹配的文档中，执行在filter context中，意味着评分被忽略，并且被考虑加入缓存中。由于评分被忽略所以返回的所有文档的评分为0 |\n\n#### Using minimum_should_match\n\n```\n使用参数minimum_should_match 指定几个或百分数的should子句必须匹配。\n如果一个bool qurey 包含至少一个should子句，没有must和filter，minimum_should_match默认为1，如果有must或filter默认为0；\n```\n\n| Type                  | Example     | Description                                                  |\n| --------------------- | ----------- | ------------------------------------------------------------ |\n| Integer               | 3           | 指定一个固定的值，与可选子句的数量无关；                     |\n| Negative   integer    | -2          | 全部的可选子句的数量减去这个值必须被匹配.                    |\n| Percentage            | 75%         | 指定可选子句的总数的百分比必须被匹配,这个值的计算是向下取整的. |\n| Negative percentage   | -25%        | 指定可选子句总数的百分比可以丢失. 计算同样是向下取整的. 然后从总数减去,以确定这个值 |\n| Combination           | 3<90%       | 一个正整数,跟一个<,在跟一个任意的前面提到的判断条件. 表示如果可选子句的数量小于等于这个integer那么需要全部匹配,但是如果大于这个integer的话就会应用和<后面的判断条件 |\n| Multiple combinations | 2<-25% 9<-3 |                                                              |\n\n```elasticsearch\n这个查询没有指定评分,所以返回的所有文档评分都为0\nGET _search\n{\n  \"query\": {\n    \"bool\": {\n      \"filter\": {\n        \"term\": {\n          \"status\": \"active\"\n        }\n      }\n    }\n  }\n}\n```\n\n```\n这个查询因为有一个match_all query,所以会为每个返回的document分配一个1.0的评分\nGET _search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"term\": {\n          \"status\": \"active\"\n        }\n      }\n    }\n  }\n}\n```\n\n```\nconstant_score 与上面的查询的效果一样\nGET _search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"status\": \"active\"\n        }\n      }\n    }\n  }\n}\n```\n\n#### Named queries\n\n```\n每一个query接受一个_name在顶级中定义.你可以命名queries对于跟踪哪一个query匹配返回的document.如果named queries被使用,响应的hit中会包含match_queries属性\n\nGET /_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"match\": { \"name.first\": { \"query\": \"shay\", \"_name\": \"first\" } } },\n        { \"match\": { \"name.last\": { \"query\": \"banon\", \"_name\": \"last\" } } }\n      ],\n      \"filter\": {\n        \"terms\": {\n          \"name.last\": [ \"banon\", \"kimchy\" ],\n          \"_name\": \"test\"\n        }\n      }\n    }\n  }\n}\n```\n\n### Boosting\n\n```\n返回与positive查询匹配的document,同时降低与查询匹配的相关性得分 negative.\n\n可以使用boosting查询来降级某些文档,而不必将他们从搜索结果[排除.\nGET /_search\n{\n  \"query\": {\n    \"boosting\": {\n      \"positive\": {\n        \"term\": {\n          \"text\": \"apple\"\n        }\n      },\n      \"negative\": {\n        \"term\": {\n          \"text\": \"pie tart fruit crumble tree\"\n        }\n      },\n      \"negative_boost\": 0.5\n    }\n  }\n}\n\npositive\n\t要运行的查询.返回的所有文档都必须与此查询匹配\nnegative\n\t查询用于降低匹配文档的相关性得分.\n\t如果返回的文档与positive查询和该查询匹配,则该boosting查询将按照如下计算文档的分\n\t1,从positive查询中获取原始的相关性分数\n\t2,将分数乘以negative_boost值\n\t\n```\n\n","source":"_posts/es/Query DSL.md","raw":"---\ntitle: Query DSL\t\ntags: es,Query DSL\t\nrenderNumberedHeading: true\ngrammar_cjkRuby: true\n---\n\n## Query and Filter context\n\n```\nQuery关注点：此文档与此查询子句的匹配程度如何?\n\t1）是否包含？\n\t\t确定文档是否应该成为结果的一部分\n\t2）相关度得分多少？\n\t\t除了确定文档是否匹配外，查询子句还计算了表示文档与其他文档相匹配的_score\n\t3）得分越高，相关度越高?\n\t\nFilter关注点：此文档和查询子句匹配么？\n\t1)是否包含\n\t2）不涉及评分\n\t3）针对结构化数据\n\t\t适用于完全精确匹配，范围检索\n\t4)更快\nfilter查询性能好，可缓存。不许计算得分\nquery不可缓存；需要计算得分。\n\nElasticsearch将创建一个文档匹配过滤器的位集bitset（如果文档匹配则为1，否则为0）。 随后用相同的过滤器执行查询将重用此信息。\n\n每当添加或更新新文档时，位集bitset也会更新。\n\n全文检索以及任何使用相关性评分的场景使用query检索。\n\n除此之外的其他使用filter过滤器过滤。\n\n```\n\n## Compound queries\n\n### bool query\n\n多个叶或组合查询语句的默认语句，例如must、should、must_not、filter，must和should子句的分数组合在一起，匹配越多越好，而must_not和filter子句在filter context中执行；\n\n### boosting query\n\n```\n返回与正相关匹配的文档，但是减少负相关文档的分数；\n```\n\n### constant_score query\n\n```\n一个query包装另外的query的查询，但是执行在filter context中。全部匹配的文档都使用相同的\"constant\"_score\n```\n\n### dis_max query\n\n```\n一个查询语句接受多个子查询，返回任意一个匹配任意一个查询语句的文档。当bool query合并所有匹配查询的分数时，dis_max查询使用最佳匹配的语句的分数；\n```\n\n### function_score query\n\n```\n使用函数修改主查询返回的分数，以考虑诸如受欢迎程度，新进度，距离或使用脚本实现的自定义算法等；\n```\n\n\n\n## 各种查询类型的详细说明\n\n### Boolean query\n\n```\n与文档匹配的查询，该文档与其他查询的boolean组合匹配\n使用一个或多个boolean子句，每一个子句都有一个类型\n```\n\n| occur    | Description                                                  |\n| -------- | ------------------------------------------------------------ |\n| must     | 查询子句必须出现在匹配的文档中，并且匹配的将有助于得分       |\n| filter   | 查询子句必须出现在匹配的文档中。但是并不像must 一样，不会进行评分。filter 的子句被执行在filter context中。意味着评分被忽略，并且查询会被考虑加入缓存； |\n| should   | 查询子句应该出现在匹配的文档中                               |\n| must_not | 查询子句必须不能出现在匹配的文档中，执行在filter context中，意味着评分被忽略，并且被考虑加入缓存中。由于评分被忽略所以返回的所有文档的评分为0 |\n\n#### Using minimum_should_match\n\n```\n使用参数minimum_should_match 指定几个或百分数的should子句必须匹配。\n如果一个bool qurey 包含至少一个should子句，没有must和filter，minimum_should_match默认为1，如果有must或filter默认为0；\n```\n\n| Type                  | Example     | Description                                                  |\n| --------------------- | ----------- | ------------------------------------------------------------ |\n| Integer               | 3           | 指定一个固定的值，与可选子句的数量无关；                     |\n| Negative   integer    | -2          | 全部的可选子句的数量减去这个值必须被匹配.                    |\n| Percentage            | 75%         | 指定可选子句的总数的百分比必须被匹配,这个值的计算是向下取整的. |\n| Negative percentage   | -25%        | 指定可选子句总数的百分比可以丢失. 计算同样是向下取整的. 然后从总数减去,以确定这个值 |\n| Combination           | 3<90%       | 一个正整数,跟一个<,在跟一个任意的前面提到的判断条件. 表示如果可选子句的数量小于等于这个integer那么需要全部匹配,但是如果大于这个integer的话就会应用和<后面的判断条件 |\n| Multiple combinations | 2<-25% 9<-3 |                                                              |\n\n```elasticsearch\n这个查询没有指定评分,所以返回的所有文档评分都为0\nGET _search\n{\n  \"query\": {\n    \"bool\": {\n      \"filter\": {\n        \"term\": {\n          \"status\": \"active\"\n        }\n      }\n    }\n  }\n}\n```\n\n```\n这个查询因为有一个match_all query,所以会为每个返回的document分配一个1.0的评分\nGET _search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"term\": {\n          \"status\": \"active\"\n        }\n      }\n    }\n  }\n}\n```\n\n```\nconstant_score 与上面的查询的效果一样\nGET _search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"status\": \"active\"\n        }\n      }\n    }\n  }\n}\n```\n\n#### Named queries\n\n```\n每一个query接受一个_name在顶级中定义.你可以命名queries对于跟踪哪一个query匹配返回的document.如果named queries被使用,响应的hit中会包含match_queries属性\n\nGET /_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"match\": { \"name.first\": { \"query\": \"shay\", \"_name\": \"first\" } } },\n        { \"match\": { \"name.last\": { \"query\": \"banon\", \"_name\": \"last\" } } }\n      ],\n      \"filter\": {\n        \"terms\": {\n          \"name.last\": [ \"banon\", \"kimchy\" ],\n          \"_name\": \"test\"\n        }\n      }\n    }\n  }\n}\n```\n\n### Boosting\n\n```\n返回与positive查询匹配的document,同时降低与查询匹配的相关性得分 negative.\n\n可以使用boosting查询来降级某些文档,而不必将他们从搜索结果[排除.\nGET /_search\n{\n  \"query\": {\n    \"boosting\": {\n      \"positive\": {\n        \"term\": {\n          \"text\": \"apple\"\n        }\n      },\n      \"negative\": {\n        \"term\": {\n          \"text\": \"pie tart fruit crumble tree\"\n        }\n      },\n      \"negative_boost\": 0.5\n    }\n  }\n}\n\npositive\n\t要运行的查询.返回的所有文档都必须与此查询匹配\nnegative\n\t查询用于降低匹配文档的相关性得分.\n\t如果返回的文档与positive查询和该查询匹配,则该boosting查询将按照如下计算文档的分\n\t1,从positive查询中获取原始的相关性分数\n\t2,将分数乘以negative_boost值\n\t\n```\n\n","slug":"es/Query DSL","published":1,"date":"2020-10-26T07:09:08.759Z","updated":"2020-10-26T07:07:35.995Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgq7a8tp0000wog0ash83wej","content":"<h2 id=\"Query-and-Filter-context\"><a href=\"#Query-and-Filter-context\" class=\"headerlink\" title=\"Query and Filter context\"></a>Query and Filter context</h2><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Query关注点：此文档与此查询子句的匹配程度如何?</span><br><span class=\"line\">\t<span class=\"number\">1</span>）是否包含？</span><br><span class=\"line\">\t\t确定文档是否应该成为结果的一部分</span><br><span class=\"line\">\t<span class=\"number\">2</span>）相关度得分多少？</span><br><span class=\"line\">\t\t除了确定文档是否匹配外，查询子句还计算了表示文档与其他文档相匹配的_score</span><br><span class=\"line\">\t<span class=\"number\">3</span>）得分越高，相关度越高?</span><br><span class=\"line\">\t</span><br><span class=\"line\">Filter关注点：此文档和查询子句匹配么？</span><br><span class=\"line\">\t<span class=\"number\">1</span>)是否包含</span><br><span class=\"line\">\t<span class=\"number\">2</span>）不涉及评分</span><br><span class=\"line\">\t<span class=\"number\">3</span>）针对结构化数据</span><br><span class=\"line\">\t\t适用于完全精确匹配，范围检索</span><br><span class=\"line\">\t<span class=\"number\">4</span>)更快</span><br><span class=\"line\">filter查询性能好，可缓存。不许计算得分</span><br><span class=\"line\">query不可缓存；需要计算得分。</span><br><span class=\"line\"></span><br><span class=\"line\">Elasticsearch将创建一个文档匹配过滤器的位集bitset（如果文档匹配则为<span class=\"number\">1</span>，否则为<span class=\"number\">0</span>）。 随后用相同的过滤器执行查询将重用此信息。</span><br><span class=\"line\"></span><br><span class=\"line\">每当添加或更新新文档时，位集bitset也会更新。</span><br><span class=\"line\"></span><br><span class=\"line\">全文检索以及任何使用相关性评分的场景使用query检索。</span><br><span class=\"line\"></span><br><span class=\"line\">除此之外的其他使用filter过滤器过滤。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Compound-queries\"><a href=\"#Compound-queries\" class=\"headerlink\" title=\"Compound queries\"></a>Compound queries</h2><h3 id=\"bool-query\"><a href=\"#bool-query\" class=\"headerlink\" title=\"bool query\"></a>bool query</h3><p>多个叶或组合查询语句的默认语句，例如must、should、must_not、filter，must和should子句的分数组合在一起，匹配越多越好，而must_not和filter子句在filter context中执行；</p>\n<h3 id=\"boosting-query\"><a href=\"#boosting-query\" class=\"headerlink\" title=\"boosting query\"></a>boosting query</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">返回与正相关匹配的文档，但是减少负相关文档的分数；</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"constant-score-query\"><a href=\"#constant-score-query\" class=\"headerlink\" title=\"constant_score query\"></a>constant_score query</h3><figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一个<span class=\"keyword\">query</span>包装另外的<span class=\"keyword\">query</span>的查询，但是执行在filter context中。全部匹配的文档都使用相同的<span class=\"string\">&quot;constant&quot;</span>_score</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"dis-max-query\"><a href=\"#dis-max-query\" class=\"headerlink\" title=\"dis_max query\"></a>dis_max query</h3><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一个查询语句接受多个子查询，返回任意一个匹配任意一个查询语句的文档。当<span class=\"built_in\">bool</span> query合并所有匹配查询的分数时，dis_max查询使用最佳匹配的语句的分数；</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"function-score-query\"><a href=\"#function-score-query\" class=\"headerlink\" title=\"function_score query\"></a>function_score query</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用函数修改主查询返回的分数，以考虑诸如受欢迎程度，新进度，距离或使用脚本实现的自定义算法等；</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"各种查询类型的详细说明\"><a href=\"#各种查询类型的详细说明\" class=\"headerlink\" title=\"各种查询类型的详细说明\"></a>各种查询类型的详细说明</h2><h3 id=\"Boolean-query\"><a href=\"#Boolean-query\" class=\"headerlink\" title=\"Boolean query\"></a>Boolean query</h3><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">与文档匹配的查询，该文档与其他查询的<span class=\"built_in\">bool</span>ean组合匹配</span><br><span class=\"line\">使用一个或多个<span class=\"built_in\">bool</span>ean子句，每一个子句都有一个类型</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>occur</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>must</td>\n<td>查询子句必须出现在匹配的文档中，并且匹配的将有助于得分</td>\n</tr>\n<tr>\n<td>filter</td>\n<td>查询子句必须出现在匹配的文档中。但是并不像must 一样，不会进行评分。filter 的子句被执行在filter context中。意味着评分被忽略，并且查询会被考虑加入缓存；</td>\n</tr>\n<tr>\n<td>should</td>\n<td>查询子句应该出现在匹配的文档中</td>\n</tr>\n<tr>\n<td>must_not</td>\n<td>查询子句必须不能出现在匹配的文档中，执行在filter context中，意味着评分被忽略，并且被考虑加入缓存中。由于评分被忽略所以返回的所有文档的评分为0</td>\n</tr>\n</tbody></table>\n<h4 id=\"Using-minimum-should-match\"><a href=\"#Using-minimum-should-match\" class=\"headerlink\" title=\"Using minimum_should_match\"></a>Using minimum_should_match</h4><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用参数minimum_should_match 指定几个或百分数的should子句必须匹配。</span><br><span class=\"line\">如果一个<span class=\"built_in\">bool</span> qurey 包含至少一个should子句，没有must和filter，minimum_should_match默认为<span class=\"number\">1</span>，如果有must或filter默认为<span class=\"number\">0</span>；</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Example</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Integer</td>\n<td>3</td>\n<td>指定一个固定的值，与可选子句的数量无关；</td>\n</tr>\n<tr>\n<td>Negative   integer</td>\n<td>-2</td>\n<td>全部的可选子句的数量减去这个值必须被匹配.</td>\n</tr>\n<tr>\n<td>Percentage</td>\n<td>75%</td>\n<td>指定可选子句的总数的百分比必须被匹配,这个值的计算是向下取整的.</td>\n</tr>\n<tr>\n<td>Negative percentage</td>\n<td>-25%</td>\n<td>指定可选子句总数的百分比可以丢失. 计算同样是向下取整的. 然后从总数减去,以确定这个值</td>\n</tr>\n<tr>\n<td>Combination</td>\n<td>3&lt;90%</td>\n<td>一个正整数,跟一个&lt;,在跟一个任意的前面提到的判断条件. 表示如果可选子句的数量小于等于这个integer那么需要全部匹配,但是如果大于这个integer的话就会应用和&lt;后面的判断条件</td>\n</tr>\n<tr>\n<td>Multiple combinations</td>\n<td>2&lt;-25% 9&lt;-3</td>\n<td></td>\n</tr>\n</tbody></table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这个查询没有指定评分,所以返回的所有文档评分都为0</span><br><span class=\"line\">GET _search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;query&quot;: &#123;</span><br><span class=\"line\">    &quot;bool&quot;: &#123;</span><br><span class=\"line\">      &quot;filter&quot;: &#123;</span><br><span class=\"line\">        &quot;term&quot;: &#123;</span><br><span class=\"line\">          &quot;status&quot;: &quot;active&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这个查询因为有一个match_all query,所以会为每个返回的document分配一个1.0的评分</span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> _search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;bool&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;must&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&quot;filter&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;active&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">constant_score 与上面的查询的效果一样</span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> _search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;constant_score&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;filter&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;active&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Named-queries\"><a href=\"#Named-queries\" class=\"headerlink\" title=\"Named queries\"></a>Named queries</h4><figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">每一个<span class=\"keyword\">query</span>接受一个_name在顶级中定义.你可以命名queries对于跟踪哪一个<span class=\"keyword\">query</span>匹配返回的document.如果named queries被使用,响应的hit中会包含match_queries属性</span><br><span class=\"line\"></span><br><span class=\"line\">GET /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;bool&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;should&quot;</span>: [</span><br><span class=\"line\">        &#123; <span class=\"string\">&quot;match&quot;</span>: &#123; <span class=\"string\">&quot;name.first&quot;</span>: &#123; <span class=\"string\">&quot;query&quot;</span>: <span class=\"string\">&quot;shay&quot;</span>, <span class=\"string\">&quot;_name&quot;</span>: <span class=\"string\">&quot;first&quot;</span> &#125; &#125; &#125;,</span><br><span class=\"line\">        &#123; <span class=\"string\">&quot;match&quot;</span>: &#123; <span class=\"string\">&quot;name.last&quot;</span>: &#123; <span class=\"string\">&quot;query&quot;</span>: <span class=\"string\">&quot;banon&quot;</span>, <span class=\"string\">&quot;_name&quot;</span>: <span class=\"string\">&quot;last&quot;</span> &#125; &#125; &#125;</span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"string\">&quot;filter&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;terms&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;name.last&quot;</span>: [ <span class=\"string\">&quot;banon&quot;</span>, <span class=\"string\">&quot;kimchy&quot;</span> ],</span><br><span class=\"line\">          <span class=\"string\">&quot;_name&quot;</span>: <span class=\"string\">&quot;test&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Boosting\"><a href=\"#Boosting\" class=\"headerlink\" title=\"Boosting\"></a>Boosting</h3><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">返回与<span class=\"keyword\">positive</span>查询匹配的document,同时降低与查询匹配的相关性得分 <span class=\"keyword\">negative</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">可以使用boosting查询来降级某些文档,而不必将他们从搜索结果[排除.</span><br><span class=\"line\">GET /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;boosting&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;positive&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;text&quot;</span>: <span class=\"string\">&quot;apple&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&quot;negative&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;text&quot;</span>: <span class=\"string\">&quot;pie tart fruit crumble tree&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&quot;negative_boost&quot;</span>: <span class=\"number\">0.5</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">positive</span></span><br><span class=\"line\">\t要运行的查询.返回的所有文档都必须与此查询匹配</span><br><span class=\"line\"><span class=\"keyword\">negative</span></span><br><span class=\"line\">\t查询用于降低匹配文档的相关性得分.</span><br><span class=\"line\">\t如果返回的文档与<span class=\"keyword\">positive</span>查询和该查询匹配,则该boosting查询将按照如下计算文档的分</span><br><span class=\"line\">\t<span class=\"number\">1</span>,从<span class=\"keyword\">positive</span>查询中获取原始的相关性分数</span><br><span class=\"line\">\t<span class=\"number\">2</span>,将分数乘以negative_boost值</span><br><span class=\"line\">\t</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Query-and-Filter-context\"><a href=\"#Query-and-Filter-context\" class=\"headerlink\" title=\"Query and Filter context\"></a>Query and Filter context</h2><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Query关注点：此文档与此查询子句的匹配程度如何?</span><br><span class=\"line\">\t<span class=\"number\">1</span>）是否包含？</span><br><span class=\"line\">\t\t确定文档是否应该成为结果的一部分</span><br><span class=\"line\">\t<span class=\"number\">2</span>）相关度得分多少？</span><br><span class=\"line\">\t\t除了确定文档是否匹配外，查询子句还计算了表示文档与其他文档相匹配的_score</span><br><span class=\"line\">\t<span class=\"number\">3</span>）得分越高，相关度越高?</span><br><span class=\"line\">\t</span><br><span class=\"line\">Filter关注点：此文档和查询子句匹配么？</span><br><span class=\"line\">\t<span class=\"number\">1</span>)是否包含</span><br><span class=\"line\">\t<span class=\"number\">2</span>）不涉及评分</span><br><span class=\"line\">\t<span class=\"number\">3</span>）针对结构化数据</span><br><span class=\"line\">\t\t适用于完全精确匹配，范围检索</span><br><span class=\"line\">\t<span class=\"number\">4</span>)更快</span><br><span class=\"line\">filter查询性能好，可缓存。不许计算得分</span><br><span class=\"line\">query不可缓存；需要计算得分。</span><br><span class=\"line\"></span><br><span class=\"line\">Elasticsearch将创建一个文档匹配过滤器的位集bitset（如果文档匹配则为<span class=\"number\">1</span>，否则为<span class=\"number\">0</span>）。 随后用相同的过滤器执行查询将重用此信息。</span><br><span class=\"line\"></span><br><span class=\"line\">每当添加或更新新文档时，位集bitset也会更新。</span><br><span class=\"line\"></span><br><span class=\"line\">全文检索以及任何使用相关性评分的场景使用query检索。</span><br><span class=\"line\"></span><br><span class=\"line\">除此之外的其他使用filter过滤器过滤。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Compound-queries\"><a href=\"#Compound-queries\" class=\"headerlink\" title=\"Compound queries\"></a>Compound queries</h2><h3 id=\"bool-query\"><a href=\"#bool-query\" class=\"headerlink\" title=\"bool query\"></a>bool query</h3><p>多个叶或组合查询语句的默认语句，例如must、should、must_not、filter，must和should子句的分数组合在一起，匹配越多越好，而must_not和filter子句在filter context中执行；</p>\n<h3 id=\"boosting-query\"><a href=\"#boosting-query\" class=\"headerlink\" title=\"boosting query\"></a>boosting query</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">返回与正相关匹配的文档，但是减少负相关文档的分数；</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"constant-score-query\"><a href=\"#constant-score-query\" class=\"headerlink\" title=\"constant_score query\"></a>constant_score query</h3><figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一个<span class=\"keyword\">query</span>包装另外的<span class=\"keyword\">query</span>的查询，但是执行在filter context中。全部匹配的文档都使用相同的<span class=\"string\">&quot;constant&quot;</span>_score</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"dis-max-query\"><a href=\"#dis-max-query\" class=\"headerlink\" title=\"dis_max query\"></a>dis_max query</h3><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一个查询语句接受多个子查询，返回任意一个匹配任意一个查询语句的文档。当<span class=\"built_in\">bool</span> query合并所有匹配查询的分数时，dis_max查询使用最佳匹配的语句的分数；</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"function-score-query\"><a href=\"#function-score-query\" class=\"headerlink\" title=\"function_score query\"></a>function_score query</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用函数修改主查询返回的分数，以考虑诸如受欢迎程度，新进度，距离或使用脚本实现的自定义算法等；</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"各种查询类型的详细说明\"><a href=\"#各种查询类型的详细说明\" class=\"headerlink\" title=\"各种查询类型的详细说明\"></a>各种查询类型的详细说明</h2><h3 id=\"Boolean-query\"><a href=\"#Boolean-query\" class=\"headerlink\" title=\"Boolean query\"></a>Boolean query</h3><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">与文档匹配的查询，该文档与其他查询的<span class=\"built_in\">bool</span>ean组合匹配</span><br><span class=\"line\">使用一个或多个<span class=\"built_in\">bool</span>ean子句，每一个子句都有一个类型</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>occur</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>must</td>\n<td>查询子句必须出现在匹配的文档中，并且匹配的将有助于得分</td>\n</tr>\n<tr>\n<td>filter</td>\n<td>查询子句必须出现在匹配的文档中。但是并不像must 一样，不会进行评分。filter 的子句被执行在filter context中。意味着评分被忽略，并且查询会被考虑加入缓存；</td>\n</tr>\n<tr>\n<td>should</td>\n<td>查询子句应该出现在匹配的文档中</td>\n</tr>\n<tr>\n<td>must_not</td>\n<td>查询子句必须不能出现在匹配的文档中，执行在filter context中，意味着评分被忽略，并且被考虑加入缓存中。由于评分被忽略所以返回的所有文档的评分为0</td>\n</tr>\n</tbody></table>\n<h4 id=\"Using-minimum-should-match\"><a href=\"#Using-minimum-should-match\" class=\"headerlink\" title=\"Using minimum_should_match\"></a>Using minimum_should_match</h4><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用参数minimum_should_match 指定几个或百分数的should子句必须匹配。</span><br><span class=\"line\">如果一个<span class=\"built_in\">bool</span> qurey 包含至少一个should子句，没有must和filter，minimum_should_match默认为<span class=\"number\">1</span>，如果有must或filter默认为<span class=\"number\">0</span>；</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Example</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Integer</td>\n<td>3</td>\n<td>指定一个固定的值，与可选子句的数量无关；</td>\n</tr>\n<tr>\n<td>Negative   integer</td>\n<td>-2</td>\n<td>全部的可选子句的数量减去这个值必须被匹配.</td>\n</tr>\n<tr>\n<td>Percentage</td>\n<td>75%</td>\n<td>指定可选子句的总数的百分比必须被匹配,这个值的计算是向下取整的.</td>\n</tr>\n<tr>\n<td>Negative percentage</td>\n<td>-25%</td>\n<td>指定可选子句总数的百分比可以丢失. 计算同样是向下取整的. 然后从总数减去,以确定这个值</td>\n</tr>\n<tr>\n<td>Combination</td>\n<td>3&lt;90%</td>\n<td>一个正整数,跟一个&lt;,在跟一个任意的前面提到的判断条件. 表示如果可选子句的数量小于等于这个integer那么需要全部匹配,但是如果大于这个integer的话就会应用和&lt;后面的判断条件</td>\n</tr>\n<tr>\n<td>Multiple combinations</td>\n<td>2&lt;-25% 9&lt;-3</td>\n<td></td>\n</tr>\n</tbody></table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这个查询没有指定评分,所以返回的所有文档评分都为0</span><br><span class=\"line\">GET _search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;query&quot;: &#123;</span><br><span class=\"line\">    &quot;bool&quot;: &#123;</span><br><span class=\"line\">      &quot;filter&quot;: &#123;</span><br><span class=\"line\">        &quot;term&quot;: &#123;</span><br><span class=\"line\">          &quot;status&quot;: &quot;active&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这个查询因为有一个match_all query,所以会为每个返回的document分配一个1.0的评分</span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> _search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;bool&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;must&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&quot;filter&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;active&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">constant_score 与上面的查询的效果一样</span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> _search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;constant_score&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;filter&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;active&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Named-queries\"><a href=\"#Named-queries\" class=\"headerlink\" title=\"Named queries\"></a>Named queries</h4><figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">每一个<span class=\"keyword\">query</span>接受一个_name在顶级中定义.你可以命名queries对于跟踪哪一个<span class=\"keyword\">query</span>匹配返回的document.如果named queries被使用,响应的hit中会包含match_queries属性</span><br><span class=\"line\"></span><br><span class=\"line\">GET /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;bool&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;should&quot;</span>: [</span><br><span class=\"line\">        &#123; <span class=\"string\">&quot;match&quot;</span>: &#123; <span class=\"string\">&quot;name.first&quot;</span>: &#123; <span class=\"string\">&quot;query&quot;</span>: <span class=\"string\">&quot;shay&quot;</span>, <span class=\"string\">&quot;_name&quot;</span>: <span class=\"string\">&quot;first&quot;</span> &#125; &#125; &#125;,</span><br><span class=\"line\">        &#123; <span class=\"string\">&quot;match&quot;</span>: &#123; <span class=\"string\">&quot;name.last&quot;</span>: &#123; <span class=\"string\">&quot;query&quot;</span>: <span class=\"string\">&quot;banon&quot;</span>, <span class=\"string\">&quot;_name&quot;</span>: <span class=\"string\">&quot;last&quot;</span> &#125; &#125; &#125;</span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"string\">&quot;filter&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;terms&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;name.last&quot;</span>: [ <span class=\"string\">&quot;banon&quot;</span>, <span class=\"string\">&quot;kimchy&quot;</span> ],</span><br><span class=\"line\">          <span class=\"string\">&quot;_name&quot;</span>: <span class=\"string\">&quot;test&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Boosting\"><a href=\"#Boosting\" class=\"headerlink\" title=\"Boosting\"></a>Boosting</h3><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">返回与<span class=\"keyword\">positive</span>查询匹配的document,同时降低与查询匹配的相关性得分 <span class=\"keyword\">negative</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">可以使用boosting查询来降级某些文档,而不必将他们从搜索结果[排除.</span><br><span class=\"line\">GET /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;boosting&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;positive&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;text&quot;</span>: <span class=\"string\">&quot;apple&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&quot;negative&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;text&quot;</span>: <span class=\"string\">&quot;pie tart fruit crumble tree&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&quot;negative_boost&quot;</span>: <span class=\"number\">0.5</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">positive</span></span><br><span class=\"line\">\t要运行的查询.返回的所有文档都必须与此查询匹配</span><br><span class=\"line\"><span class=\"keyword\">negative</span></span><br><span class=\"line\">\t查询用于降低匹配文档的相关性得分.</span><br><span class=\"line\">\t如果返回的文档与<span class=\"keyword\">positive</span>查询和该查询匹配,则该boosting查询将按照如下计算文档的分</span><br><span class=\"line\">\t<span class=\"number\">1</span>,从<span class=\"keyword\">positive</span>查询中获取原始的相关性分数</span><br><span class=\"line\">\t<span class=\"number\">2</span>,将分数乘以negative_boost值</span><br><span class=\"line\">\t</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Search API","tabs":"es,searchApi","renderNumberedHeading":true,"grammar_cjkRuby":true,"_content":"\n# Search API\n\n## Request Body Search\n\n### Query\n\n```\nGET /_search\n{\n    \"query\" : {\n        \"term\" : { \"user\" : \"kimchy\" }\n    }\n}\n```\n\n### From/Size\n\n```\nGET /_search\n{\n\t\"from\":0,\"size\":10,\n\t\"query\":{\n\t\t\"term\":{\"user\":\"elrei\"}\n\t}\n}\nNote: form + size 不能大于index.max_result_window 默认10000;\n对于深度索引查看Scroll or Search After\n```\n\n### Sort\n\n```\n\n```\n\n","source":"_posts/es/Search API.md","raw":"---\ntitle: Search API\ntabs: es,searchApi\nrenderNumberedHeading: true\ngrammar_cjkRuby: true\n---\n\n# Search API\n\n## Request Body Search\n\n### Query\n\n```\nGET /_search\n{\n    \"query\" : {\n        \"term\" : { \"user\" : \"kimchy\" }\n    }\n}\n```\n\n### From/Size\n\n```\nGET /_search\n{\n\t\"from\":0,\"size\":10,\n\t\"query\":{\n\t\t\"term\":{\"user\":\"elrei\"}\n\t}\n}\nNote: form + size 不能大于index.max_result_window 默认10000;\n对于深度索引查看Scroll or Search After\n```\n\n### Sort\n\n```\n\n```\n\n","slug":"es/Search API","published":1,"date":"2020-10-26T07:09:08.762Z","updated":"2020-10-26T07:07:42.697Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgq7a8tv0001wog04t3vby8d","content":"<h1 id=\"Search-API\"><a href=\"#Search-API\" class=\"headerlink\" title=\"Search API\"></a>Search API</h1><h2 id=\"Request-Body-Search\"><a href=\"#Request-Body-Search\" class=\"headerlink\" title=\"Request Body Search\"></a>Request Body Search</h2><h3 id=\"Query\"><a href=\"#Query\" class=\"headerlink\" title=\"Query\"></a>Query</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;query&quot;</span> : &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span> : &#123; <span class=\"string\">&quot;user&quot;</span> : <span class=\"string\">&quot;kimchy&quot;</span> &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"From-Size\"><a href=\"#From-Size\" class=\"headerlink\" title=\"From/Size\"></a>From/Size</h3><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t&quot;from&quot;:<span class=\"number\">0</span>,&quot;size&quot;:<span class=\"number\">10</span>,</span><br><span class=\"line\">\t&quot;query&quot;:&#123;</span><br><span class=\"line\">\t\t&quot;term&quot;:&#123;&quot;user&quot;:&quot;elrei&quot;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Note: form + size 不能大于<span class=\"keyword\">index</span>.max_result_window 默认<span class=\"number\">10000</span>;</span><br><span class=\"line\">对于深度索引查看Scroll <span class=\"keyword\">or</span> <span class=\"keyword\">Search</span> <span class=\"keyword\">After</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Sort\"><a href=\"#Sort\" class=\"headerlink\" title=\"Sort\"></a>Sort</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Search-API\"><a href=\"#Search-API\" class=\"headerlink\" title=\"Search API\"></a>Search API</h1><h2 id=\"Request-Body-Search\"><a href=\"#Request-Body-Search\" class=\"headerlink\" title=\"Request Body Search\"></a>Request Body Search</h2><h3 id=\"Query\"><a href=\"#Query\" class=\"headerlink\" title=\"Query\"></a>Query</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;query&quot;</span> : &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span> : &#123; <span class=\"string\">&quot;user&quot;</span> : <span class=\"string\">&quot;kimchy&quot;</span> &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"From-Size\"><a href=\"#From-Size\" class=\"headerlink\" title=\"From/Size\"></a>From/Size</h3><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t&quot;from&quot;:<span class=\"number\">0</span>,&quot;size&quot;:<span class=\"number\">10</span>,</span><br><span class=\"line\">\t&quot;query&quot;:&#123;</span><br><span class=\"line\">\t\t&quot;term&quot;:&#123;&quot;user&quot;:&quot;elrei&quot;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Note: form + size 不能大于<span class=\"keyword\">index</span>.max_result_window 默认<span class=\"number\">10000</span>;</span><br><span class=\"line\">对于深度索引查看Scroll <span class=\"keyword\">or</span> <span class=\"keyword\">Search</span> <span class=\"keyword\">After</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Sort\"><a href=\"#Sort\" class=\"headerlink\" title=\"Sort\"></a>Sort</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"title":"Search APIS","tabs":"es,searchApis","renderNumberedHeading":true,"grammar_cjkRuby":true,"_content":"\n# Search APIS\n\n## Request Body Search\n\n### Query\n\n### From/Size\n\n### Sort\n\n```\n可以指定一个或多个字段排序。每一个字段都可以被逆序排序。被定义在字段级别上。特殊的字段_score指定被score排序，_doc指定按照索引顺序排序。\n\n_doc除了是一个有效的排序方式之外，没有任何真实的使用场景，如果你不关心文档的返回顺序，你应该用_doc，这个在scrolling中特别有用。\n\nGET /my_index/_search\n{\n\t\"sort\": [\n\t\t{\"post_date\" : {\"order\":\"asc\"}},\n\t\t\"user\"\n\t\t{\"name\",\"desc\"},\n\t\t{\"age\":\"desc\"},\n\t\t\"_score\"\n\t],\n\t\"query\":{\n\t\t\"term\" : {\"user\":\"kimchy\"}\n\t}\n}\n\nSort mode option\n指定使用哪一种模式排序，可选如下几项\nmin,max,sum,avg,median,\n\nPOST /_search\n{\n   \"query\" : {\n      \"term\" : { \"product\" : \"chocolate\" }\n   },\n   \"sort\" : [\n      {\"price\" : {\"order\" : \"desc\", \"mode\" : \"sum\"}}\n   ]\n}\n\n####\nSorting within nested objects\nes也支持在一个或多个对象里面对字段进行排序。支持如下选项进行排序：\npath\n\t定义在哪一个对象排序。实际排序的字段必须是嵌套对象的直接字段。当使用嵌套字段排序时，这个字段是必填的。\nfilter\n\nmax_children\n\nnested\n```\n\n\n\n### Source filtering\n\n```\n用来控制怎样处理_source字段返回的结果\n1.禁用_source获取 设置为false\nGET /_search\n{\n\t\"_source\" : false,\n\t\"query\":{\n        \"term\": {\n\t\t\t\"user\":\"kimchy\"\n        }\n\t}\n}\n\n2.使用通配符过滤\nGET /_search\n{\n\t\"_source\": \"obj.\",\n\t\"query\": {\n\t\t\"term\": {\"user\":\"kimchy\"}\n\t}\n}\nOR\nGET /_search\n{\n\t\"_source\":[\"obj1.*\"，\"obj2.*\"],\n\t\"query\": {\n\t\t\"term\": {\"user\":\"kimchy\"}\n\t}\t\n}\n3.指定 includes 和 excludes\nGET /_search\n{\n\t\"_source\" :{\n\t\t\"includes\": [\"obj1.*\",\"obj2.*\"],\n\t\t\"encludes\": [*.description]\n\t},\n\t\"query\":{\n\t\t\"term\":{\n\t\t\"user\":\"kimchy\"\n\t\t}\n\t}\n}\n```\n\n\n\n### Search Type\n\n#### Query Then Fetch\n\n```\nParameter value: query_then_fetch\n\t这个请求处理由两个阶段完成;\n\t第一个阶段,查询将请求所有相关的shards,每一个shard执行search并产生一个排序的本地shard的结果集。每一个shard返回足够的信息到coordinating node，以使得它能够合并和re-sort这shard level的结果集到一个全局的，最大长度的结果集。\n\t\n\t第二阶段，coordination node 只从相关的节点请求document的内容。\n```\n\n#### Dfs，Query Then Fetch\n\n```\n与Query Then Fetch不同之处在于，在分散阶段就会计算分布项的词频为了更精确的评分。\n```\n\n\n\n\n\n","source":"_posts/es/Search APIS.md","raw":"---\ntitle: Search APIS\ntabs: es,searchApis\nrenderNumberedHeading: true\ngrammar_cjkRuby: true\n---\n\n# Search APIS\n\n## Request Body Search\n\n### Query\n\n### From/Size\n\n### Sort\n\n```\n可以指定一个或多个字段排序。每一个字段都可以被逆序排序。被定义在字段级别上。特殊的字段_score指定被score排序，_doc指定按照索引顺序排序。\n\n_doc除了是一个有效的排序方式之外，没有任何真实的使用场景，如果你不关心文档的返回顺序，你应该用_doc，这个在scrolling中特别有用。\n\nGET /my_index/_search\n{\n\t\"sort\": [\n\t\t{\"post_date\" : {\"order\":\"asc\"}},\n\t\t\"user\"\n\t\t{\"name\",\"desc\"},\n\t\t{\"age\":\"desc\"},\n\t\t\"_score\"\n\t],\n\t\"query\":{\n\t\t\"term\" : {\"user\":\"kimchy\"}\n\t}\n}\n\nSort mode option\n指定使用哪一种模式排序，可选如下几项\nmin,max,sum,avg,median,\n\nPOST /_search\n{\n   \"query\" : {\n      \"term\" : { \"product\" : \"chocolate\" }\n   },\n   \"sort\" : [\n      {\"price\" : {\"order\" : \"desc\", \"mode\" : \"sum\"}}\n   ]\n}\n\n####\nSorting within nested objects\nes也支持在一个或多个对象里面对字段进行排序。支持如下选项进行排序：\npath\n\t定义在哪一个对象排序。实际排序的字段必须是嵌套对象的直接字段。当使用嵌套字段排序时，这个字段是必填的。\nfilter\n\nmax_children\n\nnested\n```\n\n\n\n### Source filtering\n\n```\n用来控制怎样处理_source字段返回的结果\n1.禁用_source获取 设置为false\nGET /_search\n{\n\t\"_source\" : false,\n\t\"query\":{\n        \"term\": {\n\t\t\t\"user\":\"kimchy\"\n        }\n\t}\n}\n\n2.使用通配符过滤\nGET /_search\n{\n\t\"_source\": \"obj.\",\n\t\"query\": {\n\t\t\"term\": {\"user\":\"kimchy\"}\n\t}\n}\nOR\nGET /_search\n{\n\t\"_source\":[\"obj1.*\"，\"obj2.*\"],\n\t\"query\": {\n\t\t\"term\": {\"user\":\"kimchy\"}\n\t}\t\n}\n3.指定 includes 和 excludes\nGET /_search\n{\n\t\"_source\" :{\n\t\t\"includes\": [\"obj1.*\",\"obj2.*\"],\n\t\t\"encludes\": [*.description]\n\t},\n\t\"query\":{\n\t\t\"term\":{\n\t\t\"user\":\"kimchy\"\n\t\t}\n\t}\n}\n```\n\n\n\n### Search Type\n\n#### Query Then Fetch\n\n```\nParameter value: query_then_fetch\n\t这个请求处理由两个阶段完成;\n\t第一个阶段,查询将请求所有相关的shards,每一个shard执行search并产生一个排序的本地shard的结果集。每一个shard返回足够的信息到coordinating node，以使得它能够合并和re-sort这shard level的结果集到一个全局的，最大长度的结果集。\n\t\n\t第二阶段，coordination node 只从相关的节点请求document的内容。\n```\n\n#### Dfs，Query Then Fetch\n\n```\n与Query Then Fetch不同之处在于，在分散阶段就会计算分布项的词频为了更精确的评分。\n```\n\n\n\n\n\n","slug":"es/Search APIS","published":1,"date":"2020-10-26T07:09:08.765Z","updated":"2020-10-26T07:08:15.375Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgq7a8u10003wog0ekxegx15","content":"<h1 id=\"Search-APIS\"><a href=\"#Search-APIS\" class=\"headerlink\" title=\"Search APIS\"></a>Search APIS</h1><h2 id=\"Request-Body-Search\"><a href=\"#Request-Body-Search\" class=\"headerlink\" title=\"Request Body Search\"></a>Request Body Search</h2><h3 id=\"Query\"><a href=\"#Query\" class=\"headerlink\" title=\"Query\"></a>Query</h3><h3 id=\"From-Size\"><a href=\"#From-Size\" class=\"headerlink\" title=\"From/Size\"></a>From/Size</h3><h3 id=\"Sort\"><a href=\"#Sort\" class=\"headerlink\" title=\"Sort\"></a>Sort</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">可以指定一个或多个字段排序。每一个字段都可以被逆序排序。被定义在字段级别上。特殊的字段_score指定被score排序，_doc指定按照索引顺序排序。</span><br><span class=\"line\"></span><br><span class=\"line\">_doc除了是一个有效的排序方式之外，没有任何真实的使用场景，如果你不关心文档的返回顺序，你应该用_doc，这个在scrolling中特别有用。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /my_index/_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;sort&quot;</span>: [</span><br><span class=\"line\">\t\t&#123;<span class=\"string\">&quot;post_date&quot;</span> : &#123;<span class=\"string\">&quot;order&quot;</span>:<span class=\"string\">&quot;asc&quot;</span>&#125;&#125;,</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;user&quot;</span></span><br><span class=\"line\">\t\t&#123;<span class=\"string\">&quot;name&quot;</span>,<span class=\"string\">&quot;desc&quot;</span>&#125;,</span><br><span class=\"line\">\t\t&#123;<span class=\"string\">&quot;age&quot;</span>:<span class=\"string\">&quot;desc&quot;</span>&#125;,</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;_score&quot;</span></span><br><span class=\"line\">\t],</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>:&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;term&quot;</span> : &#123;<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span>&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Sort mode option</span><br><span class=\"line\">指定使用哪一种模式排序，可选如下几项</span><br><span class=\"line\">min,max,sum,avg,median,</span><br><span class=\"line\"></span><br><span class=\"line\">POST /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"string\">&quot;query&quot;</span> : &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;term&quot;</span> : &#123; <span class=\"string\">&quot;product&quot;</span> : <span class=\"string\">&quot;chocolate&quot;</span> &#125;</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">   <span class=\"string\">&quot;sort&quot;</span> : [</span><br><span class=\"line\">      &#123;<span class=\"string\">&quot;price&quot;</span> : &#123;<span class=\"string\">&quot;order&quot;</span> : <span class=\"string\">&quot;desc&quot;</span>, <span class=\"string\">&quot;mode&quot;</span> : <span class=\"string\">&quot;sum&quot;</span>&#125;&#125;</span><br><span class=\"line\">   ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">####</span></span><br><span class=\"line\">Sorting within nested objects</span><br><span class=\"line\">es也支持在一个或多个对象里面对字段进行排序。支持如下选项进行排序：</span><br><span class=\"line\">path</span><br><span class=\"line\">\t定义在哪一个对象排序。实际排序的字段必须是嵌套对象的直接字段。当使用嵌套字段排序时，这个字段是必填的。</span><br><span class=\"line\">filter</span><br><span class=\"line\"></span><br><span class=\"line\">max_children</span><br><span class=\"line\"></span><br><span class=\"line\">nested</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"Source-filtering\"><a href=\"#Source-filtering\" class=\"headerlink\" title=\"Source filtering\"></a>Source filtering</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用来控制怎样处理_source字段返回的结果</span><br><span class=\"line\">1.禁用_source获取 设置为<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;_source&quot;</span> : <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>:&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">2.使用通配符过滤</span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;_source&quot;</span>: <span class=\"string\">&quot;obj.&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;term&quot;</span>: &#123;<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span>&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">OR</span></span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;_source&quot;</span>:[<span class=\"string\">&quot;obj1.*&quot;</span>，<span class=\"string\">&quot;obj2.*&quot;</span>],</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;term&quot;</span>: &#123;<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span>&#125;</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">3.指定 includes 和 excludes</span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;_source&quot;</span> :&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;includes&quot;</span>: [<span class=\"string\">&quot;obj1.*&quot;</span>,<span class=\"string\">&quot;obj2.*&quot;</span>],</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;encludes&quot;</span>: [*.description]</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>:&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;term&quot;</span>:&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"Search-Type\"><a href=\"#Search-Type\" class=\"headerlink\" title=\"Search Type\"></a>Search Type</h3><h4 id=\"Query-Then-Fetch\"><a href=\"#Query-Then-Fetch\" class=\"headerlink\" title=\"Query Then Fetch\"></a>Query Then Fetch</h4><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Parameter value: query_then_fetch</span><br><span class=\"line\">\t这个请求处理由两个阶段完成;</span><br><span class=\"line\">\t第一个阶段,查询将请求所有相关的shards,每一个shard执行search并产生一个排序的本地shard的结果集。每一个shard返回足够的信息到coordinating <span class=\"keyword\">node</span><span class=\"title\">，以使得它能够合并和re-sort</span>这shard level的结果集到一个全局的，最大长度的结果集。</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t第二阶段，coordination <span class=\"keyword\">node</span> <span class=\"title\">只从相关的节点请求document</span>的内容。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Dfs，Query-Then-Fetch\"><a href=\"#Dfs，Query-Then-Fetch\" class=\"headerlink\" title=\"Dfs，Query Then Fetch\"></a>Dfs，Query Then Fetch</h4><figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">与<span class=\"keyword\">Query</span> Then Fetch不同之处在于，在分散阶段就会计算分布项的词频为了更精确的评分。</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Search-APIS\"><a href=\"#Search-APIS\" class=\"headerlink\" title=\"Search APIS\"></a>Search APIS</h1><h2 id=\"Request-Body-Search\"><a href=\"#Request-Body-Search\" class=\"headerlink\" title=\"Request Body Search\"></a>Request Body Search</h2><h3 id=\"Query\"><a href=\"#Query\" class=\"headerlink\" title=\"Query\"></a>Query</h3><h3 id=\"From-Size\"><a href=\"#From-Size\" class=\"headerlink\" title=\"From/Size\"></a>From/Size</h3><h3 id=\"Sort\"><a href=\"#Sort\" class=\"headerlink\" title=\"Sort\"></a>Sort</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">可以指定一个或多个字段排序。每一个字段都可以被逆序排序。被定义在字段级别上。特殊的字段_score指定被score排序，_doc指定按照索引顺序排序。</span><br><span class=\"line\"></span><br><span class=\"line\">_doc除了是一个有效的排序方式之外，没有任何真实的使用场景，如果你不关心文档的返回顺序，你应该用_doc，这个在scrolling中特别有用。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /my_index/_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;sort&quot;</span>: [</span><br><span class=\"line\">\t\t&#123;<span class=\"string\">&quot;post_date&quot;</span> : &#123;<span class=\"string\">&quot;order&quot;</span>:<span class=\"string\">&quot;asc&quot;</span>&#125;&#125;,</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;user&quot;</span></span><br><span class=\"line\">\t\t&#123;<span class=\"string\">&quot;name&quot;</span>,<span class=\"string\">&quot;desc&quot;</span>&#125;,</span><br><span class=\"line\">\t\t&#123;<span class=\"string\">&quot;age&quot;</span>:<span class=\"string\">&quot;desc&quot;</span>&#125;,</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;_score&quot;</span></span><br><span class=\"line\">\t],</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>:&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;term&quot;</span> : &#123;<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span>&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Sort mode option</span><br><span class=\"line\">指定使用哪一种模式排序，可选如下几项</span><br><span class=\"line\">min,max,sum,avg,median,</span><br><span class=\"line\"></span><br><span class=\"line\">POST /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"string\">&quot;query&quot;</span> : &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;term&quot;</span> : &#123; <span class=\"string\">&quot;product&quot;</span> : <span class=\"string\">&quot;chocolate&quot;</span> &#125;</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">   <span class=\"string\">&quot;sort&quot;</span> : [</span><br><span class=\"line\">      &#123;<span class=\"string\">&quot;price&quot;</span> : &#123;<span class=\"string\">&quot;order&quot;</span> : <span class=\"string\">&quot;desc&quot;</span>, <span class=\"string\">&quot;mode&quot;</span> : <span class=\"string\">&quot;sum&quot;</span>&#125;&#125;</span><br><span class=\"line\">   ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">####</span></span><br><span class=\"line\">Sorting within nested objects</span><br><span class=\"line\">es也支持在一个或多个对象里面对字段进行排序。支持如下选项进行排序：</span><br><span class=\"line\">path</span><br><span class=\"line\">\t定义在哪一个对象排序。实际排序的字段必须是嵌套对象的直接字段。当使用嵌套字段排序时，这个字段是必填的。</span><br><span class=\"line\">filter</span><br><span class=\"line\"></span><br><span class=\"line\">max_children</span><br><span class=\"line\"></span><br><span class=\"line\">nested</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"Source-filtering\"><a href=\"#Source-filtering\" class=\"headerlink\" title=\"Source filtering\"></a>Source filtering</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用来控制怎样处理_source字段返回的结果</span><br><span class=\"line\">1.禁用_source获取 设置为<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;_source&quot;</span> : <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>:&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">2.使用通配符过滤</span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;_source&quot;</span>: <span class=\"string\">&quot;obj.&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;term&quot;</span>: &#123;<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span>&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">OR</span></span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;_source&quot;</span>:[<span class=\"string\">&quot;obj1.*&quot;</span>，<span class=\"string\">&quot;obj2.*&quot;</span>],</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;term&quot;</span>: &#123;<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span>&#125;</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">3.指定 includes 和 excludes</span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;_source&quot;</span> :&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;includes&quot;</span>: [<span class=\"string\">&quot;obj1.*&quot;</span>,<span class=\"string\">&quot;obj2.*&quot;</span>],</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;encludes&quot;</span>: [*.description]</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>:&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;term&quot;</span>:&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"Search-Type\"><a href=\"#Search-Type\" class=\"headerlink\" title=\"Search Type\"></a>Search Type</h3><h4 id=\"Query-Then-Fetch\"><a href=\"#Query-Then-Fetch\" class=\"headerlink\" title=\"Query Then Fetch\"></a>Query Then Fetch</h4><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Parameter value: query_then_fetch</span><br><span class=\"line\">\t这个请求处理由两个阶段完成;</span><br><span class=\"line\">\t第一个阶段,查询将请求所有相关的shards,每一个shard执行search并产生一个排序的本地shard的结果集。每一个shard返回足够的信息到coordinating <span class=\"keyword\">node</span><span class=\"title\">，以使得它能够合并和re-sort</span>这shard level的结果集到一个全局的，最大长度的结果集。</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t第二阶段，coordination <span class=\"keyword\">node</span> <span class=\"title\">只从相关的节点请求document</span>的内容。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Dfs，Query-Then-Fetch\"><a href=\"#Dfs，Query-Then-Fetch\" class=\"headerlink\" title=\"Dfs，Query Then Fetch\"></a>Dfs，Query Then Fetch</h4><figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">与<span class=\"keyword\">Query</span> Then Fetch不同之处在于，在分散阶段就会计算分布项的词频为了更精确的评分。</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n"},{"title":"ES JavaAPI","tabs":"es,javaAPI","renderNumberedHeading":true,"grammar_cjkRuby":true,"_content":"\n","source":"_posts/es/JavaAPI.md","raw":"---\ntitle: ES JavaAPI\ntabs: es,javaAPI\nrenderNumberedHeading: true\ngrammar_cjkRuby: true\n---\n\n","slug":"es/JavaAPI","published":1,"date":"2020-10-26T07:09:08.754Z","updated":"2020-10-26T07:08:00.583Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgq7a8u20004wog01l93evcj","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"ES JavaAPI","tabs":"es,javaAPI","renderNumberedHeading":true,"grammar_cjkRuby":true,"_content":"\n","source":"_posts/JavaAPI.md","raw":"---\ntitle: ES JavaAPI\ntabs: es,javaAPI\nrenderNumberedHeading: true\ngrammar_cjkRuby: true\n---\n\n","slug":"JavaAPI","published":1,"date":"2020-10-26T07:14:43.789Z","updated":"2020-10-26T07:08:00.583Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgq7hw5a0000cwg0384x5ryi","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Search API","tabs":"es,searchApi","renderNumberedHeading":true,"grammar_cjkRuby":true,"_content":"\n# Search API\n\n## Request Body Search\n\n### Query\n\n```\nGET /_search\n{\n    \"query\" : {\n        \"term\" : { \"user\" : \"kimchy\" }\n    }\n}\n```\n\n### From/Size\n\n```\nGET /_search\n{\n\t\"from\":0,\"size\":10,\n\t\"query\":{\n\t\t\"term\":{\"user\":\"elrei\"}\n\t}\n}\nNote: form + size 不能大于index.max_result_window 默认10000;\n对于深度索引查看Scroll or Search After\n```\n\n### Sort\n\n```\n\n```\n\n","source":"_posts/Search API.md","raw":"---\ntitle: Search API\ntabs: es,searchApi\nrenderNumberedHeading: true\ngrammar_cjkRuby: true\n---\n\n# Search API\n\n## Request Body Search\n\n### Query\n\n```\nGET /_search\n{\n    \"query\" : {\n        \"term\" : { \"user\" : \"kimchy\" }\n    }\n}\n```\n\n### From/Size\n\n```\nGET /_search\n{\n\t\"from\":0,\"size\":10,\n\t\"query\":{\n\t\t\"term\":{\"user\":\"elrei\"}\n\t}\n}\nNote: form + size 不能大于index.max_result_window 默认10000;\n对于深度索引查看Scroll or Search After\n```\n\n### Sort\n\n```\n\n```\n\n","slug":"Search API","published":1,"date":"2020-10-26T07:14:43.792Z","updated":"2020-10-26T07:07:42.697Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgq7hw5f0001cwg04x8shmrm","content":"<h1 id=\"Search-API\"><a href=\"#Search-API\" class=\"headerlink\" title=\"Search API\"></a>Search API</h1><h2 id=\"Request-Body-Search\"><a href=\"#Request-Body-Search\" class=\"headerlink\" title=\"Request Body Search\"></a>Request Body Search</h2><h3 id=\"Query\"><a href=\"#Query\" class=\"headerlink\" title=\"Query\"></a>Query</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;query&quot;</span> : &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span> : &#123; <span class=\"string\">&quot;user&quot;</span> : <span class=\"string\">&quot;kimchy&quot;</span> &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"From-Size\"><a href=\"#From-Size\" class=\"headerlink\" title=\"From/Size\"></a>From/Size</h3><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t&quot;from&quot;:<span class=\"number\">0</span>,&quot;size&quot;:<span class=\"number\">10</span>,</span><br><span class=\"line\">\t&quot;query&quot;:&#123;</span><br><span class=\"line\">\t\t&quot;term&quot;:&#123;&quot;user&quot;:&quot;elrei&quot;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Note: form + size 不能大于<span class=\"keyword\">index</span>.max_result_window 默认<span class=\"number\">10000</span>;</span><br><span class=\"line\">对于深度索引查看Scroll <span class=\"keyword\">or</span> <span class=\"keyword\">Search</span> <span class=\"keyword\">After</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Sort\"><a href=\"#Sort\" class=\"headerlink\" title=\"Sort\"></a>Sort</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Search-API\"><a href=\"#Search-API\" class=\"headerlink\" title=\"Search API\"></a>Search API</h1><h2 id=\"Request-Body-Search\"><a href=\"#Request-Body-Search\" class=\"headerlink\" title=\"Request Body Search\"></a>Request Body Search</h2><h3 id=\"Query\"><a href=\"#Query\" class=\"headerlink\" title=\"Query\"></a>Query</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;query&quot;</span> : &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span> : &#123; <span class=\"string\">&quot;user&quot;</span> : <span class=\"string\">&quot;kimchy&quot;</span> &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"From-Size\"><a href=\"#From-Size\" class=\"headerlink\" title=\"From/Size\"></a>From/Size</h3><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t&quot;from&quot;:<span class=\"number\">0</span>,&quot;size&quot;:<span class=\"number\">10</span>,</span><br><span class=\"line\">\t&quot;query&quot;:&#123;</span><br><span class=\"line\">\t\t&quot;term&quot;:&#123;&quot;user&quot;:&quot;elrei&quot;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Note: form + size 不能大于<span class=\"keyword\">index</span>.max_result_window 默认<span class=\"number\">10000</span>;</span><br><span class=\"line\">对于深度索引查看Scroll <span class=\"keyword\">or</span> <span class=\"keyword\">Search</span> <span class=\"keyword\">After</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Sort\"><a href=\"#Sort\" class=\"headerlink\" title=\"Sort\"></a>Sort</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"title":"Search APIS","tabs":"es,searchApis","renderNumberedHeading":true,"grammar_cjkRuby":true,"_content":"\n# Search APIS\n\n## Request Body Search\n\n### Query\n\n### From/Size\n\n### Sort\n\n```\n可以指定一个或多个字段排序。每一个字段都可以被逆序排序。被定义在字段级别上。特殊的字段_score指定被score排序，_doc指定按照索引顺序排序。\n\n_doc除了是一个有效的排序方式之外，没有任何真实的使用场景，如果你不关心文档的返回顺序，你应该用_doc，这个在scrolling中特别有用。\n\nGET /my_index/_search\n{\n\t\"sort\": [\n\t\t{\"post_date\" : {\"order\":\"asc\"}},\n\t\t\"user\"\n\t\t{\"name\",\"desc\"},\n\t\t{\"age\":\"desc\"},\n\t\t\"_score\"\n\t],\n\t\"query\":{\n\t\t\"term\" : {\"user\":\"kimchy\"}\n\t}\n}\n\nSort mode option\n指定使用哪一种模式排序，可选如下几项\nmin,max,sum,avg,median,\n\nPOST /_search\n{\n   \"query\" : {\n      \"term\" : { \"product\" : \"chocolate\" }\n   },\n   \"sort\" : [\n      {\"price\" : {\"order\" : \"desc\", \"mode\" : \"sum\"}}\n   ]\n}\n\n####\nSorting within nested objects\nes也支持在一个或多个对象里面对字段进行排序。支持如下选项进行排序：\npath\n\t定义在哪一个对象排序。实际排序的字段必须是嵌套对象的直接字段。当使用嵌套字段排序时，这个字段是必填的。\nfilter\n\nmax_children\n\nnested\n```\n\n\n\n### Source filtering\n\n```\n用来控制怎样处理_source字段返回的结果\n1.禁用_source获取 设置为false\nGET /_search\n{\n\t\"_source\" : false,\n\t\"query\":{\n        \"term\": {\n\t\t\t\"user\":\"kimchy\"\n        }\n\t}\n}\n\n2.使用通配符过滤\nGET /_search\n{\n\t\"_source\": \"obj.\",\n\t\"query\": {\n\t\t\"term\": {\"user\":\"kimchy\"}\n\t}\n}\nOR\nGET /_search\n{\n\t\"_source\":[\"obj1.*\"，\"obj2.*\"],\n\t\"query\": {\n\t\t\"term\": {\"user\":\"kimchy\"}\n\t}\t\n}\n3.指定 includes 和 excludes\nGET /_search\n{\n\t\"_source\" :{\n\t\t\"includes\": [\"obj1.*\",\"obj2.*\"],\n\t\t\"encludes\": [*.description]\n\t},\n\t\"query\":{\n\t\t\"term\":{\n\t\t\"user\":\"kimchy\"\n\t\t}\n\t}\n}\n```\n\n\n\n### Search Type\n\n#### Query Then Fetch\n\n```\nParameter value: query_then_fetch\n\t这个请求处理由两个阶段完成;\n\t第一个阶段,查询将请求所有相关的shards,每一个shard执行search并产生一个排序的本地shard的结果集。每一个shard返回足够的信息到coordinating node，以使得它能够合并和re-sort这shard level的结果集到一个全局的，最大长度的结果集。\n\t\n\t第二阶段，coordination node 只从相关的节点请求document的内容。\n```\n\n#### Dfs，Query Then Fetch\n\n```\n与Query Then Fetch不同之处在于，在分散阶段就会计算分布项的词频为了更精确的评分。\n```\n\n\n\n\n\n","source":"_posts/Search APIS.md","raw":"---\ntitle: Search APIS\ntabs: es,searchApis\nrenderNumberedHeading: true\ngrammar_cjkRuby: true\n---\n\n# Search APIS\n\n## Request Body Search\n\n### Query\n\n### From/Size\n\n### Sort\n\n```\n可以指定一个或多个字段排序。每一个字段都可以被逆序排序。被定义在字段级别上。特殊的字段_score指定被score排序，_doc指定按照索引顺序排序。\n\n_doc除了是一个有效的排序方式之外，没有任何真实的使用场景，如果你不关心文档的返回顺序，你应该用_doc，这个在scrolling中特别有用。\n\nGET /my_index/_search\n{\n\t\"sort\": [\n\t\t{\"post_date\" : {\"order\":\"asc\"}},\n\t\t\"user\"\n\t\t{\"name\",\"desc\"},\n\t\t{\"age\":\"desc\"},\n\t\t\"_score\"\n\t],\n\t\"query\":{\n\t\t\"term\" : {\"user\":\"kimchy\"}\n\t}\n}\n\nSort mode option\n指定使用哪一种模式排序，可选如下几项\nmin,max,sum,avg,median,\n\nPOST /_search\n{\n   \"query\" : {\n      \"term\" : { \"product\" : \"chocolate\" }\n   },\n   \"sort\" : [\n      {\"price\" : {\"order\" : \"desc\", \"mode\" : \"sum\"}}\n   ]\n}\n\n####\nSorting within nested objects\nes也支持在一个或多个对象里面对字段进行排序。支持如下选项进行排序：\npath\n\t定义在哪一个对象排序。实际排序的字段必须是嵌套对象的直接字段。当使用嵌套字段排序时，这个字段是必填的。\nfilter\n\nmax_children\n\nnested\n```\n\n\n\n### Source filtering\n\n```\n用来控制怎样处理_source字段返回的结果\n1.禁用_source获取 设置为false\nGET /_search\n{\n\t\"_source\" : false,\n\t\"query\":{\n        \"term\": {\n\t\t\t\"user\":\"kimchy\"\n        }\n\t}\n}\n\n2.使用通配符过滤\nGET /_search\n{\n\t\"_source\": \"obj.\",\n\t\"query\": {\n\t\t\"term\": {\"user\":\"kimchy\"}\n\t}\n}\nOR\nGET /_search\n{\n\t\"_source\":[\"obj1.*\"，\"obj2.*\"],\n\t\"query\": {\n\t\t\"term\": {\"user\":\"kimchy\"}\n\t}\t\n}\n3.指定 includes 和 excludes\nGET /_search\n{\n\t\"_source\" :{\n\t\t\"includes\": [\"obj1.*\",\"obj2.*\"],\n\t\t\"encludes\": [*.description]\n\t},\n\t\"query\":{\n\t\t\"term\":{\n\t\t\"user\":\"kimchy\"\n\t\t}\n\t}\n}\n```\n\n\n\n### Search Type\n\n#### Query Then Fetch\n\n```\nParameter value: query_then_fetch\n\t这个请求处理由两个阶段完成;\n\t第一个阶段,查询将请求所有相关的shards,每一个shard执行search并产生一个排序的本地shard的结果集。每一个shard返回足够的信息到coordinating node，以使得它能够合并和re-sort这shard level的结果集到一个全局的，最大长度的结果集。\n\t\n\t第二阶段，coordination node 只从相关的节点请求document的内容。\n```\n\n#### Dfs，Query Then Fetch\n\n```\n与Query Then Fetch不同之处在于，在分散阶段就会计算分布项的词频为了更精确的评分。\n```\n\n\n\n\n\n","slug":"Search APIS","published":1,"date":"2020-10-26T07:14:43.794Z","updated":"2020-10-26T07:08:15.375Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgq7hw5g0002cwg0ec2m0sse","content":"<h1 id=\"Search-APIS\"><a href=\"#Search-APIS\" class=\"headerlink\" title=\"Search APIS\"></a>Search APIS</h1><h2 id=\"Request-Body-Search\"><a href=\"#Request-Body-Search\" class=\"headerlink\" title=\"Request Body Search\"></a>Request Body Search</h2><h3 id=\"Query\"><a href=\"#Query\" class=\"headerlink\" title=\"Query\"></a>Query</h3><h3 id=\"From-Size\"><a href=\"#From-Size\" class=\"headerlink\" title=\"From/Size\"></a>From/Size</h3><h3 id=\"Sort\"><a href=\"#Sort\" class=\"headerlink\" title=\"Sort\"></a>Sort</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">可以指定一个或多个字段排序。每一个字段都可以被逆序排序。被定义在字段级别上。特殊的字段_score指定被score排序，_doc指定按照索引顺序排序。</span><br><span class=\"line\"></span><br><span class=\"line\">_doc除了是一个有效的排序方式之外，没有任何真实的使用场景，如果你不关心文档的返回顺序，你应该用_doc，这个在scrolling中特别有用。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /my_index/_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;sort&quot;</span>: [</span><br><span class=\"line\">\t\t&#123;<span class=\"string\">&quot;post_date&quot;</span> : &#123;<span class=\"string\">&quot;order&quot;</span>:<span class=\"string\">&quot;asc&quot;</span>&#125;&#125;,</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;user&quot;</span></span><br><span class=\"line\">\t\t&#123;<span class=\"string\">&quot;name&quot;</span>,<span class=\"string\">&quot;desc&quot;</span>&#125;,</span><br><span class=\"line\">\t\t&#123;<span class=\"string\">&quot;age&quot;</span>:<span class=\"string\">&quot;desc&quot;</span>&#125;,</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;_score&quot;</span></span><br><span class=\"line\">\t],</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>:&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;term&quot;</span> : &#123;<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span>&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Sort mode option</span><br><span class=\"line\">指定使用哪一种模式排序，可选如下几项</span><br><span class=\"line\">min,max,sum,avg,median,</span><br><span class=\"line\"></span><br><span class=\"line\">POST /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"string\">&quot;query&quot;</span> : &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;term&quot;</span> : &#123; <span class=\"string\">&quot;product&quot;</span> : <span class=\"string\">&quot;chocolate&quot;</span> &#125;</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">   <span class=\"string\">&quot;sort&quot;</span> : [</span><br><span class=\"line\">      &#123;<span class=\"string\">&quot;price&quot;</span> : &#123;<span class=\"string\">&quot;order&quot;</span> : <span class=\"string\">&quot;desc&quot;</span>, <span class=\"string\">&quot;mode&quot;</span> : <span class=\"string\">&quot;sum&quot;</span>&#125;&#125;</span><br><span class=\"line\">   ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">####</span></span><br><span class=\"line\">Sorting within nested objects</span><br><span class=\"line\">es也支持在一个或多个对象里面对字段进行排序。支持如下选项进行排序：</span><br><span class=\"line\">path</span><br><span class=\"line\">\t定义在哪一个对象排序。实际排序的字段必须是嵌套对象的直接字段。当使用嵌套字段排序时，这个字段是必填的。</span><br><span class=\"line\">filter</span><br><span class=\"line\"></span><br><span class=\"line\">max_children</span><br><span class=\"line\"></span><br><span class=\"line\">nested</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"Source-filtering\"><a href=\"#Source-filtering\" class=\"headerlink\" title=\"Source filtering\"></a>Source filtering</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用来控制怎样处理_source字段返回的结果</span><br><span class=\"line\">1.禁用_source获取 设置为<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;_source&quot;</span> : <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>:&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">2.使用通配符过滤</span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;_source&quot;</span>: <span class=\"string\">&quot;obj.&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;term&quot;</span>: &#123;<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span>&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">OR</span></span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;_source&quot;</span>:[<span class=\"string\">&quot;obj1.*&quot;</span>，<span class=\"string\">&quot;obj2.*&quot;</span>],</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;term&quot;</span>: &#123;<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span>&#125;</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">3.指定 includes 和 excludes</span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;_source&quot;</span> :&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;includes&quot;</span>: [<span class=\"string\">&quot;obj1.*&quot;</span>,<span class=\"string\">&quot;obj2.*&quot;</span>],</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;encludes&quot;</span>: [*.description]</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>:&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;term&quot;</span>:&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"Search-Type\"><a href=\"#Search-Type\" class=\"headerlink\" title=\"Search Type\"></a>Search Type</h3><h4 id=\"Query-Then-Fetch\"><a href=\"#Query-Then-Fetch\" class=\"headerlink\" title=\"Query Then Fetch\"></a>Query Then Fetch</h4><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Parameter value: query_then_fetch</span><br><span class=\"line\">\t这个请求处理由两个阶段完成;</span><br><span class=\"line\">\t第一个阶段,查询将请求所有相关的shards,每一个shard执行search并产生一个排序的本地shard的结果集。每一个shard返回足够的信息到coordinating <span class=\"keyword\">node</span><span class=\"title\">，以使得它能够合并和re-sort</span>这shard level的结果集到一个全局的，最大长度的结果集。</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t第二阶段，coordination <span class=\"keyword\">node</span> <span class=\"title\">只从相关的节点请求document</span>的内容。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Dfs，Query-Then-Fetch\"><a href=\"#Dfs，Query-Then-Fetch\" class=\"headerlink\" title=\"Dfs，Query Then Fetch\"></a>Dfs，Query Then Fetch</h4><figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">与<span class=\"keyword\">Query</span> Then Fetch不同之处在于，在分散阶段就会计算分布项的词频为了更精确的评分。</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Search-APIS\"><a href=\"#Search-APIS\" class=\"headerlink\" title=\"Search APIS\"></a>Search APIS</h1><h2 id=\"Request-Body-Search\"><a href=\"#Request-Body-Search\" class=\"headerlink\" title=\"Request Body Search\"></a>Request Body Search</h2><h3 id=\"Query\"><a href=\"#Query\" class=\"headerlink\" title=\"Query\"></a>Query</h3><h3 id=\"From-Size\"><a href=\"#From-Size\" class=\"headerlink\" title=\"From/Size\"></a>From/Size</h3><h3 id=\"Sort\"><a href=\"#Sort\" class=\"headerlink\" title=\"Sort\"></a>Sort</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">可以指定一个或多个字段排序。每一个字段都可以被逆序排序。被定义在字段级别上。特殊的字段_score指定被score排序，_doc指定按照索引顺序排序。</span><br><span class=\"line\"></span><br><span class=\"line\">_doc除了是一个有效的排序方式之外，没有任何真实的使用场景，如果你不关心文档的返回顺序，你应该用_doc，这个在scrolling中特别有用。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /my_index/_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;sort&quot;</span>: [</span><br><span class=\"line\">\t\t&#123;<span class=\"string\">&quot;post_date&quot;</span> : &#123;<span class=\"string\">&quot;order&quot;</span>:<span class=\"string\">&quot;asc&quot;</span>&#125;&#125;,</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;user&quot;</span></span><br><span class=\"line\">\t\t&#123;<span class=\"string\">&quot;name&quot;</span>,<span class=\"string\">&quot;desc&quot;</span>&#125;,</span><br><span class=\"line\">\t\t&#123;<span class=\"string\">&quot;age&quot;</span>:<span class=\"string\">&quot;desc&quot;</span>&#125;,</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;_score&quot;</span></span><br><span class=\"line\">\t],</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>:&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;term&quot;</span> : &#123;<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span>&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Sort mode option</span><br><span class=\"line\">指定使用哪一种模式排序，可选如下几项</span><br><span class=\"line\">min,max,sum,avg,median,</span><br><span class=\"line\"></span><br><span class=\"line\">POST /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"string\">&quot;query&quot;</span> : &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;term&quot;</span> : &#123; <span class=\"string\">&quot;product&quot;</span> : <span class=\"string\">&quot;chocolate&quot;</span> &#125;</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">   <span class=\"string\">&quot;sort&quot;</span> : [</span><br><span class=\"line\">      &#123;<span class=\"string\">&quot;price&quot;</span> : &#123;<span class=\"string\">&quot;order&quot;</span> : <span class=\"string\">&quot;desc&quot;</span>, <span class=\"string\">&quot;mode&quot;</span> : <span class=\"string\">&quot;sum&quot;</span>&#125;&#125;</span><br><span class=\"line\">   ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">####</span></span><br><span class=\"line\">Sorting within nested objects</span><br><span class=\"line\">es也支持在一个或多个对象里面对字段进行排序。支持如下选项进行排序：</span><br><span class=\"line\">path</span><br><span class=\"line\">\t定义在哪一个对象排序。实际排序的字段必须是嵌套对象的直接字段。当使用嵌套字段排序时，这个字段是必填的。</span><br><span class=\"line\">filter</span><br><span class=\"line\"></span><br><span class=\"line\">max_children</span><br><span class=\"line\"></span><br><span class=\"line\">nested</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"Source-filtering\"><a href=\"#Source-filtering\" class=\"headerlink\" title=\"Source filtering\"></a>Source filtering</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用来控制怎样处理_source字段返回的结果</span><br><span class=\"line\">1.禁用_source获取 设置为<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;_source&quot;</span> : <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>:&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">2.使用通配符过滤</span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;_source&quot;</span>: <span class=\"string\">&quot;obj.&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;term&quot;</span>: &#123;<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span>&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">OR</span></span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;_source&quot;</span>:[<span class=\"string\">&quot;obj1.*&quot;</span>，<span class=\"string\">&quot;obj2.*&quot;</span>],</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;term&quot;</span>: &#123;<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span>&#125;</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">3.指定 includes 和 excludes</span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;_source&quot;</span> :&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;includes&quot;</span>: [<span class=\"string\">&quot;obj1.*&quot;</span>,<span class=\"string\">&quot;obj2.*&quot;</span>],</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;encludes&quot;</span>: [*.description]</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>:&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;term&quot;</span>:&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;user&quot;</span>:<span class=\"string\">&quot;kimchy&quot;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"Search-Type\"><a href=\"#Search-Type\" class=\"headerlink\" title=\"Search Type\"></a>Search Type</h3><h4 id=\"Query-Then-Fetch\"><a href=\"#Query-Then-Fetch\" class=\"headerlink\" title=\"Query Then Fetch\"></a>Query Then Fetch</h4><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Parameter value: query_then_fetch</span><br><span class=\"line\">\t这个请求处理由两个阶段完成;</span><br><span class=\"line\">\t第一个阶段,查询将请求所有相关的shards,每一个shard执行search并产生一个排序的本地shard的结果集。每一个shard返回足够的信息到coordinating <span class=\"keyword\">node</span><span class=\"title\">，以使得它能够合并和re-sort</span>这shard level的结果集到一个全局的，最大长度的结果集。</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t第二阶段，coordination <span class=\"keyword\">node</span> <span class=\"title\">只从相关的节点请求document</span>的内容。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Dfs，Query-Then-Fetch\"><a href=\"#Dfs，Query-Then-Fetch\" class=\"headerlink\" title=\"Dfs，Query Then Fetch\"></a>Dfs，Query Then Fetch</h4><figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">与<span class=\"keyword\">Query</span> Then Fetch不同之处在于，在分散阶段就会计算分布项的词频为了更精确的评分。</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n"},{"title":"Query DSL","renderNumberedHeading":true,"grammar_cjkRuby":true,"_content":"\n## Query and Filter context\n\n```\nQuery关注点：此文档与此查询子句的匹配程度如何?\n\t1）是否包含？\n\t\t确定文档是否应该成为结果的一部分\n\t2）相关度得分多少？\n\t\t除了确定文档是否匹配外，查询子句还计算了表示文档与其他文档相匹配的_score\n\t3）得分越高，相关度越高?\n\t\nFilter关注点：此文档和查询子句匹配么？\n\t1)是否包含\n\t2）不涉及评分\n\t3）针对结构化数据\n\t\t适用于完全精确匹配，范围检索\n\t4)更快\nfilter查询性能好，可缓存。不许计算得分\nquery不可缓存；需要计算得分。\n\nElasticsearch将创建一个文档匹配过滤器的位集bitset（如果文档匹配则为1，否则为0）。 随后用相同的过滤器执行查询将重用此信息。\n\n每当添加或更新新文档时，位集bitset也会更新。\n\n全文检索以及任何使用相关性评分的场景使用query检索。\n\n除此之外的其他使用filter过滤器过滤。\n\n```\n\n## Compound queries\n\n### bool query\n\n多个叶或组合查询语句的默认语句，例如must、should、must_not、filter，must和should子句的分数组合在一起，匹配越多越好，而must_not和filter子句在filter context中执行；\n\n### boosting query\n\n```\n返回与正相关匹配的文档，但是减少负相关文档的分数；\n```\n\n### constant_score query\n\n```\n一个query包装另外的query的查询，但是执行在filter context中。全部匹配的文档都使用相同的\"constant\"_score\n```\n\n### dis_max query\n\n```\n一个查询语句接受多个子查询，返回任意一个匹配任意一个查询语句的文档。当bool query合并所有匹配查询的分数时，dis_max查询使用最佳匹配的语句的分数；\n```\n\n### function_score query\n\n```\n使用函数修改主查询返回的分数，以考虑诸如受欢迎程度，新进度，距离或使用脚本实现的自定义算法等；\n```\n\n\n\n## 各种查询类型的详细说明\n\n### Boolean query\n\n```\n与文档匹配的查询，该文档与其他查询的boolean组合匹配\n使用一个或多个boolean子句，每一个子句都有一个类型\n```\n\n| occur    | Description                                                  |\n| -------- | ------------------------------------------------------------ |\n| must     | 查询子句必须出现在匹配的文档中，并且匹配的将有助于得分       |\n| filter   | 查询子句必须出现在匹配的文档中。但是并不像must 一样，不会进行评分。filter 的子句被执行在filter context中。意味着评分被忽略，并且查询会被考虑加入缓存； |\n| should   | 查询子句应该出现在匹配的文档中                               |\n| must_not | 查询子句必须不能出现在匹配的文档中，执行在filter context中，意味着评分被忽略，并且被考虑加入缓存中。由于评分被忽略所以返回的所有文档的评分为0 |\n\n#### Using minimum_should_match\n\n```\n使用参数minimum_should_match 指定几个或百分数的should子句必须匹配。\n如果一个bool qurey 包含至少一个should子句，没有must和filter，minimum_should_match默认为1，如果有must或filter默认为0；\n```\n\n| Type                  | Example     | Description                                                  |\n| --------------------- | ----------- | ------------------------------------------------------------ |\n| Integer               | 3           | 指定一个固定的值，与可选子句的数量无关；                     |\n| Negative   integer    | -2          | 全部的可选子句的数量减去这个值必须被匹配.                    |\n| Percentage            | 75%         | 指定可选子句的总数的百分比必须被匹配,这个值的计算是向下取整的. |\n| Negative percentage   | -25%        | 指定可选子句总数的百分比可以丢失. 计算同样是向下取整的. 然后从总数减去,以确定这个值 |\n| Combination           | 3<90%       | 一个正整数,跟一个<,在跟一个任意的前面提到的判断条件. 表示如果可选子句的数量小于等于这个integer那么需要全部匹配,但是如果大于这个integer的话就会应用和<后面的判断条件 |\n| Multiple combinations | 2<-25% 9<-3 |                                                              |\n\n```elasticsearch\n这个查询没有指定评分,所以返回的所有文档评分都为0\nGET _search\n{\n  \"query\": {\n    \"bool\": {\n      \"filter\": {\n        \"term\": {\n          \"status\": \"active\"\n        }\n      }\n    }\n  }\n}\n```\n\n```\n这个查询因为有一个match_all query,所以会为每个返回的document分配一个1.0的评分\nGET _search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"term\": {\n          \"status\": \"active\"\n        }\n      }\n    }\n  }\n}\n```\n\n```\nconstant_score 与上面的查询的效果一样\nGET _search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"status\": \"active\"\n        }\n      }\n    }\n  }\n}\n```\n\n#### Named queries\n\n```\n每一个query接受一个_name在顶级中定义.你可以命名queries对于跟踪哪一个query匹配返回的document.如果named queries被使用,响应的hit中会包含match_queries属性\n\nGET /_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"match\": { \"name.first\": { \"query\": \"shay\", \"_name\": \"first\" } } },\n        { \"match\": { \"name.last\": { \"query\": \"banon\", \"_name\": \"last\" } } }\n      ],\n      \"filter\": {\n        \"terms\": {\n          \"name.last\": [ \"banon\", \"kimchy\" ],\n          \"_name\": \"test\"\n        }\n      }\n    }\n  }\n}\n```\n\n### Boosting\n\n```\n返回与positive查询匹配的document,同时降低与查询匹配的相关性得分 negative.\n\n可以使用boosting查询来降级某些文档,而不必将他们从搜索结果[排除.\nGET /_search\n{\n  \"query\": {\n    \"boosting\": {\n      \"positive\": {\n        \"term\": {\n          \"text\": \"apple\"\n        }\n      },\n      \"negative\": {\n        \"term\": {\n          \"text\": \"pie tart fruit crumble tree\"\n        }\n      },\n      \"negative_boost\": 0.5\n    }\n  }\n}\n\npositive\n\t要运行的查询.返回的所有文档都必须与此查询匹配\nnegative\n\t查询用于降低匹配文档的相关性得分.\n\t如果返回的文档与positive查询和该查询匹配,则该boosting查询将按照如下计算文档的分\n\t1,从positive查询中获取原始的相关性分数\n\t2,将分数乘以negative_boost值\n\t\n```\n\n","source":"_posts/Query DSL.md","raw":"---\ntitle: Query DSL\t\ntags: es,Query DSL\t\nrenderNumberedHeading: true\ngrammar_cjkRuby: true\n---\n\n## Query and Filter context\n\n```\nQuery关注点：此文档与此查询子句的匹配程度如何?\n\t1）是否包含？\n\t\t确定文档是否应该成为结果的一部分\n\t2）相关度得分多少？\n\t\t除了确定文档是否匹配外，查询子句还计算了表示文档与其他文档相匹配的_score\n\t3）得分越高，相关度越高?\n\t\nFilter关注点：此文档和查询子句匹配么？\n\t1)是否包含\n\t2）不涉及评分\n\t3）针对结构化数据\n\t\t适用于完全精确匹配，范围检索\n\t4)更快\nfilter查询性能好，可缓存。不许计算得分\nquery不可缓存；需要计算得分。\n\nElasticsearch将创建一个文档匹配过滤器的位集bitset（如果文档匹配则为1，否则为0）。 随后用相同的过滤器执行查询将重用此信息。\n\n每当添加或更新新文档时，位集bitset也会更新。\n\n全文检索以及任何使用相关性评分的场景使用query检索。\n\n除此之外的其他使用filter过滤器过滤。\n\n```\n\n## Compound queries\n\n### bool query\n\n多个叶或组合查询语句的默认语句，例如must、should、must_not、filter，must和should子句的分数组合在一起，匹配越多越好，而must_not和filter子句在filter context中执行；\n\n### boosting query\n\n```\n返回与正相关匹配的文档，但是减少负相关文档的分数；\n```\n\n### constant_score query\n\n```\n一个query包装另外的query的查询，但是执行在filter context中。全部匹配的文档都使用相同的\"constant\"_score\n```\n\n### dis_max query\n\n```\n一个查询语句接受多个子查询，返回任意一个匹配任意一个查询语句的文档。当bool query合并所有匹配查询的分数时，dis_max查询使用最佳匹配的语句的分数；\n```\n\n### function_score query\n\n```\n使用函数修改主查询返回的分数，以考虑诸如受欢迎程度，新进度，距离或使用脚本实现的自定义算法等；\n```\n\n\n\n## 各种查询类型的详细说明\n\n### Boolean query\n\n```\n与文档匹配的查询，该文档与其他查询的boolean组合匹配\n使用一个或多个boolean子句，每一个子句都有一个类型\n```\n\n| occur    | Description                                                  |\n| -------- | ------------------------------------------------------------ |\n| must     | 查询子句必须出现在匹配的文档中，并且匹配的将有助于得分       |\n| filter   | 查询子句必须出现在匹配的文档中。但是并不像must 一样，不会进行评分。filter 的子句被执行在filter context中。意味着评分被忽略，并且查询会被考虑加入缓存； |\n| should   | 查询子句应该出现在匹配的文档中                               |\n| must_not | 查询子句必须不能出现在匹配的文档中，执行在filter context中，意味着评分被忽略，并且被考虑加入缓存中。由于评分被忽略所以返回的所有文档的评分为0 |\n\n#### Using minimum_should_match\n\n```\n使用参数minimum_should_match 指定几个或百分数的should子句必须匹配。\n如果一个bool qurey 包含至少一个should子句，没有must和filter，minimum_should_match默认为1，如果有must或filter默认为0；\n```\n\n| Type                  | Example     | Description                                                  |\n| --------------------- | ----------- | ------------------------------------------------------------ |\n| Integer               | 3           | 指定一个固定的值，与可选子句的数量无关；                     |\n| Negative   integer    | -2          | 全部的可选子句的数量减去这个值必须被匹配.                    |\n| Percentage            | 75%         | 指定可选子句的总数的百分比必须被匹配,这个值的计算是向下取整的. |\n| Negative percentage   | -25%        | 指定可选子句总数的百分比可以丢失. 计算同样是向下取整的. 然后从总数减去,以确定这个值 |\n| Combination           | 3<90%       | 一个正整数,跟一个<,在跟一个任意的前面提到的判断条件. 表示如果可选子句的数量小于等于这个integer那么需要全部匹配,但是如果大于这个integer的话就会应用和<后面的判断条件 |\n| Multiple combinations | 2<-25% 9<-3 |                                                              |\n\n```elasticsearch\n这个查询没有指定评分,所以返回的所有文档评分都为0\nGET _search\n{\n  \"query\": {\n    \"bool\": {\n      \"filter\": {\n        \"term\": {\n          \"status\": \"active\"\n        }\n      }\n    }\n  }\n}\n```\n\n```\n这个查询因为有一个match_all query,所以会为每个返回的document分配一个1.0的评分\nGET _search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"term\": {\n          \"status\": \"active\"\n        }\n      }\n    }\n  }\n}\n```\n\n```\nconstant_score 与上面的查询的效果一样\nGET _search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"status\": \"active\"\n        }\n      }\n    }\n  }\n}\n```\n\n#### Named queries\n\n```\n每一个query接受一个_name在顶级中定义.你可以命名queries对于跟踪哪一个query匹配返回的document.如果named queries被使用,响应的hit中会包含match_queries属性\n\nGET /_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"match\": { \"name.first\": { \"query\": \"shay\", \"_name\": \"first\" } } },\n        { \"match\": { \"name.last\": { \"query\": \"banon\", \"_name\": \"last\" } } }\n      ],\n      \"filter\": {\n        \"terms\": {\n          \"name.last\": [ \"banon\", \"kimchy\" ],\n          \"_name\": \"test\"\n        }\n      }\n    }\n  }\n}\n```\n\n### Boosting\n\n```\n返回与positive查询匹配的document,同时降低与查询匹配的相关性得分 negative.\n\n可以使用boosting查询来降级某些文档,而不必将他们从搜索结果[排除.\nGET /_search\n{\n  \"query\": {\n    \"boosting\": {\n      \"positive\": {\n        \"term\": {\n          \"text\": \"apple\"\n        }\n      },\n      \"negative\": {\n        \"term\": {\n          \"text\": \"pie tart fruit crumble tree\"\n        }\n      },\n      \"negative_boost\": 0.5\n    }\n  }\n}\n\npositive\n\t要运行的查询.返回的所有文档都必须与此查询匹配\nnegative\n\t查询用于降低匹配文档的相关性得分.\n\t如果返回的文档与positive查询和该查询匹配,则该boosting查询将按照如下计算文档的分\n\t1,从positive查询中获取原始的相关性分数\n\t2,将分数乘以negative_boost值\n\t\n```\n\n","slug":"Query DSL","published":1,"date":"2020-10-26T07:14:43.791Z","updated":"2020-10-26T07:07:35.995Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgq7hw5h0003cwg0egp38w95","content":"<h2 id=\"Query-and-Filter-context\"><a href=\"#Query-and-Filter-context\" class=\"headerlink\" title=\"Query and Filter context\"></a>Query and Filter context</h2><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Query关注点：此文档与此查询子句的匹配程度如何?</span><br><span class=\"line\">\t<span class=\"number\">1</span>）是否包含？</span><br><span class=\"line\">\t\t确定文档是否应该成为结果的一部分</span><br><span class=\"line\">\t<span class=\"number\">2</span>）相关度得分多少？</span><br><span class=\"line\">\t\t除了确定文档是否匹配外，查询子句还计算了表示文档与其他文档相匹配的_score</span><br><span class=\"line\">\t<span class=\"number\">3</span>）得分越高，相关度越高?</span><br><span class=\"line\">\t</span><br><span class=\"line\">Filter关注点：此文档和查询子句匹配么？</span><br><span class=\"line\">\t<span class=\"number\">1</span>)是否包含</span><br><span class=\"line\">\t<span class=\"number\">2</span>）不涉及评分</span><br><span class=\"line\">\t<span class=\"number\">3</span>）针对结构化数据</span><br><span class=\"line\">\t\t适用于完全精确匹配，范围检索</span><br><span class=\"line\">\t<span class=\"number\">4</span>)更快</span><br><span class=\"line\">filter查询性能好，可缓存。不许计算得分</span><br><span class=\"line\">query不可缓存；需要计算得分。</span><br><span class=\"line\"></span><br><span class=\"line\">Elasticsearch将创建一个文档匹配过滤器的位集bitset（如果文档匹配则为<span class=\"number\">1</span>，否则为<span class=\"number\">0</span>）。 随后用相同的过滤器执行查询将重用此信息。</span><br><span class=\"line\"></span><br><span class=\"line\">每当添加或更新新文档时，位集bitset也会更新。</span><br><span class=\"line\"></span><br><span class=\"line\">全文检索以及任何使用相关性评分的场景使用query检索。</span><br><span class=\"line\"></span><br><span class=\"line\">除此之外的其他使用filter过滤器过滤。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Compound-queries\"><a href=\"#Compound-queries\" class=\"headerlink\" title=\"Compound queries\"></a>Compound queries</h2><h3 id=\"bool-query\"><a href=\"#bool-query\" class=\"headerlink\" title=\"bool query\"></a>bool query</h3><p>多个叶或组合查询语句的默认语句，例如must、should、must_not、filter，must和should子句的分数组合在一起，匹配越多越好，而must_not和filter子句在filter context中执行；</p>\n<h3 id=\"boosting-query\"><a href=\"#boosting-query\" class=\"headerlink\" title=\"boosting query\"></a>boosting query</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">返回与正相关匹配的文档，但是减少负相关文档的分数；</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"constant-score-query\"><a href=\"#constant-score-query\" class=\"headerlink\" title=\"constant_score query\"></a>constant_score query</h3><figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一个<span class=\"keyword\">query</span>包装另外的<span class=\"keyword\">query</span>的查询，但是执行在filter context中。全部匹配的文档都使用相同的<span class=\"string\">&quot;constant&quot;</span>_score</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"dis-max-query\"><a href=\"#dis-max-query\" class=\"headerlink\" title=\"dis_max query\"></a>dis_max query</h3><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一个查询语句接受多个子查询，返回任意一个匹配任意一个查询语句的文档。当<span class=\"built_in\">bool</span> query合并所有匹配查询的分数时，dis_max查询使用最佳匹配的语句的分数；</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"function-score-query\"><a href=\"#function-score-query\" class=\"headerlink\" title=\"function_score query\"></a>function_score query</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用函数修改主查询返回的分数，以考虑诸如受欢迎程度，新进度，距离或使用脚本实现的自定义算法等；</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"各种查询类型的详细说明\"><a href=\"#各种查询类型的详细说明\" class=\"headerlink\" title=\"各种查询类型的详细说明\"></a>各种查询类型的详细说明</h2><h3 id=\"Boolean-query\"><a href=\"#Boolean-query\" class=\"headerlink\" title=\"Boolean query\"></a>Boolean query</h3><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">与文档匹配的查询，该文档与其他查询的<span class=\"built_in\">bool</span>ean组合匹配</span><br><span class=\"line\">使用一个或多个<span class=\"built_in\">bool</span>ean子句，每一个子句都有一个类型</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>occur</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>must</td>\n<td>查询子句必须出现在匹配的文档中，并且匹配的将有助于得分</td>\n</tr>\n<tr>\n<td>filter</td>\n<td>查询子句必须出现在匹配的文档中。但是并不像must 一样，不会进行评分。filter 的子句被执行在filter context中。意味着评分被忽略，并且查询会被考虑加入缓存；</td>\n</tr>\n<tr>\n<td>should</td>\n<td>查询子句应该出现在匹配的文档中</td>\n</tr>\n<tr>\n<td>must_not</td>\n<td>查询子句必须不能出现在匹配的文档中，执行在filter context中，意味着评分被忽略，并且被考虑加入缓存中。由于评分被忽略所以返回的所有文档的评分为0</td>\n</tr>\n</tbody></table>\n<h4 id=\"Using-minimum-should-match\"><a href=\"#Using-minimum-should-match\" class=\"headerlink\" title=\"Using minimum_should_match\"></a>Using minimum_should_match</h4><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用参数minimum_should_match 指定几个或百分数的should子句必须匹配。</span><br><span class=\"line\">如果一个<span class=\"built_in\">bool</span> qurey 包含至少一个should子句，没有must和filter，minimum_should_match默认为<span class=\"number\">1</span>，如果有must或filter默认为<span class=\"number\">0</span>；</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Example</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Integer</td>\n<td>3</td>\n<td>指定一个固定的值，与可选子句的数量无关；</td>\n</tr>\n<tr>\n<td>Negative   integer</td>\n<td>-2</td>\n<td>全部的可选子句的数量减去这个值必须被匹配.</td>\n</tr>\n<tr>\n<td>Percentage</td>\n<td>75%</td>\n<td>指定可选子句的总数的百分比必须被匹配,这个值的计算是向下取整的.</td>\n</tr>\n<tr>\n<td>Negative percentage</td>\n<td>-25%</td>\n<td>指定可选子句总数的百分比可以丢失. 计算同样是向下取整的. 然后从总数减去,以确定这个值</td>\n</tr>\n<tr>\n<td>Combination</td>\n<td>3&lt;90%</td>\n<td>一个正整数,跟一个&lt;,在跟一个任意的前面提到的判断条件. 表示如果可选子句的数量小于等于这个integer那么需要全部匹配,但是如果大于这个integer的话就会应用和&lt;后面的判断条件</td>\n</tr>\n<tr>\n<td>Multiple combinations</td>\n<td>2&lt;-25% 9&lt;-3</td>\n<td></td>\n</tr>\n</tbody></table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这个查询没有指定评分,所以返回的所有文档评分都为0</span><br><span class=\"line\">GET _search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;query&quot;: &#123;</span><br><span class=\"line\">    &quot;bool&quot;: &#123;</span><br><span class=\"line\">      &quot;filter&quot;: &#123;</span><br><span class=\"line\">        &quot;term&quot;: &#123;</span><br><span class=\"line\">          &quot;status&quot;: &quot;active&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这个查询因为有一个match_all query,所以会为每个返回的document分配一个1.0的评分</span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> _search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;bool&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;must&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&quot;filter&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;active&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">constant_score 与上面的查询的效果一样</span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> _search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;constant_score&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;filter&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;active&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Named-queries\"><a href=\"#Named-queries\" class=\"headerlink\" title=\"Named queries\"></a>Named queries</h4><figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">每一个<span class=\"keyword\">query</span>接受一个_name在顶级中定义.你可以命名queries对于跟踪哪一个<span class=\"keyword\">query</span>匹配返回的document.如果named queries被使用,响应的hit中会包含match_queries属性</span><br><span class=\"line\"></span><br><span class=\"line\">GET /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;bool&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;should&quot;</span>: [</span><br><span class=\"line\">        &#123; <span class=\"string\">&quot;match&quot;</span>: &#123; <span class=\"string\">&quot;name.first&quot;</span>: &#123; <span class=\"string\">&quot;query&quot;</span>: <span class=\"string\">&quot;shay&quot;</span>, <span class=\"string\">&quot;_name&quot;</span>: <span class=\"string\">&quot;first&quot;</span> &#125; &#125; &#125;,</span><br><span class=\"line\">        &#123; <span class=\"string\">&quot;match&quot;</span>: &#123; <span class=\"string\">&quot;name.last&quot;</span>: &#123; <span class=\"string\">&quot;query&quot;</span>: <span class=\"string\">&quot;banon&quot;</span>, <span class=\"string\">&quot;_name&quot;</span>: <span class=\"string\">&quot;last&quot;</span> &#125; &#125; &#125;</span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"string\">&quot;filter&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;terms&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;name.last&quot;</span>: [ <span class=\"string\">&quot;banon&quot;</span>, <span class=\"string\">&quot;kimchy&quot;</span> ],</span><br><span class=\"line\">          <span class=\"string\">&quot;_name&quot;</span>: <span class=\"string\">&quot;test&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Boosting\"><a href=\"#Boosting\" class=\"headerlink\" title=\"Boosting\"></a>Boosting</h3><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">返回与<span class=\"keyword\">positive</span>查询匹配的document,同时降低与查询匹配的相关性得分 <span class=\"keyword\">negative</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">可以使用boosting查询来降级某些文档,而不必将他们从搜索结果[排除.</span><br><span class=\"line\">GET /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;boosting&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;positive&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;text&quot;</span>: <span class=\"string\">&quot;apple&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&quot;negative&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;text&quot;</span>: <span class=\"string\">&quot;pie tart fruit crumble tree&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&quot;negative_boost&quot;</span>: <span class=\"number\">0.5</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">positive</span></span><br><span class=\"line\">\t要运行的查询.返回的所有文档都必须与此查询匹配</span><br><span class=\"line\"><span class=\"keyword\">negative</span></span><br><span class=\"line\">\t查询用于降低匹配文档的相关性得分.</span><br><span class=\"line\">\t如果返回的文档与<span class=\"keyword\">positive</span>查询和该查询匹配,则该boosting查询将按照如下计算文档的分</span><br><span class=\"line\">\t<span class=\"number\">1</span>,从<span class=\"keyword\">positive</span>查询中获取原始的相关性分数</span><br><span class=\"line\">\t<span class=\"number\">2</span>,将分数乘以negative_boost值</span><br><span class=\"line\">\t</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Query-and-Filter-context\"><a href=\"#Query-and-Filter-context\" class=\"headerlink\" title=\"Query and Filter context\"></a>Query and Filter context</h2><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Query关注点：此文档与此查询子句的匹配程度如何?</span><br><span class=\"line\">\t<span class=\"number\">1</span>）是否包含？</span><br><span class=\"line\">\t\t确定文档是否应该成为结果的一部分</span><br><span class=\"line\">\t<span class=\"number\">2</span>）相关度得分多少？</span><br><span class=\"line\">\t\t除了确定文档是否匹配外，查询子句还计算了表示文档与其他文档相匹配的_score</span><br><span class=\"line\">\t<span class=\"number\">3</span>）得分越高，相关度越高?</span><br><span class=\"line\">\t</span><br><span class=\"line\">Filter关注点：此文档和查询子句匹配么？</span><br><span class=\"line\">\t<span class=\"number\">1</span>)是否包含</span><br><span class=\"line\">\t<span class=\"number\">2</span>）不涉及评分</span><br><span class=\"line\">\t<span class=\"number\">3</span>）针对结构化数据</span><br><span class=\"line\">\t\t适用于完全精确匹配，范围检索</span><br><span class=\"line\">\t<span class=\"number\">4</span>)更快</span><br><span class=\"line\">filter查询性能好，可缓存。不许计算得分</span><br><span class=\"line\">query不可缓存；需要计算得分。</span><br><span class=\"line\"></span><br><span class=\"line\">Elasticsearch将创建一个文档匹配过滤器的位集bitset（如果文档匹配则为<span class=\"number\">1</span>，否则为<span class=\"number\">0</span>）。 随后用相同的过滤器执行查询将重用此信息。</span><br><span class=\"line\"></span><br><span class=\"line\">每当添加或更新新文档时，位集bitset也会更新。</span><br><span class=\"line\"></span><br><span class=\"line\">全文检索以及任何使用相关性评分的场景使用query检索。</span><br><span class=\"line\"></span><br><span class=\"line\">除此之外的其他使用filter过滤器过滤。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Compound-queries\"><a href=\"#Compound-queries\" class=\"headerlink\" title=\"Compound queries\"></a>Compound queries</h2><h3 id=\"bool-query\"><a href=\"#bool-query\" class=\"headerlink\" title=\"bool query\"></a>bool query</h3><p>多个叶或组合查询语句的默认语句，例如must、should、must_not、filter，must和should子句的分数组合在一起，匹配越多越好，而must_not和filter子句在filter context中执行；</p>\n<h3 id=\"boosting-query\"><a href=\"#boosting-query\" class=\"headerlink\" title=\"boosting query\"></a>boosting query</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">返回与正相关匹配的文档，但是减少负相关文档的分数；</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"constant-score-query\"><a href=\"#constant-score-query\" class=\"headerlink\" title=\"constant_score query\"></a>constant_score query</h3><figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一个<span class=\"keyword\">query</span>包装另外的<span class=\"keyword\">query</span>的查询，但是执行在filter context中。全部匹配的文档都使用相同的<span class=\"string\">&quot;constant&quot;</span>_score</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"dis-max-query\"><a href=\"#dis-max-query\" class=\"headerlink\" title=\"dis_max query\"></a>dis_max query</h3><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一个查询语句接受多个子查询，返回任意一个匹配任意一个查询语句的文档。当<span class=\"built_in\">bool</span> query合并所有匹配查询的分数时，dis_max查询使用最佳匹配的语句的分数；</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"function-score-query\"><a href=\"#function-score-query\" class=\"headerlink\" title=\"function_score query\"></a>function_score query</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用函数修改主查询返回的分数，以考虑诸如受欢迎程度，新进度，距离或使用脚本实现的自定义算法等；</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"各种查询类型的详细说明\"><a href=\"#各种查询类型的详细说明\" class=\"headerlink\" title=\"各种查询类型的详细说明\"></a>各种查询类型的详细说明</h2><h3 id=\"Boolean-query\"><a href=\"#Boolean-query\" class=\"headerlink\" title=\"Boolean query\"></a>Boolean query</h3><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">与文档匹配的查询，该文档与其他查询的<span class=\"built_in\">bool</span>ean组合匹配</span><br><span class=\"line\">使用一个或多个<span class=\"built_in\">bool</span>ean子句，每一个子句都有一个类型</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>occur</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>must</td>\n<td>查询子句必须出现在匹配的文档中，并且匹配的将有助于得分</td>\n</tr>\n<tr>\n<td>filter</td>\n<td>查询子句必须出现在匹配的文档中。但是并不像must 一样，不会进行评分。filter 的子句被执行在filter context中。意味着评分被忽略，并且查询会被考虑加入缓存；</td>\n</tr>\n<tr>\n<td>should</td>\n<td>查询子句应该出现在匹配的文档中</td>\n</tr>\n<tr>\n<td>must_not</td>\n<td>查询子句必须不能出现在匹配的文档中，执行在filter context中，意味着评分被忽略，并且被考虑加入缓存中。由于评分被忽略所以返回的所有文档的评分为0</td>\n</tr>\n</tbody></table>\n<h4 id=\"Using-minimum-should-match\"><a href=\"#Using-minimum-should-match\" class=\"headerlink\" title=\"Using minimum_should_match\"></a>Using minimum_should_match</h4><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用参数minimum_should_match 指定几个或百分数的should子句必须匹配。</span><br><span class=\"line\">如果一个<span class=\"built_in\">bool</span> qurey 包含至少一个should子句，没有must和filter，minimum_should_match默认为<span class=\"number\">1</span>，如果有must或filter默认为<span class=\"number\">0</span>；</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Example</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Integer</td>\n<td>3</td>\n<td>指定一个固定的值，与可选子句的数量无关；</td>\n</tr>\n<tr>\n<td>Negative   integer</td>\n<td>-2</td>\n<td>全部的可选子句的数量减去这个值必须被匹配.</td>\n</tr>\n<tr>\n<td>Percentage</td>\n<td>75%</td>\n<td>指定可选子句的总数的百分比必须被匹配,这个值的计算是向下取整的.</td>\n</tr>\n<tr>\n<td>Negative percentage</td>\n<td>-25%</td>\n<td>指定可选子句总数的百分比可以丢失. 计算同样是向下取整的. 然后从总数减去,以确定这个值</td>\n</tr>\n<tr>\n<td>Combination</td>\n<td>3&lt;90%</td>\n<td>一个正整数,跟一个&lt;,在跟一个任意的前面提到的判断条件. 表示如果可选子句的数量小于等于这个integer那么需要全部匹配,但是如果大于这个integer的话就会应用和&lt;后面的判断条件</td>\n</tr>\n<tr>\n<td>Multiple combinations</td>\n<td>2&lt;-25% 9&lt;-3</td>\n<td></td>\n</tr>\n</tbody></table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这个查询没有指定评分,所以返回的所有文档评分都为0</span><br><span class=\"line\">GET _search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;query&quot;: &#123;</span><br><span class=\"line\">    &quot;bool&quot;: &#123;</span><br><span class=\"line\">      &quot;filter&quot;: &#123;</span><br><span class=\"line\">        &quot;term&quot;: &#123;</span><br><span class=\"line\">          &quot;status&quot;: &quot;active&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这个查询因为有一个match_all query,所以会为每个返回的document分配一个1.0的评分</span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> _search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;bool&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;must&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&quot;filter&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;active&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">constant_score 与上面的查询的效果一样</span><br><span class=\"line\"><span class=\"builtin-name\">GET</span> _search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;constant_score&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;filter&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;active&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Named-queries\"><a href=\"#Named-queries\" class=\"headerlink\" title=\"Named queries\"></a>Named queries</h4><figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">每一个<span class=\"keyword\">query</span>接受一个_name在顶级中定义.你可以命名queries对于跟踪哪一个<span class=\"keyword\">query</span>匹配返回的document.如果named queries被使用,响应的hit中会包含match_queries属性</span><br><span class=\"line\"></span><br><span class=\"line\">GET /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;bool&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;should&quot;</span>: [</span><br><span class=\"line\">        &#123; <span class=\"string\">&quot;match&quot;</span>: &#123; <span class=\"string\">&quot;name.first&quot;</span>: &#123; <span class=\"string\">&quot;query&quot;</span>: <span class=\"string\">&quot;shay&quot;</span>, <span class=\"string\">&quot;_name&quot;</span>: <span class=\"string\">&quot;first&quot;</span> &#125; &#125; &#125;,</span><br><span class=\"line\">        &#123; <span class=\"string\">&quot;match&quot;</span>: &#123; <span class=\"string\">&quot;name.last&quot;</span>: &#123; <span class=\"string\">&quot;query&quot;</span>: <span class=\"string\">&quot;banon&quot;</span>, <span class=\"string\">&quot;_name&quot;</span>: <span class=\"string\">&quot;last&quot;</span> &#125; &#125; &#125;</span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"string\">&quot;filter&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;terms&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;name.last&quot;</span>: [ <span class=\"string\">&quot;banon&quot;</span>, <span class=\"string\">&quot;kimchy&quot;</span> ],</span><br><span class=\"line\">          <span class=\"string\">&quot;_name&quot;</span>: <span class=\"string\">&quot;test&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Boosting\"><a href=\"#Boosting\" class=\"headerlink\" title=\"Boosting\"></a>Boosting</h3><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">返回与<span class=\"keyword\">positive</span>查询匹配的document,同时降低与查询匹配的相关性得分 <span class=\"keyword\">negative</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">可以使用boosting查询来降级某些文档,而不必将他们从搜索结果[排除.</span><br><span class=\"line\">GET /_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;boosting&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;positive&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;text&quot;</span>: <span class=\"string\">&quot;apple&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&quot;negative&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;text&quot;</span>: <span class=\"string\">&quot;pie tart fruit crumble tree&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&quot;negative_boost&quot;</span>: <span class=\"number\">0.5</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">positive</span></span><br><span class=\"line\">\t要运行的查询.返回的所有文档都必须与此查询匹配</span><br><span class=\"line\"><span class=\"keyword\">negative</span></span><br><span class=\"line\">\t查询用于降低匹配文档的相关性得分.</span><br><span class=\"line\">\t如果返回的文档与<span class=\"keyword\">positive</span>查询和该查询匹配,则该boosting查询将按照如下计算文档的分</span><br><span class=\"line\">\t<span class=\"number\">1</span>,从<span class=\"keyword\">positive</span>查询中获取原始的相关性分数</span><br><span class=\"line\">\t<span class=\"number\">2</span>,将分数乘以negative_boost值</span><br><span class=\"line\">\t</span><br></pre></td></tr></table></figure>\n\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckgq712t500000gg01hf9hbbg","tag_id":"ckgq712td00020gg04e0l74gn","_id":"ckgq712th00070gg0ct5p9mfy"},{"post_id":"ckgq712te00030gg09r0pf7zp","tag_id":"ckgq712tg00060gg017rcfgyh","_id":"ckgq712tk000c0gg06sdi26ju"},{"post_id":"ckgq712th00080gg0ao1sdvr2","tag_id":"ckgq712tj000a0gg09tof95sz","_id":"ckgq712tn000g0gg0dvyna27y"},{"post_id":"ckgq712ti00090gg07sc7d73q","tag_id":"ckgq712tm000f0gg0ea74flbz","_id":"ckgq712tn000i0gg019ma9npw"},{"post_id":"ckgq712tk000d0gg09qrtcw5p","tag_id":"ckgq712tn000h0gg091xv02be","_id":"ckgq712to000j0gg08bvxdi3d"},{"post_id":"ckgq7a8tp0000wog0ash83wej","tag_id":"ckgq7a8tx0002wog0czmtft9i","_id":"ckgq7a8u40005wog04rg0dijt"},{"post_id":"ckgq7hw5h0003cwg0egp38w95","tag_id":"ckgq7a8tx0002wog0czmtft9i","_id":"ckgq7hw5i0004cwg05t4h1tvn"}],"Tag":[{"name":"CDH，spark","_id":"ckgq712td00020gg04e0l74gn"},{"name":"kafka,ISR,副本同步机制","_id":"ckgq712tg00060gg017rcfgyh"},{"name":"小书匠,语法,MARKDOWN,帮助","_id":"ckgq712tj000a0gg09tof95sz"},{"name":"新建,模板,小书匠","_id":"ckgq712tm000f0gg0ea74flbz"},{"name":"线程的概念，启动方式，常用方法","_id":"ckgq712tn000h0gg091xv02be"},{"name":"es,Query DSL","_id":"ckgq7a8tx0002wog0czmtft9i"}]}}